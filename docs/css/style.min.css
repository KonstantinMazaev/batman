@font-face{font-family:"Roboto";font-weight:400;font-style:normal;font-display:swap;src:url(../fonts/Roboto-Regular.eot);src:local("Roboto"),url(../fonts/Roboto-Regular.eot?#iefix) format("embedded-opentype"),url(../fonts/Roboto-Regular.woff2) format("woff2"),url(../fonts/Roboto-Regular.woff) format("woff"),url(../fonts/Roboto-Regular.ttf) format("truetype")}@font-face{font-family:"Roboto";font-weight:500;font-style:normal;font-display:swap;src:url(../fonts/Roboto-Medium.eot);src:local("Roboto"),url(../fonts/Roboto-Medium.eot?#iefix) format("embedded-opentype"),url(../fonts/Roboto-Medium.woff2) format("woff2"),url(../fonts/Roboto-Medium.woff) format("woff"),url(../fonts/Roboto-Medium.ttf) format("truetype")}html{font:.694445vw Roboto,sans-serif;-webkit-box-sizing:border-box;box-sizing:border-box;scroll-behavior:smooth;text-rendering:auto;margin:0;padding:0;height:100%;-webkit-text-size-adjust:100%}*,::after,::before{-webkit-box-sizing:inherit;box-sizing:inherit}:focus:not(:focus-visible){outline:0}body{background:#000;height:100vh;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;font-style:normal;font-weight:400;text-rendering:auto;margin:0;padding:0;height:100%;color:#fff}main{-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1}a,a:hover{text-decoration:none}input,textarea{line-height:inherit;margin:0;padding:0}input{border:0}a,button,input,textarea{outline:0;cursor:pointer}a,input,textarea{font:inherit;color:inherit}a:focus,button:focus,input:focus,textarea:focus{outline:0}a:active,button:active,input:active,textarea:active{outline:0}img,picture{width:100%;height:auto}fieldset,figure,h1,h2,h3,h4,h5,h6{font:inherit;margin:0;padding:0}p{margin:0}code,kbd,samp{font:inherit monospace,monospace}button{background:inherit;border:0;color:inherit;font:inherit;text-align:inherit;padding:0;text-rendering:auto}ul,ul li{padding:0;margin:0}ul li{list-style:none}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{-webkit-appearance:none;margin:0}input[type=number]{-moz-appearance:textfield}.container{width:129rem;margin:0 auto}.none{display:none!important}.block{display:block!important}.title{text-transform:uppercase}.burger{display:none}.burger .line{background:#fff;width:4rem;height:.5rem;display:block;margin:.5rem auto;-webkit-transition:all .3s ease-in-out;-o-transition:all .3s ease-in-out;transition:all .3s ease-in-out}.burger:hover{cursor:pointer}.burger.active{top:3.8rem}.burger.active .line:nth-child(2){opacity:0}.burger.active .line:nth-child(1){-webkit-transform:translateY(1rem) rotate(45deg);-ms-transform:translateY(1rem) rotate(45deg);transform:translateY(1rem) rotate(45deg)}.burger.active .line:nth-child(3){-webkit-transform:translateY(-1rem) rotate(-45deg);-ms-transform:translateY(-1rem) rotate(-45deg);transform:translateY(-1rem) rotate(-45deg)}.header{position:relative;padding:.9rem 0}.nav,.nav__list{display:-webkit-box;display:-ms-flexbox;display:flex}.nav{-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;font-weight:500;font-size:1.4rem;line-height:1.6rem;letter-spacing:.02rem}.nav__list{text-transform:uppercase;margin-right:1.4rem}.nav__link{display:block;padding:.7rem 1.4rem}.nav__link--active{background:#e90000}.header__hashtag{margin-right:7rem}.social{display:-webkit-box;display:-ms-flexbox;display:flex;gap:2rem}.social__link{display:block}.icon-facebook,.icon-instagram,.icon-twitter{fill:#fff;width:2.4rem;height:2.4rem}.mute{background:#fff;position:absolute;right:10rem;top:50%;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%);width:4.4rem;height:2.4rem;overflow:hidden;border-radius:3rem}.mute__label::after,.mute__label::before{content:"";position:absolute;top:.1rem;left:.1rem;display:block;height:2.2rem;width:2.2rem;-webkit-box-shadow:0 1px 1px rgba(69,2,2,.3);box-shadow:0 1px 1px rgba(69,2,2,.3);border-radius:50%;-webkit-transition:left .3s ease-in-out,right .3s ease-in-out;-o-transition:left .3s ease-in-out,right .3s ease-in-out;transition:left .3s ease-in-out,right .3s ease-in-out}.mute__label::before{background:#e90000 url(../img/svg/volume_off.svg) no-repeat center}.mute__label::after{right:-2.2rem;left:auto;background:#e90000 url(../img/svg/volume_up.svg) no-repeat center}.mute__checkbox{position:relative;width:100%;height:100%;padding:0;margin:0;opacity:0;z-index:3}.mute__checkbox:checked+.mute__label::before{left:-2.2rem}.mute__checkbox:checked+.mute__label::after{right:.1rem}.main__index{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;background:#e90000 url(../img/bg.jpg) no-repeat top/cover;padding-left:18rem}.logo{width:32.9rem}.footer,.footer__links{display:-webkit-box;display:-ms-flexbox;display:flex}.footer{padding:1rem 0;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center;font-weight:400;font-size:.9rem;line-height:1.1rem;letter-spacing:.02rem;text-transform:uppercase}.footer__links{margin-bottom:.6rem;gap:2.1rem}.footer__copyright{color:#6a6a6a}@supports (-webkit-appearance:none){.mute__label::before{background:#e90000 url(../img/svg/volume_off.svg) no-repeat center}.mute__label::after{background:#e90000 url(../img/svg/volume_up.svg) no-repeat center}.main__index{background:#e90000 url(../img/bg.webp) no-repeat top/cover}}@media (max-width:25.875em){html{font-size:1.5625vw;-webkit-text-size-adjust:none}.container{padding:0 3rem;width:100%}.burger{display:inline-block}}@media (min-width:25.9375em) and (max-width:48em){html{font-size:1.20482vw;-webkit-text-size-adjust:none}.container{padding:0 3rem;width:100%}.burger{display:inline-block}}@media (min-width:48.0625em) and (max-width:64em){html{font-size:.651042vw;-webkit-text-size-adjust:none}.container{padding:0 4rem;width:100%}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */