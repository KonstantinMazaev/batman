@font-face{font-family:"Roboto";font-weight:400;font-style:normal;font-display:swap;src:url(../fonts/Roboto-Regular.eot);src:local("Roboto"),url(../fonts/Roboto-Regular.eot?#iefix) format("embedded-opentype"),url(../fonts/Roboto-Regular.woff2) format("woff2"),url(../fonts/Roboto-Regular.woff) format("woff"),url(../fonts/Roboto-Regular.ttf) format("truetype")}@font-face{font-family:"Roboto";font-weight:500;font-style:normal;font-display:swap;src:url(../fonts/Roboto-Medium.eot);src:local("Roboto"),url(../fonts/Roboto-Medium.eot?#iefix) format("embedded-opentype"),url(../fonts/Roboto-Medium.woff2) format("woff2"),url(../fonts/Roboto-Medium.woff) format("woff"),url(../fonts/Roboto-Medium.ttf) format("truetype")}html{font:.694445vw Roboto,sans-serif;-webkit-box-sizing:border-box;box-sizing:border-box;scroll-behavior:smooth;text-rendering:auto;margin:0;padding:0;height:100%;-webkit-text-size-adjust:100%}*,::after,::before{-webkit-box-sizing:inherit;box-sizing:inherit}:focus:not(:focus-visible){outline:0}body{background:#000;height:100vh;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;font-style:normal;font-weight:400;text-rendering:auto;margin:0;padding:0;height:100%;color:#fff}main{-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1}a,a:hover{text-decoration:none}input,textarea{line-height:inherit;margin:0;padding:0}input{border:0}a,button,input,textarea{outline:0;cursor:pointer}a,input,textarea{font:inherit;color:inherit}a:focus,button:focus,input:focus,textarea:focus{outline:0}a:active,button:active,input:active,textarea:active{outline:0}img,picture{width:100%;height:auto}fieldset,figure,h1,h2,h3,h4,h5,h6{font:inherit;margin:0;padding:0}p{margin:0}code,kbd,samp{font:inherit monospace,monospace}button{background:inherit;border:0;color:inherit;font:inherit;text-align:inherit;padding:0;text-rendering:auto}ul,ul li{padding:0;margin:0}ul li{list-style:none}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{-webkit-appearance:none;margin:0}input[type=number]{-moz-appearance:textfield}.container{width:129rem;margin:0 auto}.none{display:none!important}.block{display:block!important}.noscroll{overflow:hidden}.title{text-transform:uppercase}.burger{display:none;z-index:1}.burger .line{background:#fff;width:4rem;height:.4rem;display:block;-webkit-transition:all .3s ease-in-out;-o-transition:all .3s ease-in-out;transition:all .3s ease-in-out}.burger .line:not(:last-child){margin-bottom:.6rem}.burger:hover{cursor:pointer}.burger.active{top:3.8rem}.burger.active .line:nth-child(2){opacity:0}.burger.active .line:nth-child(1){-webkit-transform:translateY(1rem) rotate(45deg);-ms-transform:translateY(1rem) rotate(45deg);transform:translateY(1rem) rotate(45deg)}.burger.active .line:nth-child(3){-webkit-transform:translateY(-1rem) rotate(-45deg);-ms-transform:translateY(-1rem) rotate(-45deg);transform:translateY(-1rem) rotate(-45deg)}.header{position:relative;padding:.9rem 0}.nav,.nav__list{display:-webkit-box;display:-ms-flexbox;display:flex}.nav{-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;font-weight:500;font-size:1.4rem;line-height:1.6rem;letter-spacing:.02rem}.nav__list{text-transform:uppercase;margin-right:1.4rem}.nav__link{display:block;padding:.7rem 1.4rem}.nav__link--active{background:#e90000}.header__hashtag{margin-right:7rem}.social{display:-webkit-box;display:-ms-flexbox;display:flex;gap:2rem}.social__link{display:block}.icon-facebook,.icon-instagram,.icon-twitter{fill:#fff;width:2.4rem;height:2.4rem}.mute{background:#fff;position:absolute;right:10rem;top:50%;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%);width:4.4rem;height:2.4rem;overflow:hidden;border-radius:3rem}.mute__label::after,.mute__label::before{content:"";position:absolute;top:.1rem;left:.1rem;display:block;height:2.2rem;width:2.2rem;-webkit-box-shadow:0 .1rem .1rem rgba(69,2,2,.3);box-shadow:0 .1rem .1rem rgba(69,2,2,.3);border-radius:50%;-webkit-transition:left .3s ease-in-out,right .3s ease-in-out;-o-transition:left .3s ease-in-out,right .3s ease-in-out;transition:left .3s ease-in-out,right .3s ease-in-out}.mute__label::before{background:#e90000 url(../img/svg/volume_off.svg) no-repeat center/contain}.mute__label::after{right:-2.2rem;left:auto;background:#e90000 url(../img/svg/volume_up.svg) no-repeat center/contain}.mute__checkbox{position:relative;width:100%;height:100%;padding:0;margin:0;opacity:0;z-index:3}.mute__checkbox:checked+.mute__label::before{left:-2.2rem}.mute__checkbox:checked+.mute__label::after{right:.1rem}.main__index{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;background:#e90000 url(../img/bg.jpg) no-repeat top/cover;padding-left:18rem}.logo{width:32.9rem}.footer,.footer__links{display:-webkit-box;display:-ms-flexbox;display:flex}.footer{padding:1rem 0;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center;font-weight:400;font-size:.9rem;line-height:1.1rem;letter-spacing:.02rem;text-transform:uppercase}.footer__links{margin-bottom:.6rem;gap:2.1rem}.footer__copyright{color:#6a6a6a}@supports (-webkit-appearance:none){.mute__label::before{background:#e90000 url(../img/svg/volume_off.svg) no-repeat center/contain}.mute__label::after{background:#e90000 url(../img/svg/volume_up.svg) no-repeat center/contain}.main__index{background:#e90000 url(../img/bg.webp) no-repeat top/cover}}@media (max-width:64em){.header{padding:1.8rem 0}.nav{font-size:2.8rem;line-height:3.2rem;letter-spacing:.04rem}.nav__list{margin-right:2.8rem}.nav__link{padding:1.4rem 2.8rem}.header__hashtag{margin-right:7rem}.social{gap:4rem}.icon-facebook,.icon-instagram,.icon-twitter,.mute{width:4.8rem;height:4.8rem}.mute{width:8.8rem;border-radius:6rem}.mute__label::after,.mute__label::before{top:.2rem;left:.2rem;height:4.4rem;width:4.4rem;-webkit-box-shadow:0 .2rem .2rem rgba(69,2,2,.3);box-shadow:0 .2rem .2rem rgba(69,2,2,.3)}.mute__label::after{right:-4.4rem;left:auto;background:#e90000 url(../img/svg/volume_up.svg) no-repeat center/contain}.mute__checkbox:checked+.mute__label::before{left:-4.4rem}.mute__checkbox:checked+.mute__label::after{right:.2rem}.footer{padding:2rem 4rem;font-size:1.2rem;line-height:1.4rem;letter-spacing:.04rem;text-align:center}.footer__links{margin-bottom:1.2rem;gap:2.8rem}@supports (-webkit-appearance:none){.mute__label::after{background:#e90000 url(../img/svg/volume_up.svg) no-repeat center/contain}}}@media (max-width:48em){.header{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:2rem 0 2rem 2rem}.mute{right:2rem}.main__index{background-image:-o-linear-gradient(89.89deg,rgba(0,0,0,.76) 32.14%,rgba(255,0,0,0) 72.56%),url(../img/bg-mob-2x.jpg);background-image:linear-gradient(.11deg,rgba(0,0,0,.76) 32.14%,rgba(255,0,0,0) 72.56%),url(../img/bg-mob-2x.jpg);-webkit-box-align:end;-ms-flex-align:end;align-items:flex-end;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;padding-left:0}.logo{margin-bottom:12.4rem;-webkit-animation:zoomIn 1s;animation:zoomIn 1s}@-webkit-keyframes zoomIn{0%{-webkit-transform:scale3d(0,0,0);transform:scale3d(0,0,0)}}@keyframes zoomIn{0%{-webkit-transform:scale3d(0,0,0);transform:scale3d(0,0,0)}}.nav,.nav__list{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.nav,.nav.active{-webkit-transition:-webkit-transform .5s;-o-transition:transform .5s;transition:transform .5s;transition:transform .5s,-webkit-transform .5s}.nav{-webkit-transform:translateX(-101%);-ms-transform:translateX(-101%);transform:translateX(-101%);position:fixed;top:0;left:0;bottom:0;width:48rem;background-color:#260707;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start;padding-top:9rem;text-align:center;-webkit-box-align:stretch;-ms-flex-align:stretch;align-items:stretch;font-size:2.8rem;line-height:3.2rem;letter-spacing:.04rem}.nav.active{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0);overflow-y:scroll}.nav__list{margin-right:0}.nav__item,.nav__list{margin-bottom:1.2rem}.nav__item:last-child{margin-bottom:0}.nav__link{padding:1.4rem 0}.header__hashtag{margin-right:0;margin-bottom:8rem}.social{-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;gap:3rem;margin-bottom:2rem}.icon-facebook,.icon-instagram,.icon-twitter{width:4.8rem;height:4.8rem}@supports (-webkit-appearance:none){.main__index{background-image:-o-linear-gradient(89.89deg,rgba(0,0,0,.76) 32.14%,rgba(255,0,0,0) 72.56%),url(../img/bg-mob-2x.webp);background-image:linear-gradient(.11deg,rgba(0,0,0,.76) 32.14%,rgba(255,0,0,0) 72.56%),url(../img/bg-mob-2x.webp)}}}@media (max-width:25.875em){html{font-size:1.5625vw;-webkit-text-size-adjust:none}.container{padding:0 3rem;width:100%}.burger{display:inline-block}}@media (min-width:25.9375em) and (max-width:48em){html{font-size:1.20482vw;-webkit-text-size-adjust:none}.container{padding:0 3rem;width:100%}.burger{display:inline-block}}@media (min-width:48.0625em) and (max-width:64em){html{font-size:.651042vw;-webkit-text-size-adjust:none}.container{padding:0 4rem;width:100%}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNldHRpbmdzL2ZvbnRzLnNjc3MiLCJzdHlsZS5taW4uY3NzIiwic3R5bGUuY3NzIiwic2V0dGluZ3Mvc2V0LnNjc3MiLCJzZXR0aW5ncy9taXhpbnMuc2NzcyIsImJsb2Nrcy90aXRsZS5zY3NzIiwiYmxvY2tzL2J1cmdlci5zY3NzIiwiYmxvY2tzL2hlYWRlci5zY3NzIiwiYmxvY2tzL21haW4uc2NzcyIsImJsb2Nrcy9mb290ZXIuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQSxBQUFBLFdBQ0ksb0IsQ0FDQSxlLENBQ0EsaUIsQ0FDQSxpQixDQUNBLG9DLENBQ0EsZ1AsQUNHSixXRE1JLG9CLENBQ0EsZSxDQUNBLGlCLENBQ0EsaUIsQ0FDQSxtQyxDRUpKLDRPREdBLEksQ0VkSSxnQyxDQUNBLDZCLENBQ0EscUIsQ0FDQSxzQixDQUNBLG1CLENBQ0EsUSxDQUNBLFMsQ0FDQSxXLENBQ0EsNkIsQ0ZrQkosQyxDRWRBLE8sQ0ZnQkEsUSxDQUNFLDBCLENFZEUsa0IsQ0ZrQkosV0FBWSxlLENFZlosUyxDRm1CQSxJLENFZkEsZSxDQUNJLFksQ0FDQSxtQixDQUFBLG1CLENBQUEsWSxDQUNBLDJCLENBQUEsNEIsQ0ZvQkYseUIsQ0FDQSxxQixDRXBCRSx3QixDRnNCRixxQixDQUNBLDZCLENFdEJFLGlCLENBQ0EsZSxDQUNBLG1CLENBQ0EsUSxDQUNBLFMsQ0FDQSxXLENBQ0EsVSxDRjBCSixJLENFdEJBLGtCLENBQ0ksbUIsQ0Z3QkYsVyxDQUdGLEMsQ0V4QkEsTyxDRjBCRSxvQixDQUdGLEssQ0V4QkEsUSxDRjBCRSxtQixDRXhCRSxRLENBQ0EsUyxDRjRCSixLLENBRUUsUSxDQU9GLEMsQ0FGQSxNLENBUEEsSyxDQVVBLFEsQ0FDRSxTLENFeEJFLGMsQ0ZzQkosQyxDQVRBLEssQ0FVQSxRLENFdEJJLFksQ0FDQSxhLENGOEJKLE8sQ0UzQkksWSxDRjBCSixXLENBRUEsYyxDRTNCUSxTLENGaUNSLFEsQ0FGQSxhLENBQ0EsWSxDQUVBLGUsQ0NWQSxTLENEY0EsRyxDQUNBLE8sQ0U1QkksVSxDRG1CSixXLENEcUJBLFEsQ0FEQSxNLENBTkEsRSxDQUNBLEUsQ0FDQSxFLENBQ0EsRSxDQUNBLEUsQ0FDQSxFLENFMUJJLFksQ0FDQSxRLENEbUJKLFMsQ0RjQSxDLENDVkEsUSxDRGNBLEksQ0FDQSxHLENBQ0EsSSxDRTVCSSxnQyxDQUdKLE0sQ0FDSSxrQixDQUNBLFEsQ0FDQSxhLENBQ0EsWSxDQUNBLGtCLENBQ0EsUyxDQUNBLG1CLENBR0osRSxDRmtDQSxLLENFakNJLFMsQ0FDQSxRLENGZ0NKLEssQ0NSQSxlLENEY0EsNkMsQ0FDQSw2QyxDRTNCSSx1QixDRGtCSixRLENEY0Esa0IsQ0NWQSx5QixDRGNBLFUsQ0UzQkksWSxDRGtCSixhLENEY0EsSyxDQUNFLHNCLENBR0YsTSxDRTVCSSx1QixDRmdDSixTLENDVkEsZSxDRGNBLE0sQ0FDRSx3QixDQUdGLE8sQ0FDRSxZLENBQ0EsUyxDR2hMRSxhLENEd0pBLGUsQ0Y2QkYsVSxDQUNBLFksQ0NWQSxhLENEWUEsc0MsQ0U1QkUsaUMsQ0Y4QkYsOEIsQ0NSRixrQkFBQSxZLENDaEJBLG1CLENGK0JBLGEsQ0UzQkEsYyxDRitCQSxjLENFM0JBLFUsQ0YrQkEsaUMsQ0k1TkEsUyxDSmdPQSxpQyxDS2hPQSxnRCxDQUNJLDRDLENBQ0Esd0MsQ0xvT0osaUMsQ0tqT1ksa0QsQ0FDQSw4QyxDQUNBLDBDLENMcU9aLE8sQ0NaQSxpQixDSXZOWSxlLENGRlIsSSxDSDBQSixVLENDWkEsbUIsQ0RjRSxtQixDS3JPRixZLENGdkJJLEksQ0ZpT0osdUIsQ0UzTkksb0IsQ0VNSSxzQixDTHFPTix3QixDQ1pBLHFCLENBQ0Ysa0IsQ0RjRSxlLENLbk9GLGdCLENBQ0ksa0IsQ0p3TkoscUIsQ0RnQkEsVSxDS2xPSSx3QixDSjBOSixtQixDRGdCQSxVLENBQ0UsYSxDQUNBLG9CLENLdk9GLGtCLENBQ0ksa0IsQ0o0TkosZ0IsQ0RrQkUsaUIsQ0FHRixPLENDaEJBLG1CLENEa0JFLG1CLENNcFJGLFksQ0FDSSxRLENOd1JKLGEsQ0FDRSxhLENBR0YsYyxDQUNBLGUsQ0FDQSxhLENHalNJLFMsQ0FDQSxZLENHTUEsYSxDQUVKLEssQ0FDSSxlLENBQUEsaUIsQ0FBQSxXLENBQ0EsTyxDQUNBLGtDLENMd1FKLDhCLENEMEJFLDBCLENNaFNGLFksQ0FDSSxhLENBQ0EsZSxDTHlRSixrQixDQUlBLG1CLENEd0JBLG9CLENBRUUsVSxDTWxTRixpQixDQUNJLFMsQ0wyUUosVSxDRDBCRSxhLENNblNGLGEsQ0FDSSxZLENBQUEsZ0QsQ0FBQSx3QyxDQUNBLGlCLENMNFFKLDZELENENEJFLHdELENNdFNGLHFELENOMFNBLG9CLENNdlNBLDBFLENOMlNBLG1CLENDMUJBLGEsQ0Q0QkUsUyxDTXhTRix5RSxDTjRTQSxlLENNeFNJLGlCLENOMFNGLFUsQ0FDQSxXLENNMVNFLFMsQ0FDQSxRLENBQ0EsUyxDQUNBLFMsQ044U0osNEMsQ00zU0EsWSxDTitTQSwyQyxDTTNTSSxXLENOK1NKLFksQ00zU0ksbUIsQ042U0YsbUIsQ001U0UsWSxDQUNBLHdCLENBQUEscUIsQ0FBQSxrQixDTGdSSix5RCxDRGlDRSxrQixDQzdCRixLLENEaUNFLGEsQ0FHRixPLENBbUJBLGMsQ0MvQkEsbUIsQ0RpQ0UsbUIsQ0duVkUsWSxDSDhUSixPLENNL1NJLGMsQ0FHQSwyQixDQUNBLDRCLENBQ0EseUIsQ0FDQSxxQixDQUNBLHdCLENBQ0EscUIsQ0FDQSxrQixDTGtSSixlLENEaUNFLGUsQ01qVEYsa0IsQ0FDSSxxQixDTG1SSix3QixDRG1DQSxjLENNL1NJLG1CLENOb1RGLFUsQ0FHRixrQixDQUNFLGEsQ0FHRixXQ2hDRSx1QixFRGlDQSxvQixDTXBURSwwRSxDTndURixtQixDTXJURSx5RSxDTnlURixZLENNdFRFLDRELEFOMlRKLHdCQUNFLE8sQ0MvQkEsZ0IsQ0RtQ0EsSSxDTXhUTSxnQixDTDBSTixrQixDRGlDRSxxQixDQUdGLFUsQ016VE0sbUIsQ0FFSixVLENBQ0kscUIsQ044VE4sZ0IsQ00xVE0saUIsQ044VE4sTyxDTTVURSxRLENOZ1VGLGMsQ0NoQ0EsZSxDRGtDQSxhLENNMVRFLEssQ0FIQSxZLENBQ0ksYSxDQUVKLEssQ0FDSSxZLENOaVVKLGtCLENBSUYsbUIsQ0FEQSxvQixDTTlUTSxTLENBQ0EsVSxDTGdTTixhLENEa0NFLFksQ01oVUEsZ0QsQ0FDSSx3QyxDTG1TUixtQixDRWxZSSxhLENHcUdBLFMsQ0FDSSx5RSxDTm1VTiw0QyxDQUNFLFksQ0NsQ0YsMkMsQ0RzQ0UsVyxDQ2xDRixPLENEc0NFLGlCLENNclVBLGdCLENBQ0ksa0IsQ0FBQSxxQixDQUNBLGlCLENOMFVOLGMsQ0FDRSxvQixDQUNBLFUsQ0FHSixXQUFXLHVCLEVNM1VQLG1CLENBQ0ksNEUsQU5pVlIsd0JBQ0UsTyxDQUNFLG1CLENBQ0EsbUIsQ0MzQ0EsWSxDQUNGLHdCLENENkNFLHFCLENNblZBLGtCLENBQ0ksd0IsQ051Vk4sSyxDQ2xEQSxVLENEc0RBLFksQ0FDRSxxSCxDTXJWSSxnSCxDQUNBLHFCLENBQ0Esa0IsQ0FDQSxvQixDQUNBLHVCLENBQ0Esb0IsQ0FDQSxzQixDQUFBLGMsQ04wVk4sSyxDQUNFLHFCLENBQ0EsMkIsQ00xVkksbUIsQ044VlIsMEJBQ0ksRSxDTTVWSSxnQyxDQUNBLDBCLEFOaVdSLGtCTS9WUSxFLENBQUEsZ0MsQ0xrU04sMEJEb0VBLEksQ0E0Q0EsVSxDTWpYTSwyQixDTHdTTiw0QixDQUNGLHlCLENNdmdCQSxxQixDUG1pQkUsSSxDQWdDQSxXLENNM1dNLHdDLENOaVhKLDJCLENNaFhJLHdCLENBQ0EsOEMsQ055VU4sSSxDQUNFLG1DLENNbldJLCtCLENBQUEsMkIsQ0FBQSxjLENBQUEsSyxDQUFBLE0sQ0FDQSxRLENMbVNOLFcsQ0R1RUUsd0IsQ0FLQSxzQixDTTNXSSxtQixDQUNBLDBCLENMb1NOLGdCLENEMEVFLGlCLENNNVdBLHlCLENBQ0ksc0IsQ0xxU04sbUIsQ0twU00sZ0IsQ0FDSSxrQixDTHNTVixxQixDRGlGQSxXLENDeEVBLCtCLENEMEVFLDJCLENNOVdBLHVCLENMMFNGLGlCLENEOEVBLFUsQ085a0JFLGMsQ1B1bEJGLFUsQ0FUQSxVLENBVUUsb0IsQ0M1RUoscUIsQ0RnRkksZSxDQzVFSixVLENEZ0ZJLGdCLENRL2xCQSxnQixDQUFBLGMsQ0FBQSxrQixDUnVtQkYsTyxDQUNFLHVCLENRdG1CQSxvQixDUndtQkEsc0IsQ0FDQSxRLENHNW1CQSxrQixDS0tBLGMsQ0FDQSxlLENQc2hCSixhLENEdUZJLFksQ1ExbUJKLGEsQ1I4bUJBLFdRN21CSSx1QixFQUNBLFksQ0FDQSxzSCxDUHNoQkosb0gsQUFLQSw0QkFDQSxJLENBQ0Esa0IsQ0FDQSw2QixDQUdDLFUsQ0R5RkcsYyxDQ3ZGSixVLENEMkZFLE8sQ0N2RkYsc0IsQUFRQSxrRER5RkUsSSxDQ3ZGRCxtQixDRHlGRyw2QixDQ3JGSixVLENEeUZJLGMsQ0N2RkosVSxDRDJGRSxPLENDdkZGLHNCLEFBUUEsa0RBQ0EsSSxDQUNBLG1CLENEeUZJLDZCLENBR0YsVSxDQUNFLGMsQ0FDQSxZIiwiZmlsZSI6InN0eWxlLm1pbi5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAZm9udC1mYWNlIHtcclxuICAgIGZvbnQtZmFtaWx5OiAnUm9ib3RvJztcclxuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XHJcbiAgICBmb250LWRpc3BsYXk6IHN3YXA7XHJcbiAgICBzcmM6IHVybCgnLi4vZm9udHMvUm9ib3RvLVJlZ3VsYXIuZW90Jyk7XHJcbiAgICBzcmM6IGxvY2FsKCdSb2JvdG8nKSxcclxuICAgICAgICB1cmwoJy4uL2ZvbnRzL1JvYm90by1SZWd1bGFyLmVvdD8jaWVmaXgnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksXHJcbiAgICAgICAgdXJsKCcuLi9mb250cy9Sb2JvdG8tUmVndWxhci53b2ZmMicpIGZvcm1hdCgnd29mZjInKSxcclxuICAgICAgICB1cmwoJy4uL2ZvbnRzL1JvYm90by1SZWd1bGFyLndvZmYnKSBmb3JtYXQoJ3dvZmYnKSxcclxuICAgICAgICB1cmwoJy4uL2ZvbnRzL1JvYm90by1SZWd1bGFyLnR0ZicpIGZvcm1hdCgndHJ1ZXR5cGUnKTtcclxufVxyXG4gIFxyXG4gIEBmb250LWZhY2Uge1xyXG4gICAgZm9udC1mYW1pbHk6ICdSb2JvdG8nO1xyXG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcclxuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuICAgIGZvbnQtZGlzcGxheTogc3dhcDtcclxuICAgIHNyYzogdXJsKCcuLi9mb250cy9Sb2JvdG8tTWVkaXVtLmVvdCcpO1xyXG4gICAgc3JjOiBsb2NhbCgnUm9ib3RvJyksXHJcbiAgICAgICAgdXJsKCcuLi9mb250cy9Sb2JvdG8tTWVkaXVtLmVvdD8jaWVmaXgnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksXHJcbiAgICAgICAgdXJsKCcuLi9mb250cy9Sb2JvdG8tTWVkaXVtLndvZmYyJykgZm9ybWF0KCd3b2ZmMicpLFxyXG4gICAgICAgIHVybCgnLi4vZm9udHMvUm9ib3RvLU1lZGl1bS53b2ZmJykgZm9ybWF0KCd3b2ZmJyksXHJcbiAgICAgICAgdXJsKCcuLi9mb250cy9Sb2JvdG8tTWVkaXVtLnR0ZicpIGZvcm1hdCgndHJ1ZXR5cGUnKTtcclxuICAgIFxyXG4gIH1cclxuIiwiQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbiAgc3JjOiB1cmwoXCIuLi9mb250cy9Sb2JvdG8tUmVndWxhci5lb3RcIik7XG4gIHNyYzogbG9jYWwoXCJSb2JvdG9cIiksIHVybChcIi4uL2ZvbnRzL1JvYm90by1SZWd1bGFyLmVvdD8jaWVmaXhcIikgZm9ybWF0KFwiZW1iZWRkZWQtb3BlbnR5cGVcIiksIHVybChcIi4uL2ZvbnRzL1JvYm90by1SZWd1bGFyLndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCIuLi9mb250cy9Sb2JvdG8tUmVndWxhci53b2ZmXCIpIGZvcm1hdChcIndvZmZcIiksIHVybChcIi4uL2ZvbnRzL1JvYm90by1SZWd1bGFyLnR0ZlwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKTtcbn1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNTAwO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbiAgc3JjOiB1cmwoXCIuLi9mb250cy9Sb2JvdG8tTWVkaXVtLmVvdFwiKTtcbiAgc3JjOiBsb2NhbChcIlJvYm90b1wiKSwgdXJsKFwiLi4vZm9udHMvUm9ib3RvLU1lZGl1bS5lb3Q/I2llZml4XCIpIGZvcm1hdChcImVtYmVkZGVkLW9wZW50eXBlXCIpLCB1cmwoXCIuLi9mb250cy9Sb2JvdG8tTWVkaXVtLndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCIuLi9mb250cy9Sb2JvdG8tTWVkaXVtLndvZmZcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKFwiLi4vZm9udHMvUm9ib3RvLU1lZGl1bS50dGZcIikgZm9ybWF0KFwidHJ1ZXR5cGVcIik7XG59XG5cbmh0bWwge1xuICBmb250OiBub3JtYWwgbm9ybWFsIDAuNjk0NDQ1dncgUm9ib3RvLCBzYW5zLXNlcmlmO1xuICAtd2Via2l0LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIHNjcm9sbC1iZWhhdmlvcjogc21vb3RoO1xuICB0ZXh0LXJlbmRlcmluZzogYXV0bztcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBoZWlnaHQ6IDEwMCU7XG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbn1cblxuKixcbio6OmFmdGVyLFxuKjo6YmVmb3JlIHtcbiAgLXdlYmtpdC1ib3gtc2l6aW5nOiBpbmhlcml0O1xuICBib3gtc2l6aW5nOiBpbmhlcml0O1xufVxuXG4qOmZvY3VzOm5vdCg6Zm9jdXMtdmlzaWJsZSkge1xuICBvdXRsaW5lOiBub25lO1xufVxuXG5ib2R5IHtcbiAgYmFja2dyb3VuZDogIzAwMDAwMDtcbiAgaGVpZ2h0OiAxMDB2aDtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAtd2Via2l0LWJveC1kaXJlY3Rpb246IG5vcm1hbDtcbiAgLW1zLWZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIC13ZWJraXQtYm94LXBhY2s6IGp1c3RpZnk7XG4gIC1tcy1mbGV4LXBhY2s6IGp1c3RpZnk7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICB0ZXh0LXJlbmRlcmluZzogYXV0bztcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGNvbG9yOiAjRkZGRkZGO1xufVxuXG5tYWluIHtcbiAgLXdlYmtpdC1ib3gtZmxleDogMTtcbiAgLW1zLWZsZXgtcG9zaXRpdmU6IDE7XG4gIGZsZXgtZ3JvdzogMTtcbn1cblxuYSxcbmE6aG92ZXIge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbmlucHV0LFxudGV4dGFyZWEge1xuICBsaW5lLWhlaWdodDogaW5oZXJpdDtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xufVxuXG5pbnB1dCxcbmJ1dHRvbiB7XG4gIGJvcmRlcjogbm9uZTtcbiAgb3V0bGluZTogbm9uZTtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG5idXR0b24sXG5pbnB1dCxcbmEsXG50ZXh0YXJlYSB7XG4gIG91dGxpbmU6IG5vbmU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgZm9udDogaW5oZXJpdDtcbiAgY29sb3I6IGluaGVyaXQ7XG59XG5cbmJ1dHRvbjpmb2N1cyxcbmlucHV0OmZvY3VzLFxuYTpmb2N1cyxcbnRleHRhcmVhOmZvY3VzIHtcbiAgb3V0bGluZTogbm9uZTtcbn1cblxuYnV0dG9uOmFjdGl2ZSxcbmlucHV0OmFjdGl2ZSxcbmE6YWN0aXZlLFxudGV4dGFyZWE6YWN0aXZlIHtcbiAgb3V0bGluZTogbm9uZTtcbn1cblxuaW1nLFxucGljdHVyZSB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IGF1dG87XG59XG5cbmgxLFxuaDIsXG5oMyxcbmg0LFxuaDUsXG5oNixcbmZpZ3VyZSxcbmZpZWxkc2V0IHtcbiAgZm9udDogaW5oZXJpdDtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xufVxuXG5wIHtcbiAgbWFyZ2luOiAwO1xufVxuXG5jb2RlLFxua2JkLFxuc2FtcCB7XG4gIGZvbnQ6IGluaGVyaXQgbW9ub3NwYWNlLCBtb25vc3BhY2U7XG59XG5cbmJ1dHRvbiB7XG4gIGJhY2tncm91bmQ6IGluaGVyaXQ7XG4gIGJvcmRlcjogbm9uZTtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIGZvbnQ6IGluaGVyaXQ7XG4gIHRleHQtYWxpZ246IGluaGVyaXQ7XG4gIHBhZGRpbmc6IDA7XG4gIHRleHQtcmVuZGVyaW5nOiBhdXRvO1xufVxuXG51bCB7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogMDtcbn1cblxudWwgbGkge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG59XG5cbmlucHV0W3R5cGU9bnVtYmVyXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcbmlucHV0W3R5cGU9bnVtYmVyXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbiAgbWFyZ2luOiAwO1xufVxuXG5pbnB1dFt0eXBlPW51bWJlcl0ge1xuICAtbW96LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcbn1cblxuLmNvbnRhaW5lciB7XG4gIHdpZHRoOiAxMjlyZW07XG4gIG1hcmdpbjogMCBhdXRvO1xufVxuXG4ubm9uZSB7XG4gIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcbn1cblxuLmJsb2NrIHtcbiAgZGlzcGxheTogYmxvY2sgIWltcG9ydGFudDtcbn1cblxuLm5vc2Nyb2xsIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLnRpdGxlIHtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbn1cblxuLmJ1cmdlciB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIHotaW5kZXg6IDE7XG59XG5cbi5idXJnZXIgLmxpbmUge1xuICBiYWNrZ3JvdW5kOiAjZmZmO1xuICB3aWR0aDogNHJlbTtcbiAgaGVpZ2h0OiAwLjRyZW07XG4gIGRpc3BsYXk6IGJsb2NrO1xuICAtd2Via2l0LXRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2UtaW4tb3V0O1xuICAtby10cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlLWluLW91dDtcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZS1pbi1vdXQ7XG59XG5cbi5idXJnZXIgLmxpbmU6bm90KDpsYXN0LWNoaWxkKSB7XG4gIG1hcmdpbi1ib3R0b206IDAuNnJlbTtcbn1cblxuLmJ1cmdlcjpob3ZlciB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLmJ1cmdlci5hY3RpdmUge1xuICB0b3A6IDMuOHJlbTtcbn1cblxuLmJ1cmdlci5hY3RpdmUgLmxpbmU6bnRoLWNoaWxkKDIpIHtcbiAgb3BhY2l0eTogMDtcbn1cblxuLmJ1cmdlci5hY3RpdmUgLmxpbmU6bnRoLWNoaWxkKDEpIHtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMXJlbSkgcm90YXRlKDQ1ZGVnKTtcbiAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgxcmVtKSByb3RhdGUoNDVkZWcpO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMXJlbSkgcm90YXRlKDQ1ZGVnKTtcbn1cblxuLmJ1cmdlci5hY3RpdmUgLmxpbmU6bnRoLWNoaWxkKDMpIHtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTFyZW0pIHJvdGF0ZSgtNDVkZWcpO1xuICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xcmVtKSByb3RhdGUoLTQ1ZGVnKTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xcmVtKSByb3RhdGUoLTQ1ZGVnKTtcbn1cblxuLmhlYWRlciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcGFkZGluZzogMC45cmVtIDA7XG59XG5cbi5uYXYge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtYm94LXBhY2s6IGNlbnRlcjtcbiAgLW1zLWZsZXgtcGFjazogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgZm9udC1zaXplOiAxLjRyZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjZyZW07XG4gIGxldHRlci1zcGFjaW5nOiAwLjAycmVtO1xufVxuXG4ubmF2X19saXN0IHtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBtYXJnaW4tcmlnaHQ6IDEuNHJlbTtcbn1cblxuLm5hdl9fbGluayB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBwYWRkaW5nOiAwLjdyZW0gMS40cmVtO1xufVxuXG4ubmF2X19saW5rLS1hY3RpdmUge1xuICBiYWNrZ3JvdW5kOiAjRTkwMDAwO1xufVxuXG4uaGVhZGVyX19oYXNodGFnIHtcbiAgbWFyZ2luLXJpZ2h0OiA3cmVtO1xufVxuXG4uc29jaWFsIHtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICBnYXA6IDJyZW07XG59XG5cbi5zb2NpYWxfX2xpbmsge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLmljb24tZmFjZWJvb2ssXG4uaWNvbi1pbnN0YWdyYW0sXG4uaWNvbi10d2l0dGVyIHtcbiAgZmlsbDogI0ZGRkZGRjtcbiAgd2lkdGg6IDIuNHJlbTtcbiAgaGVpZ2h0OiAyLjRyZW07XG59XG5cbi5tdXRlIHtcbiAgYmFja2dyb3VuZDogI0ZGRkZGRjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICByaWdodDogMTByZW07XG4gIHRvcDogNTAlO1xuICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbiAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xuICB3aWR0aDogNC40cmVtO1xuICBoZWlnaHQ6IDIuNHJlbTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgYm9yZGVyLXJhZGl1czogM3JlbTtcbn1cblxuLm11dGVfX2xhYmVsOjpiZWZvcmUsXG4ubXV0ZV9fbGFiZWw6OmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDAuMXJlbTtcbiAgbGVmdDogMC4xcmVtO1xuICBkaXNwbGF5OiBibG9jaztcbiAgaGVpZ2h0OiAyLjJyZW07XG4gIHdpZHRoOiAyLjJyZW07XG4gIC13ZWJraXQtYm94LXNoYWRvdzogMCAwLjFyZW0gMC4xcmVtIHJnYmEoNjksIDIsIDIsIDAuMyk7XG4gIGJveC1zaGFkb3c6IDAgMC4xcmVtIDAuMXJlbSByZ2JhKDY5LCAyLCAyLCAwLjMpO1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogbGVmdCAwLjNzIGVhc2UtaW4tb3V0LCByaWdodCAwLjNzIGVhc2UtaW4tb3V0O1xuICAtby10cmFuc2l0aW9uOiBsZWZ0IDAuM3MgZWFzZS1pbi1vdXQsIHJpZ2h0IDAuM3MgZWFzZS1pbi1vdXQ7XG4gIHRyYW5zaXRpb246IGxlZnQgMC4zcyBlYXNlLWluLW91dCwgcmlnaHQgMC4zcyBlYXNlLWluLW91dDtcbn1cblxuLm11dGVfX2xhYmVsOjpiZWZvcmUge1xuICBiYWNrZ3JvdW5kOiAjRTkwMDAwIHVybChcIi4uL2ltZy9zdmcvdm9sdW1lX29mZi5zdmdcIikgbm8tcmVwZWF0IGNlbnRlci9jb250YWluO1xufVxuXG4ubXV0ZV9fbGFiZWw6OmFmdGVyIHtcbiAgcmlnaHQ6IC0yLjJyZW07XG4gIGxlZnQ6IGF1dG87XG4gIGJhY2tncm91bmQ6ICNFOTAwMDAgdXJsKFwiLi4vaW1nL3N2Zy92b2x1bWVfdXAuc3ZnXCIpIG5vLXJlcGVhdCBjZW50ZXIvY29udGFpbjtcbn1cblxuLm11dGVfX2NoZWNrYm94IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IDA7XG4gIG9wYWNpdHk6IDA7XG4gIHotaW5kZXg6IDM7XG59XG5cbi5tdXRlX19jaGVja2JveDpjaGVja2VkICsgLm11dGVfX2xhYmVsOjpiZWZvcmUge1xuICBsZWZ0OiAtMi4ycmVtO1xufVxuXG4ubXV0ZV9fY2hlY2tib3g6Y2hlY2tlZCArIC5tdXRlX19sYWJlbDo6YWZ0ZXIge1xuICByaWdodDogMC4xcmVtO1xufVxuXG4ubWFpbl9faW5kZXgge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGJhY2tncm91bmQ6ICNFOTAwMDAgdXJsKFwiLi4vaW1nL2JnLmpwZ1wiKSBuby1yZXBlYXQgdG9wL2NvdmVyO1xuICBwYWRkaW5nLWxlZnQ6IDE4cmVtO1xufVxuXG4ubG9nbyB7XG4gIHdpZHRoOiAzMi45cmVtO1xufVxuXG4uZm9vdGVyIHtcbiAgcGFkZGluZzogMXJlbSAwO1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtYm94LW9yaWVudDogdmVydGljYWw7XG4gIC13ZWJraXQtYm94LWRpcmVjdGlvbjogbm9ybWFsO1xuICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAwLjlyZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjFyZW07XG4gIGxldHRlci1zcGFjaW5nOiAwLjAycmVtO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xufVxuXG4uZm9vdGVyX19saW5rcyB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgbWFyZ2luLWJvdHRvbTogMC42cmVtO1xuICBnYXA6IDIuMXJlbTtcbn1cblxuLmZvb3Rlcl9fY29weXJpZ2h0IHtcbiAgY29sb3I6ICM2QTZBNkE7XG59XG5cbkBzdXBwb3J0cyAoLXdlYmtpdC1hcHBlYXJhbmNlOm5vbmUpIHtcbiAgLm11dGVfX2xhYmVsOjpiZWZvcmUge1xuICAgIGJhY2tncm91bmQ6ICNFOTAwMDAgdXJsKFwiLi4vaW1nL3N2Zy92b2x1bWVfb2ZmLnN2Z1wiKSBuby1yZXBlYXQgY2VudGVyL2NvbnRhaW47XG4gIH1cblxuICAubXV0ZV9fbGFiZWw6OmFmdGVyIHtcbiAgICBiYWNrZ3JvdW5kOiAjRTkwMDAwIHVybChcIi4uL2ltZy9zdmcvdm9sdW1lX3VwLnN2Z1wiKSBuby1yZXBlYXQgY2VudGVyL2NvbnRhaW47XG4gIH1cblxuICAubWFpbl9faW5kZXgge1xuICAgIGJhY2tncm91bmQ6ICNFOTAwMDAgdXJsKFwiLi4vaW1nL2JnLndlYnBcIikgbm8tcmVwZWF0IHRvcC9jb3ZlcjtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNjRlbSkge1xuICAuaGVhZGVyIHtcbiAgICBwYWRkaW5nOiAxLjhyZW0gMDtcbiAgfVxuXG4gIC5uYXYge1xuICAgIGZvbnQtc2l6ZTogMi44cmVtO1xuICAgIGxpbmUtaGVpZ2h0OiAzLjJyZW07XG4gICAgbGV0dGVyLXNwYWNpbmc6IDAuMDRyZW07XG4gIH1cblxuICAubmF2X19saXN0IHtcbiAgICBtYXJnaW4tcmlnaHQ6IDIuOHJlbTtcbiAgfVxuXG4gIC5uYXZfX2xpbmsge1xuICAgIHBhZGRpbmc6IDEuNHJlbSAyLjhyZW07XG4gIH1cblxuICAuaGVhZGVyX19oYXNodGFnIHtcbiAgICBtYXJnaW4tcmlnaHQ6IDdyZW07XG4gIH1cblxuICAuc29jaWFsIHtcbiAgICBnYXA6IDRyZW07XG4gIH1cblxuICAuaWNvbi1mYWNlYm9vayxcbiAgLmljb24taW5zdGFncmFtLFxuICAuaWNvbi10d2l0dGVyIHtcbiAgICB3aWR0aDogNC44cmVtO1xuICAgIGhlaWdodDogNC44cmVtO1xuICB9XG5cbiAgLm11dGUge1xuICAgIHdpZHRoOiA4LjhyZW07XG4gICAgaGVpZ2h0OiA0LjhyZW07XG4gICAgYm9yZGVyLXJhZGl1czogNnJlbTtcbiAgfVxuXG4gIC5tdXRlX19sYWJlbDo6YmVmb3JlLFxuICAubXV0ZV9fbGFiZWw6OmFmdGVyIHtcbiAgICB0b3A6IDAuMnJlbTtcbiAgICBsZWZ0OiAwLjJyZW07XG4gICAgaGVpZ2h0OiA0LjRyZW07XG4gICAgd2lkdGg6IDQuNHJlbTtcbiAgICAtd2Via2l0LWJveC1zaGFkb3c6IDAgMC4ycmVtIDAuMnJlbSByZ2JhKDY5LCAyLCAyLCAwLjMpO1xuICAgIGJveC1zaGFkb3c6IDAgMC4ycmVtIDAuMnJlbSByZ2JhKDY5LCAyLCAyLCAwLjMpO1xuICB9XG5cbiAgLm11dGVfX2xhYmVsOjphZnRlciB7XG4gICAgcmlnaHQ6IC00LjRyZW07XG4gICAgbGVmdDogYXV0bztcbiAgICBiYWNrZ3JvdW5kOiAjRTkwMDAwIHVybChcIi4uL2ltZy9zdmcvdm9sdW1lX3VwLnN2Z1wiKSBuby1yZXBlYXQgY2VudGVyL2NvbnRhaW47XG4gIH1cblxuICAubXV0ZV9fY2hlY2tib3g6Y2hlY2tlZCArIC5tdXRlX19sYWJlbDo6YmVmb3JlIHtcbiAgICBsZWZ0OiAtNC40cmVtO1xuICB9XG5cbiAgLm11dGVfX2NoZWNrYm94OmNoZWNrZWQgKyAubXV0ZV9fbGFiZWw6OmFmdGVyIHtcbiAgICByaWdodDogMC4ycmVtO1xuICB9XG5cbiAgLmZvb3RlciB7XG4gICAgcGFkZGluZzogMnJlbSA0cmVtO1xuICAgIGZvbnQtc2l6ZTogMS4ycmVtO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjRyZW07XG4gICAgbGV0dGVyLXNwYWNpbmc6IDAuMDRyZW07XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB9XG5cbiAgLmZvb3Rlcl9fbGlua3Mge1xuICAgIG1hcmdpbi1ib3R0b206IDEuMnJlbTtcbiAgICBnYXA6IDIuOHJlbTtcbiAgfVxuXG5Ac3VwcG9ydHMgKC13ZWJraXQtYXBwZWFyYW5jZTpub25lKSB7XG4gICAgLm11dGVfX2xhYmVsOjphZnRlciB7XG4gICAgICBiYWNrZ3JvdW5kOiAjRTkwMDAwIHVybChcIi4uL2ltZy9zdmcvdm9sdW1lX3VwLnN2Z1wiKSBuby1yZXBlYXQgY2VudGVyL2NvbnRhaW47XG4gICAgfVxufVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNDhlbSkge1xuICAuaGVhZGVyIHtcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gICAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIHBhZGRpbmc6IDJyZW0gMCAycmVtIDJyZW07XG4gIH1cblxuICAubXV0ZSB7XG4gICAgcmlnaHQ6IDJyZW07XG4gIH1cblxuICAubWFpbl9faW5kZXgge1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IC1vLWxpbmVhci1ncmFkaWVudCg4OS44OWRlZywgcmdiYSgwLCAwLCAwLCAwLjc2KSAzMi4xNCUsIHJnYmEoMjU1LCAwLCAwLCAwKSA3Mi41NiUpLCB1cmwoXCIuLi9pbWcvYmctbW9iLTJ4LmpwZ1wiKTtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoMC4xMWRlZywgcmdiYSgwLCAwLCAwLCAwLjc2KSAzMi4xNCUsIHJnYmEoMjU1LCAwLCAwLCAwKSA3Mi41NiUpLCB1cmwoXCIuLi9pbWcvYmctbW9iLTJ4LmpwZ1wiKTtcbiAgICAtd2Via2l0LWJveC1hbGlnbjogZW5kO1xuICAgIC1tcy1mbGV4LWFsaWduOiBlbmQ7XG4gICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xuICAgIC13ZWJraXQtYm94LXBhY2s6IGNlbnRlcjtcbiAgICAtbXMtZmxleC1wYWNrOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgcGFkZGluZy1sZWZ0OiAwO1xuICB9XG5cbiAgLmxvZ28ge1xuICAgIG1hcmdpbi1ib3R0b206IDEyLjRyZW07XG4gICAgLXdlYmtpdC1hbmltYXRpb246IHpvb21JbiAxcztcbiAgICBhbmltYXRpb246IHpvb21JbiAxcztcbiAgfVxuXG5ALXdlYmtpdC1rZXlmcmFtZXMgem9vbUluIHtcbiAgICBmcm9tIHtcbiAgICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZTNkKDAsIDAsIDApO1xuICAgICAgdHJhbnNmb3JtOiBzY2FsZTNkKDAsIDAsIDApO1xuICAgIH1cbn1cblxuQGtleWZyYW1lcyB6b29tSW4ge1xuICAgIGZyb20ge1xuICAgICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlM2QoMCwgMCwgMCk7XG4gICAgICB0cmFuc2Zvcm06IHNjYWxlM2QoMCwgMCwgMCk7XG4gICAgfVxufVxuXG4gIC5uYXYge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xMDElKTtcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xMDElKTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTEwMSUpO1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogMDtcbiAgICBib3R0b206IDA7XG4gICAgd2lkdGg6IDQ4cmVtO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMyNjA3MDc7XG4gICAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgICAtd2Via2l0LWJveC1kaXJlY3Rpb246IG5vcm1hbDtcbiAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIC13ZWJraXQtYm94LXBhY2s6IHN0YXJ0O1xuICAgIC1tcy1mbGV4LXBhY2s6IHN0YXJ0O1xuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgICBwYWRkaW5nLXRvcDogOXJlbTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgLXdlYmtpdC1ib3gtYWxpZ246IHN0cmV0Y2g7XG4gICAgLW1zLWZsZXgtYWxpZ246IHN0cmV0Y2g7XG4gICAgYWxpZ24taXRlbXM6IHN0cmV0Y2g7XG4gICAgZm9udC1zaXplOiAyLjhyZW07XG4gICAgbGluZS1oZWlnaHQ6IDMuMnJlbTtcbiAgICBsZXR0ZXItc3BhY2luZzogMC4wNHJlbTtcbiAgICAtd2Via2l0LXRyYW5zaXRpb246IC13ZWJraXQtdHJhbnNmb3JtIDAuNXM7XG4gICAgdHJhbnNpdGlvbjogLXdlYmtpdC10cmFuc2Zvcm0gMC41cztcbiAgICAtby10cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC41cztcbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC41cztcbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC41cywgLXdlYmtpdC10cmFuc2Zvcm0gMC41cztcbiAgfVxuXG4gIC5uYXYuYWN0aXZlIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICAtd2Via2l0LXRyYW5zaXRpb246IC13ZWJraXQtdHJhbnNmb3JtIDAuNXM7XG4gICAgdHJhbnNpdGlvbjogLXdlYmtpdC10cmFuc2Zvcm0gMC41cztcbiAgICAtby10cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC41cztcbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC41cztcbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC41cywgLXdlYmtpdC10cmFuc2Zvcm0gMC41cztcbiAgICBvdmVyZmxvdy15OiBzY3JvbGw7XG4gIH1cblxuICAubmF2X19saXN0IHtcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAgIC13ZWJraXQtYm94LWRpcmVjdGlvbjogbm9ybWFsO1xuICAgIC1tcy1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgIG1hcmdpbi1ib3R0b206IDEuMnJlbTtcbiAgfVxuXG4gIC5uYXZfX2l0ZW0ge1xuICAgIG1hcmdpbi1ib3R0b206IDEuMnJlbTtcbiAgfVxuXG4gIC5uYXZfX2l0ZW06bGFzdC1jaGlsZCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgfVxuXG4gIC5uYXZfX2xpbmsge1xuICAgIHBhZGRpbmc6IDEuNHJlbSAwO1xuICB9XG5cbiAgLmhlYWRlcl9faGFzaHRhZyB7XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgIG1hcmdpbi1ib3R0b206IDhyZW07XG4gIH1cblxuICAuc29jaWFsIHtcbiAgICAtd2Via2l0LWJveC1wYWNrOiBjZW50ZXI7XG4gICAgLW1zLWZsZXgtcGFjazogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGdhcDogM3JlbTtcbiAgICBtYXJnaW4tYm90dG9tOiAycmVtO1xuICB9XG5cbiAgLmljb24tZmFjZWJvb2ssXG4gIC5pY29uLWluc3RhZ3JhbSxcbiAgLmljb24tdHdpdHRlciB7XG4gICAgd2lkdGg6IDQuOHJlbTtcbiAgICBoZWlnaHQ6IDQuOHJlbTtcbiAgfVxuXG5Ac3VwcG9ydHMgKC13ZWJraXQtYXBwZWFyYW5jZTpub25lKSB7XG4gICAgLm1haW5fX2luZGV4IHtcbiAgICAgIGJhY2tncm91bmQtaW1hZ2U6IC1vLWxpbmVhci1ncmFkaWVudCg4OS44OWRlZywgcmdiYSgwLCAwLCAwLCAwLjc2KSAzMi4xNCUsIHJnYmEoMjU1LCAwLCAwLCAwKSA3Mi41NiUpLCB1cmwoXCIuLi9pbWcvYmctbW9iLTJ4LndlYnBcIik7XG4gICAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoMC4xMWRlZywgcmdiYSgwLCAwLCAwLCAwLjc2KSAzMi4xNCUsIHJnYmEoMjU1LCAwLCAwLCAwKSA3Mi41NiUpLCB1cmwoXCIuLi9pbWcvYmctbW9iLTJ4LndlYnBcIik7XG4gICAgfVxufVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMjUuODc1ZW0pIHtcbiAgaHRtbCB7XG4gICAgZm9udC1zaXplOiAxLjU2MjV2dztcbiAgICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IG5vbmU7XG4gIH1cblxuICAuY29udGFpbmVyIHtcbiAgICBwYWRkaW5nOiAwIDNyZW07XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cblxuICAuYnVyZ2VyIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIH1cblxuQHN1cHBvcnRzICgtd2Via2l0LWFwcGVhcmFuY2U6bm9uZSkge1xuXG59XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAyNS45Mzc1ZW0pIGFuZCAobWF4LXdpZHRoOiA0OGVtKSB7XG4gIGh0bWwge1xuICAgIGZvbnQtc2l6ZTogMS4yMDQ4MnZ3O1xuICAgIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogbm9uZTtcbiAgfVxuXG4gIC5jb250YWluZXIge1xuICAgIHBhZGRpbmc6IDAgM3JlbTtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuXG4gIC5idXJnZXIge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgfVxuXG5Ac3VwcG9ydHMgKC13ZWJraXQtYXBwZWFyYW5jZTpub25lKSB7XG5cbn1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDQ4LjA2MjVlbSkgYW5kIChtYXgtd2lkdGg6IDY0ZW0pIHtcbiAgaHRtbCB7XG4gICAgZm9udC1zaXplOiAwLjY1MTA0MnZ3O1xuICAgIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogbm9uZTtcbiAgfVxuXG4gIC5jb250YWluZXIge1xuICAgIHBhZGRpbmc6IDAgNHJlbTtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuXG5Ac3VwcG9ydHMgKC13ZWJraXQtYXBwZWFyYW5jZTpub25lKSB7XG5cbn1cbn1cclxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW5ObGRIUnBibWR6TDJadmJuUnpMbk5qYzNNaUxDSnpkSGxzWlM1amMzTWlMQ0p6WlhSMGFXNW5jeTl6WlhRdWMyTnpjeUlzSW5ObGRIUnBibWR6TDNaaGNpNXpZM056SWl3aWMyVjBkR2x1WjNNdmJXbDRhVzV6TG5OamMzTWlMQ0ppYkc5amEzTXZkR2wwYkdVdWMyTnpjeUlzSW1Kc2IyTnJjeTlpZFhKblpYSXVjMk56Y3lJc0ltSnNiMk5yY3k5b1pXRmtaWEl1YzJOemN5SXNJbUpzYjJOcmN5OXRZV2x1TG5OamMzTWlMQ0ppYkc5amEzTXZabTl2ZEdWeUxuTmpjM01pWFN3aWJtRnRaWE1pT2x0ZExDSnRZWEJ3YVc1bmN5STZJa0ZCUVVFN1JVRkRTU3h4UWtGQlFUdEZRVU5CTEdkQ1FVRkJPMFZCUTBFc2EwSkJRVUU3UlVGRFFTeHJRa0ZCUVR0RlFVTkJMSFZEUVVGQk8wVkJRMEVzTkZCQlFVRTdRVU5EU2p0QlJFMUZPMFZCUTBVc2NVSkJRVUU3UlVGRFFTeG5Ra0ZCUVR0RlFVTkJMR3RDUVVGQk8wVkJRMEVzYTBKQlFVRTdSVUZEUVN4elEwRkJRVHRGUVVOQkxIZFFRVUZCTzBGRFNrbzdRVU5pUVR0RlFVTkpMRGhDUVVGQk8xVkJRVUVzYzBKQlFVRTdSVUZEUVN4MVFrRkJRVHRGUVVOQkxIRkNRMVZOTzBWRVZFNHNLMEpEV1ZNN1JVUllWQ3hyUWtGQlFUdEZRVU5CTEcxQ1FVRkJPMFZCUTBFc2IwSkJRVUU3UlVGRFFTeFRRVUZCTzBWQlEwRXNWVUZCUVR0RlFVTkJMRmxCUVVFN1JVRkRRU3c0UWtGQlFUdEJSR1ZLT3p0QlExcEJPenM3UlVGSFNTd3lRa0ZCUVR0VlFVRkJMRzFDUVVGQk8wRkVaVW83TzBGRFdrRTdSVUZEU1N4aFFVRkJPMEZFWlVvN08wRkRXa0U3UlVGRFNTeGhRVUZCTzBWQlEwRXNiMEpCUVVFN1JVRkJRU3h2UWtGQlFUdEZRVUZCTEdGQlFVRTdSVUZEUVN3MFFrRkJRVHRGUVVGQkxEWkNRVUZCTzAxQlFVRXNNRUpCUVVFN1ZVRkJRU3h6UWtGQlFUdEZRVU5CTEhsQ1FVRkJPMDFCUVVFc2MwSkJRVUU3VlVGQlFTdzRRa0ZCUVR0RlFVTkJMR3RDUVVGQk8wVkJRMEVzYlVKQlFVRTdSVUZEUVN4dlFrRkJRVHRGUVVOQkxGTkJRVUU3UlVGRFFTeFZRVUZCTzBWQlEwRXNXVUZCUVR0RlFVTkJMR05EYUVKUk8wVkVhVUpTTEhsQ1EyUmpPMEZHTmtKc1FqczdRVU5hUVR0RlFVTkpMRzFDUVVGQk8wMUJRVUVzYjBKQlFVRTdWVUZCUVN4WlFVRkJPMEZFWlVvN08wRkRXa0U3TzBWQlJVa3NjVUpCUVVFN1FVUmxTanM3UVVOYVFUczdSVUZGU1N4dlFrRkJRVHRGUVVOQkxGTkJRVUU3UlVGRFFTeFZRVUZCTzBGRVpVbzdPMEZEV2tFN08wVkJSVWtzV1VGQlFUdEZRVU5CTEdGQlFVRTdSVUZEUVN4bFFVRkJPMEZFWlVvN08wRkRXa0U3T3pzN1JVRkpTU3hoUVVGQk8wVkJRMEVzWlVGQlFUdEZRVU5CTEdGQlFVRTdSVUZEUVN4alFVRkJPMEZFWlVvN1FVTmlTVHM3T3p0RlFVTkpMR0ZCUVVFN1FVUnJRbEk3UVVObVNUczdPenRGUVVOSkxHRkJRVUU3UVVSdlFsSTdPMEZEYUVKQk96dEZRVVZKTEZkQlFVRTdSVUZEUVN4WlFVRkJPMEZFYlVKS096dEJRMmhDUVRzN096czdPenM3UlVGUlNTeGhRVUZCTzBWQlEwRXNVMEZCUVR0RlFVTkJMRlZCUVVFN1FVUnRRa283TzBGRGFFSkJPMFZCUTBrc1UwRkJRVHRCUkcxQ1NqczdRVU5vUWtFN096dEZRVWRKTEdsRFFVRkJPMFZCUTBFc2EwSkJRVUU3UVVSdFFrbzdPMEZEYUVKQk8wVkJRMGtzV1VGQlFUdEZRVU5CTEdOQlFVRTdSVUZEUVN4aFFVRkJPMFZCUTBFc2JVSkJRVUU3UlVGRFFTeFZRVUZCTzBWQlEwRXNlVUpCUVVFN1JVRkRRU3h2UWtGQlFUdEJSRzFDU2pzN1FVTm9Ra0U3UlVGRFNTeFZRVUZCTzBWQlEwRXNVMEZCUVR0QlJHMUNTanRCUTJwQ1NUdEZRVU5KTEZOQlFVRTdSVUZEUVN4VlFVRkJPMFZCUTBFc1owSkJRVUU3UVVSdFFsSTdPMEZEWmtFN08wVkJSVWtzZDBKQlFVRTdSVUZEUVN4VFFVRkJPMEZFYTBKS096dEJRMlpCTzBWQlEwa3NNRUpCUVVFN1FVUnJRa283TzBGRFprRTdSVUZEU1N4aFEzSklVVHRGUkhOSVVpeGpRVUZCTzBGRWEwSktPenRCUnpWS1NUdEZSamhKUVR0SlFVTkpMRzFDUXpGSlN6dEpSREpKVEN3NFFrRkJRVHRGUkd0Q1RqczdSVU5vUWtVN1NVRkRTU3hsUVVGQk8wbEJRMEVzVjBGQlFUdEZSRzFDVGp0QlFVTkdPMEZIYkV0Sk8wVkdiVXBCTzBsQlEwa3NiMEpEY0VwQk8wbEVjVXBCTERoQ1FVRkJPMFZFYTBKT096dEZRMmhDUlR0SlFVTkpMR1ZCUVVFN1NVRkRRU3hYUVVGQk8wVkViVUpPTzBGQlEwWTdRVWQyUzBrN1JVWjNTa0U3U1VGRFNTeHhRa001U2tNN1NVUXJTa1FzT0VKQlFVRTdSVVJyUWs0N08wVkRhRUpGTzBsQlEwa3NaVUZCUVR0SlFVTkJMRmRCUVVFN1JVUnRRazQ3UVVGRFJqdEJRMmhDUVR0RlFVTkpMSGRDUVVGQk8wRkVhMEpLT3p0QlEyWkJPMFZCUTBrc2VVSkJRVUU3UVVSclFrbzdPMEZEWmtFN1JVRkRTU3huUWtGQlFUdEJSR3RDU2pzN1FVbG9Ua0U3UlVGRFNTeDVRa0ZCUVR0QlNtMU9TanM3UVV0d1RrRTdSVUZEU1N4aFFVRkJPMFZCUTBFc1ZVRkJRVHRCVEhWT1NqdEJTM1JPVVR0RlFVTkpMRmRCUVVFN1JVRkRRU3hqUVVGQk8wVkJRMEVzYzBKQlFVRTdSVUZEUVN4alFVRkJPMFZCUTBFc2QwTkJRVUU3UlVGQlFTeHRRMEZCUVR0RlFVRkJMR2REUVVGQk8wRk1kMDVhTzBGTGRrNVpPMFZCUTBrc2NVSkJRVUU3UVV4NVRtaENPMEZITlU1Sk8wVkZUMGs3U1VGRFNTeHhRa0ZCUVR0RlRIZE9WanRCUVVOR08wRkhNMDVKTzBWRlRVazdTVUZEU1N4eFFrRkJRVHRGVEhkT1ZqdEJRVU5HT3p0QlMzSk9RVHRGUVVOSkxHVkJRVUU3UVV4M1RrbzdPMEZMZEU1Qk8wVkJRMGtzVjBGQlFUdEJUSGxPU2pzN1FVdDJUa0U3UlVGRFNTeFZRVUZCTzBGTU1FNUtPenRCUzNoT1FUdEZRVU5KTEdsRVFVRkJPMDFCUVVFc05rTkJRVUU3VlVGQlFTeDVRMEZCUVR0QlRESk9TanM3UVV0NlRrRTdSVUZEU1N4dFJFRkJRVHROUVVGQkxDdERRVUZCTzFWQlFVRXNNa05CUVVFN1FVdzBUa283TzBGTmFsRkJPMFZCUTBrc2EwSkJRVUU3UlVGRFFTeHBRa0ZCUVR0QlRtOVJTanM3UVUxc1VVRTdSVUZEU1N4dlFrRkJRVHRGUVVGQkxHOUNRVUZCTzBWQlFVRXNZVUZCUVR0RlFVTkJMSGRDUVVGQk8wMUJRVUVzY1VKQlFVRTdWVUZCUVN4MVFrRkJRVHRGUVVOQkxIbENRVUZCTzAxQlFVRXNjMEpCUVVFN1ZVRkJRU3h0UWtGQlFUdEZTRTVCTEdkQ1IwOWpPMFZJVG1Rc2FVSkhUVzFDTzBWSVRHNUNMRzFDUjBzeVFqdEZRVU16UWl4MVFrRkJRVHRCVG5WUlNqczdRVTF5VVVFN1JVRkRTU3h2UWtGQlFUdEZRVUZCTEc5Q1FVRkJPMFZCUVVFc1lVRkJRVHRGUVVOQkxIbENRVUZCTzBWQlEwRXNiMEpCUVVFN1FVNTNVVW83TzBGTmRGRkJPMFZCUTBrc1kwRkJRVHRGUVVOQkxITkNRVUZCTzBGT2VWRktPenRCVFhaUlFUdEZRVU5KTEhsQ1NtaENVVHRCUmpCU1dqczdRVTE0VVVFN1JVRkRTU3hyUWtGQlFUdEJUakpSU2pzN1FVMTZVVUU3UlVGRFNTeHZRa0ZCUVR0RlFVRkJMRzlDUVVGQk8wVkJRVUVzWVVGQlFUdEZRVU5CTEZOQlFVRTdRVTQwVVVvN08wRk5NVkZCTzBWQlEwa3NZMEZCUVR0QlRqWlJTanM3UVUwelVVRTdSVUZEU1N4aFNucENWVHRGU1RCQ1ZpeGhRVUZCTzBWQlEwRXNZMEZCUVR0QlRqaFJTanM3UVUwMVVVRTdSVUZEU1N4clFrRkJRVHRGUVVOQkxGbEJRVUU3UlVGRFFTeFJRVUZCTzBWQlEwRXNiVU5CUVVFN1RVRkJRU3dyUWtGQlFUdFZRVUZCTERKQ1FVRkJPMFZCUTBFc1lVRkJRVHRGUVVOQkxHTkJRVUU3UlVGRFFTeG5Ra0ZCUVR0RlFVTkJMSGxDU25KRFZUdEZTWE5EVml4dFFrRkJRVHRCVGl0UlNqczdRVTAzVVVFN1JVRkRTU3hYUVVGQk8wVkJRMEVzYTBKQlFVRTdSVUZEUVN4WFFVRkJPMFZCUTBFc1dVRkJRVHRGUVVOQkxHTkJRVUU3UlVGRFFTeGpRVUZCTzBWQlEwRXNZVUZCUVR0RlFVTkJMSFZFUVVGQk8xVkJRVUVzSzBOQlFVRTdSVUZEUVN4clFrRkJRVHRGUVVOQkxHbEZRVUZCTzBWQlFVRXNORVJCUVVFN1JVRkJRU3g1UkVGQlFUdEJUbWRTU2pzN1FVMDVVVUU3UlVGRFNTdzJSVUZCUVR0QlRtbFNTanM3UVUwNVVVRTdSVUZEU1N4alFVRkJPMFZCUTBFc1ZVRkJRVHRGUVVOQkxEUkZRVUZCTzBGT2FWSktPenRCVFM5UlFUdEZRVU5KTEd0Q1FVRkJPMFZCUTBFc1YwRkJRVHRGUVVOQkxGbEJRVUU3UlVGRFFTeFZRVUZCTzBWQlEwRXNVMEZCUVR0RlFVTkJMRlZCUVVFN1JVRkRRU3hWUVVGQk8wRk9hMUpLT3p0QlRXaFNRVHRGUVVOSkxHRkJRVUU3UVU1dFVrbzdPMEZOYWxKQk8wVkJRMGtzWVVGQlFUdEJUbTlTU2pzN1FVZHNWRWs3UlVkclEwRTdTVUZEU1N4cFFrRkJRVHRGVG05U1RqczdSVTFzVWtVN1NVRkRTU3hwUWtGQlFUdEpRVU5CTEcxQ1FVRkJPMGxCUTBFc2RVSkJRVUU3UlU1eFVrNDdPMFZOYmxKRk8wbEJRMGtzYjBKQlFVRTdSVTV6VWs0N08wVk5jRkpGTzBsQlEwa3NjMEpCUVVFN1JVNTFVazQ3TzBWTmNsSkZPMGxCUTBrc2EwSkJRVUU3UlU1M1VrNDdPMFZOZEZKRk8wbEJRMGtzVTBGQlFUdEZUbmxTVGpzN1JVMTJVa1U3U1VGRFNTeGhRVUZCTzBsQlEwRXNZMEZCUVR0RlRqQlNUanM3UlUxNFVrVTdTVUZEU1N4aFFVRkJPMGxCUTBFc1kwRkJRVHRKUVVOQkxHMUNRVUZCTzBWT01sSk9PenRGVFhwU1JUdEpRVU5KTEZkQlFVRTdTVUZEUVN4WlFVRkJPMGxCUTBFc1kwRkJRVHRKUVVOQkxHRkJRVUU3U1VGRFFTeDFSRUZCUVR0WlFVRkJMQ3REUVVGQk8wVk9ORkpPT3p0RlRURlNSVHRKUVVOSkxHTkJRVUU3U1VGRFFTeFZRVUZCTzBsQlEwRXNORVZCUVVFN1JVNDJVazQ3TzBWTk0xSkZPMGxCUTBrc1lVRkJRVHRGVGpoU1RqczdSVTAxVWtVN1NVRkRTU3hoUVVGQk8wVk9LMUpPT3p0RlRUZFNSVHRKUVVOSkxHdENRVUZCTzBsQlEwRXNhVUpCUVVFN1NVRkRRU3h0UWtGQlFUdEpRVU5CTEhWQ1FVRkJPMGxCUTBFc2EwSkJRVUU3UlU1blUwNDdPMFZOT1ZKRk8wbEJRMGtzY1VKQlFVRTdTVUZEUVN4WFFVRkJPMFZPYVZOT08wRkJRMFk3UVVkc1dVazdSVWR4UjBFN1NVRkRTU3h2UWtGQlFUdEpRVUZCTEc5Q1FVRkJPMGxCUVVFc1lVRkJRVHRKUVVOQkxIbENRVUZCTzFGQlFVRXNjMEpCUVVFN1dVRkJRU3h0UWtGQlFUdEpRVU5CTEhsQ1FVRkJPMFZPWjFOT096dEZUVGxTUlR0SlFVTkpMRmRCUVVFN1JVNXBVMDQ3TzBWTkwxSkZPMGxCUTBrc2EwbEJRVUU3U1VGQlFTdzRTRUZCUVR0SlFVTkJMSE5DUVVGQk8xRkJRVUVzYlVKQlFVRTdXVUZCUVN4eFFrRkJRVHRKUVVOQkxIZENRVUZCTzFGQlFVRXNjVUpCUVVFN1dVRkJRU3gxUWtGQlFUdEpRVU5CTEdWQlFVRTdSVTVyVTA0N08wVk5hRk5GTzBsQlEwa3NjMEpCUVVFN1NVRkRRU3cwUWtGQlFUdFpRVUZCTEc5Q1FVRkJPMFZPYlZOT096dEZUV2hUUlR0SlFVTkpPMDFCUTBrc2JVTkJRVUU3WTBGQlFTd3lRa0ZCUVR0SlRtMVRVanRGUVVOR096dEZUWFJUUlR0SlFVTkpPMDFCUTBrc2JVTkJRVUU3WTBGQlFTd3lRa0ZCUVR0SlRtMVRVanRGUVVOR08wVk5hRk5GTzBsQlEwa3NiME5CUVVFN1VVRkJRU3huUTBGQlFUdFpRVUZCTERSQ1FVRkJPMGxCUTBFc1pVRkJRVHRKUVVOQkxFMUJRVUU3U1VGRFFTeFBRVUZCTzBsQlEwRXNVMEZCUVR0SlFVTkJMRmxCUVVFN1NVRkRRU3g1UWtvNVMxRTdTVWtyUzFJc05FSkJRVUU3U1VGQlFTdzJRa0ZCUVR0UlFVRkJMREJDUVVGQk8xbEJRVUVzYzBKQlFVRTdTVUZEUVN4MVFrRkJRVHRSUVVGQkxHOUNRVUZCTzFsQlFVRXNNa0pCUVVFN1NVRkRRU3hwUWtGQlFUdEpRVU5CTEd0Q1FVRkJPMGxCUTBFc01FSkJRVUU3VVVGQlFTeDFRa0ZCUVR0WlFVRkJMRzlDUVVGQk8wbEJRMEVzYVVKQlFVRTdTVUZEUVN4dFFrRkJRVHRKUVVOQkxIVkNRVUZCTzBsQlEwRXNNRU5CUVVFN1NVRkJRU3hyUTBGQlFUdEpRVUZCTERaQ1FVRkJPMGxCUVVFc01FSkJRVUU3U1VGQlFTeHJSRUZCUVR0RlRtdFRUanM3UlUxb1UwVTdTVUZEU1N4blEwRkJRVHRSUVVGQkxEUkNRVUZCTzFsQlFVRXNkMEpCUVVFN1NVRkRRU3d3UTBGQlFUdEpRVUZCTEd0RFFVRkJPMGxCUVVFc05rSkJRVUU3U1VGQlFTd3dRa0ZCUVR0SlFVRkJMR3RFUVVGQk8wbEJRMEVzYTBKQlFVRTdSVTV0VTA0N08wVk5hbE5GTzBsQlEwa3NORUpCUVVFN1NVRkJRU3cyUWtGQlFUdFJRVUZCTERCQ1FVRkJPMWxCUVVFc2MwSkJRVUU3U1VGRFFTeGxRVUZCTzBsQlEwRXNjVUpCUVVFN1JVNXZVMDQ3TzBWTmJGTkZPMGxCUTBrc2NVSkJRVUU3UlU1eFUwNDdSVTF3VTAwN1NVRkRTU3huUWtGQlFUdEZUbk5UVmpzN1JVMXVVMFU3U1VGRFNTeHBRa0ZCUVR0RlRuTlRUanM3UlUxdVUwVTdTVUZEU1N4bFFVRkJPMGxCUTBFc2JVSkJRVUU3UlU1elUwNDdPMFZOY0ZORk8wbEJRMGtzZDBKQlFVRTdVVUZCUVN4eFFrRkJRVHRaUVVGQkxIVkNRVUZCTzBsQlEwRXNVMEZCUVR0SlFVTkJMRzFDUVVGQk8wVk9kVk5PT3p0RlRYSlRSVHRKUVVOSkxHRkJRVUU3U1VGRFFTeGpRVUZCTzBWT2QxTk9PMEZCUTBZN1FVOTJaMEpCTzBWQlEwa3NiMEpCUVVFN1JVRkJRU3h2UWtGQlFUdEZRVUZCTEdGQlFVRTdSVUZEUVN4NVFrRkJRVHROUVVGQkxITkNRVUZCTzFWQlFVRXNiVUpCUVVFN1JVRkRRU3cwUkVGQlFUdEZRVU5CTEcxQ1FVRkJPMEZRZVdkQ1NqczdRVTl5WjBKQk8wVkJRMGtzWTBGQlFUdEJVSGRuUWtvN08wRlJhbWhDUVR0RlFVTkpMR1ZCUVVFN1JVRkRRU3h2UWtGQlFUdEZRVUZCTEc5Q1FVRkJPMFZCUVVFc1lVRkJRVHRGUVVOQkxEUkNRVUZCTzBWQlFVRXNOa0pCUVVFN1RVRkJRU3d3UWtGQlFUdFZRVUZCTEhOQ1FVRkJPMFZCUTBFc2VVSkJRVUU3VFVGQlFTeHpRa0ZCUVR0VlFVRkJMRzFDUVVGQk8wVk1TRUVzWjBKTFNXTTdSVXhJWkN4cFFrdEhiVUk3UlV4R2JrSXNiVUpMUlRCQ08wVkJRekZDTEhWQ1FVRkJPMFZCUTBFc2VVSkJRVUU3UVZKemFFSktPenRCVVc1b1FrRTdSVUZEU1N4dlFrRkJRVHRGUVVGQkxHOUNRVUZCTzBWQlFVRXNZVUZCUVR0RlFVTkJMSEZDUVVGQk8wVkJRMEVzVjBGQlFUdEJVbk5vUWtvN08wRlJibWhDUVR0RlFVTkpMR05PVmxNN1FVWm5hVUppTzBGQlEwRTdRVUZEUVN4eFFrRkJjVUlzTkVWQlFUUkZPMEZCUTJwSExHOUNRVUZ2UWl3eVJVRkJNa1U3UVVGREwwWXNZVUZCWVN3MFJFRkJORVE3UVVGRGVrVTdPME5CUlVNN08wRkJSVVE3TzBGQlJVRTdPMEZCUlVFN08wTkJSVU03TzBGQlJVUTdPMEZCUlVFN08wRkJSVUU3TzBOQlJVTTdPMEZCUlVRN08wRkJSVUU3TzBGQlJVRTdPME5CUlVNN08wRkJSVVE3UVVGRFFTeHZRa0ZCYjBJc01rVkJRVEpGTzBGQlF5OUdPenRCUVVWQk96dERRVVZET3p0QlFVVkVPMEZCUTBFc1lVRkJZU3hyU1VGQk5rZ3NRMEZCTjBnc09FaEJRVGhJTzBGQlF6TkpPenRCUVVWQklpd2labWxzWlNJNkluTjBlV3hsTG1OemN5SXNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJJa0JtYjI1MExXWmhZMlVnZTF4eVhHNGdJQ0FnWm05dWRDMW1ZVzFwYkhrNklDZFNiMkp2ZEc4bk8xeHlYRzRnSUNBZ1ptOXVkQzEzWldsbmFIUTZJRFF3TUR0Y2NseHVJQ0FnSUdadmJuUXRjM1I1YkdVNklHNXZjbTFoYkR0Y2NseHVJQ0FnSUdadmJuUXRaR2x6Y0d4aGVUb2djM2RoY0R0Y2NseHVJQ0FnSUhOeVl6b2dkWEpzS0NjdUxpOW1iMjUwY3k5U2IySnZkRzh0VW1WbmRXeGhjaTVsYjNRbktUdGNjbHh1SUNBZ0lITnlZem9nYkc5allXd29KMUp2WW05MGJ5Y3BMRnh5WEc0Z0lDQWdJQ0FnSUhWeWJDZ25MaTR2Wm05dWRITXZVbTlpYjNSdkxWSmxaM1ZzWVhJdVpXOTBQeU5wWldacGVDY3BJR1p2Y20xaGRDZ25aVzFpWldSa1pXUXRiM0JsYm5SNWNHVW5LU3hjY2x4dUlDQWdJQ0FnSUNCMWNtd29KeTR1TDJadmJuUnpMMUp2WW05MGJ5MVNaV2QxYkdGeUxuZHZabVl5SnlrZ1ptOXliV0YwS0NkM2IyWm1NaWNwTEZ4eVhHNGdJQ0FnSUNBZ0lIVnliQ2duTGk0dlptOXVkSE12VW05aWIzUnZMVkpsWjNWc1lYSXVkMjltWmljcElHWnZjbTFoZENnbmQyOW1aaWNwTEZ4eVhHNGdJQ0FnSUNBZ0lIVnliQ2duTGk0dlptOXVkSE12VW05aWIzUnZMVkpsWjNWc1lYSXVkSFJtSnlrZ1ptOXliV0YwS0NkMGNuVmxkSGx3WlNjcE8xeHlYRzU5WEhKY2JpQWdYSEpjYmlBZ1FHWnZiblF0Wm1GalpTQjdYSEpjYmlBZ0lDQm1iMjUwTFdaaGJXbHNlVG9nSjFKdlltOTBieWM3WEhKY2JpQWdJQ0JtYjI1MExYZGxhV2RvZERvZ05UQXdPMXh5WEc0Z0lDQWdabTl1ZEMxemRIbHNaVG9nYm05eWJXRnNPMXh5WEc0Z0lDQWdabTl1ZEMxa2FYTndiR0Y1T2lCemQyRndPMXh5WEc0Z0lDQWdjM0pqT2lCMWNtd29KeTR1TDJadmJuUnpMMUp2WW05MGJ5MU5aV1JwZFcwdVpXOTBKeWs3WEhKY2JpQWdJQ0J6Y21NNklHeHZZMkZzS0NkU2IySnZkRzhuS1N4Y2NseHVJQ0FnSUNBZ0lDQjFjbXdvSnk0dUwyWnZiblJ6TDFKdlltOTBieTFOWldScGRXMHVaVzkwUHlOcFpXWnBlQ2NwSUdadmNtMWhkQ2duWlcxaVpXUmtaV1F0YjNCbGJuUjVjR1VuS1N4Y2NseHVJQ0FnSUNBZ0lDQjFjbXdvSnk0dUwyWnZiblJ6TDFKdlltOTBieTFOWldScGRXMHVkMjltWmpJbktTQm1iM0p0WVhRb0ozZHZabVl5Snlrc1hISmNiaUFnSUNBZ0lDQWdkWEpzS0NjdUxpOW1iMjUwY3k5U2IySnZkRzh0VFdWa2FYVnRMbmR2Wm1ZbktTQm1iM0p0WVhRb0ozZHZabVluS1N4Y2NseHVJQ0FnSUNBZ0lDQjFjbXdvSnk0dUwyWnZiblJ6TDFKdlltOTBieTFOWldScGRXMHVkSFJtSnlrZ1ptOXliV0YwS0NkMGNuVmxkSGx3WlNjcE8xeHlYRzRnSUNBZ1hISmNiaUFnZlZ4eVhHNGlMQ0pBWm05dWRDMW1ZV05sSUh0Y2JpQWdabTl1ZEMxbVlXMXBiSGs2SUZ3aVVtOWliM1J2WENJN1hHNGdJR1p2Ym5RdGQyVnBaMmgwT2lBME1EQTdYRzRnSUdadmJuUXRjM1I1YkdVNklHNXZjbTFoYkR0Y2JpQWdabTl1ZEMxa2FYTndiR0Y1T2lCemQyRndPMXh1SUNCemNtTTZJSFZ5YkNoY0lpNHVMMlp2Ym5SekwxSnZZbTkwYnkxU1pXZDFiR0Z5TG1WdmRGd2lLVHRjYmlBZ2MzSmpPaUJzYjJOaGJDaGNJbEp2WW05MGIxd2lLU3dnZFhKc0tGd2lMaTR2Wm05dWRITXZVbTlpYjNSdkxWSmxaM1ZzWVhJdVpXOTBQeU5wWldacGVGd2lLU0JtYjNKdFlYUW9YQ0psYldKbFpHUmxaQzF2Y0dWdWRIbHdaVndpS1N3Z2RYSnNLRndpTGk0dlptOXVkSE12VW05aWIzUnZMVkpsWjNWc1lYSXVkMjltWmpKY0lpa2dabTl5YldGMEtGd2lkMjltWmpKY0lpa3NJSFZ5YkNoY0lpNHVMMlp2Ym5SekwxSnZZbTkwYnkxU1pXZDFiR0Z5TG5kdlptWmNJaWtnWm05eWJXRjBLRndpZDI5bVpsd2lLU3dnZFhKc0tGd2lMaTR2Wm05dWRITXZVbTlpYjNSdkxWSmxaM1ZzWVhJdWRIUm1YQ0lwSUdadmNtMWhkQ2hjSW5SeWRXVjBlWEJsWENJcE8xeHVmVnh1UUdadmJuUXRabUZqWlNCN1hHNGdJR1p2Ym5RdFptRnRhV3g1T2lCY0lsSnZZbTkwYjF3aU8xeHVJQ0JtYjI1MExYZGxhV2RvZERvZ05UQXdPMXh1SUNCbWIyNTBMWE4wZVd4bE9pQnViM0p0WVd3N1hHNGdJR1p2Ym5RdFpHbHpjR3hoZVRvZ2MzZGhjRHRjYmlBZ2MzSmpPaUIxY213b1hDSXVMaTltYjI1MGN5OVNiMkp2ZEc4dFRXVmthWFZ0TG1WdmRGd2lLVHRjYmlBZ2MzSmpPaUJzYjJOaGJDaGNJbEp2WW05MGIxd2lLU3dnZFhKc0tGd2lMaTR2Wm05dWRITXZVbTlpYjNSdkxVMWxaR2wxYlM1bGIzUS9JMmxsWm1sNFhDSXBJR1p2Y20xaGRDaGNJbVZ0WW1Wa1pHVmtMVzl3Wlc1MGVYQmxYQ0lwTENCMWNtd29YQ0l1TGk5bWIyNTBjeTlTYjJKdmRHOHRUV1ZrYVhWdExuZHZabVl5WENJcElHWnZjbTFoZENoY0luZHZabVl5WENJcExDQjFjbXdvWENJdUxpOW1iMjUwY3k5U2IySnZkRzh0VFdWa2FYVnRMbmR2Wm1aY0lpa2dabTl5YldGMEtGd2lkMjltWmx3aUtTd2dkWEpzS0Z3aUxpNHZabTl1ZEhNdlVtOWliM1J2TFUxbFpHbDFiUzUwZEdaY0lpa2dabTl5YldGMEtGd2lkSEoxWlhSNWNHVmNJaWs3WEc1OVhHNW9kRzFzSUh0Y2JpQWdZbTk0TFhOcGVtbHVaem9nWW05eVpHVnlMV0p2ZUR0Y2JpQWdjMk55YjJ4c0xXSmxhR0YyYVc5eU9pQnpiVzl2ZEdnN1hHNGdJR1p2Ym5RdGMybDZaVG9nTUM0Mk9UUTBORFYyZHp0Y2JpQWdabTl1ZEMxbVlXMXBiSGs2SUZKdlltOTBieXdnYzJGdWN5MXpaWEpwWmp0Y2JpQWdabTl1ZEMxemRIbHNaVG9nYm05eWJXRnNPMXh1SUNCbWIyNTBMWGRsYVdkb2REb2dibTl5YldGc08xeHVJQ0IwWlhoMExYSmxibVJsY21sdVp6b2dZWFYwYnp0Y2JpQWdiV0Z5WjJsdU9pQXdPMXh1SUNCd1lXUmthVzVuT2lBd08xeHVJQ0JvWldsbmFIUTZJREV3TUNVN1hHNGdJQzEzWldKcmFYUXRkR1Y0ZEMxemFYcGxMV0ZrYW5WemREb2dNVEF3SlR0Y2JuMWNibHh1S2l4Y2JpbzZPbUZtZEdWeUxGeHVLam82WW1WbWIzSmxJSHRjYmlBZ1ltOTRMWE5wZW1sdVp6b2dhVzVvWlhKcGREdGNibjFjYmx4dUtqcG1iMk4xY3pwdWIzUW9PbVp2WTNWekxYWnBjMmxpYkdVcElIdGNiaUFnYjNWMGJHbHVaVG9nYm05dVpUdGNibjFjYmx4dVltOWtlU0I3WEc0Z0lHaGxhV2RvZERvZ01UQXdkbWc3WEc0Z0lHUnBjM0JzWVhrNklHWnNaWGc3WEc0Z0lHWnNaWGd0WkdseVpXTjBhVzl1T2lCamIyeDFiVzQ3WEc0Z0lHcDFjM1JwWm5rdFkyOXVkR1Z1ZERvZ2MzQmhZMlV0WW1WMGQyVmxianRjYmlBZ1ptOXVkQzF6ZEhsc1pUb2dibTl5YldGc08xeHVJQ0JtYjI1MExYZGxhV2RvZERvZ2JtOXliV0ZzTzF4dUlDQjBaWGgwTFhKbGJtUmxjbWx1WnpvZ1lYVjBienRjYmlBZ2JXRnlaMmx1T2lBd08xeHVJQ0J3WVdSa2FXNW5PaUF3TzF4dUlDQm9aV2xuYUhRNklERXdNQ1U3WEc0Z0lHTnZiRzl5T2lBalJrWkdSa1pHTzF4dUlDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQWpNREF3TURBd08xeHVmVnh1WEc1dFlXbHVJSHRjYmlBZ1pteGxlQzFuY205M09pQXhPMXh1ZlZ4dVhHNWhMRnh1WVRwb2IzWmxjaUI3WEc0Z0lIUmxlSFF0WkdWamIzSmhkR2x2YmpvZ2JtOXVaVHRjYm4xY2JseHVhVzV3ZFhRc1hHNTBaWGgwWVhKbFlTQjdYRzRnSUd4cGJtVXRhR1ZwWjJoME9pQnBibWhsY21sME8xeHVJQ0J0WVhKbmFXNDZJREE3WEc0Z0lIQmhaR1JwYm1jNklEQTdYRzU5WEc1Y2JtbHVjSFYwTEZ4dVluVjBkRzl1SUh0Y2JpQWdZbTl5WkdWeU9pQnViMjVsTzF4dUlDQnZkWFJzYVc1bE9pQnViMjVsTzF4dUlDQmpkWEp6YjNJNklIQnZhVzUwWlhJN1hHNTlYRzVjYm1KMWRIUnZiaXhjYm1sdWNIVjBMRnh1WVN4Y2JuUmxlSFJoY21WaElIdGNiaUFnYjNWMGJHbHVaVG9nYm05dVpUdGNiaUFnWTNWeWMyOXlPaUJ3YjJsdWRHVnlPMXh1SUNCbWIyNTBPaUJwYm1obGNtbDBPMXh1SUNCamIyeHZjam9nYVc1b1pYSnBkRHRjYm4xY2JtSjFkSFJ2YmpwbWIyTjFjeXhjYm1sdWNIVjBPbVp2WTNWekxGeHVZVHBtYjJOMWN5eGNiblJsZUhSaGNtVmhPbVp2WTNWeklIdGNiaUFnYjNWMGJHbHVaVG9nYm05dVpUdGNibjFjYm1KMWRIUnZianBoWTNScGRtVXNYRzVwYm5CMWREcGhZM1JwZG1Vc1hHNWhPbUZqZEdsMlpTeGNiblJsZUhSaGNtVmhPbUZqZEdsMlpTQjdYRzRnSUc5MWRHeHBibVU2SUc1dmJtVTdYRzU5WEc1Y2JtbHRaeXhjYm5CcFkzUjFjbVVnZTF4dUlDQjNhV1IwYURvZ01UQXdKVHRjYmlBZ2FHVnBaMmgwT2lCaGRYUnZPMXh1ZlZ4dVhHNW9NU3hjYm1neUxGeHVhRE1zWEc1b05DeGNibWcxTEZ4dWFEWXNYRzVtYVdkMWNtVXNYRzVtYVdWc1pITmxkQ0I3WEc0Z0lHWnZiblE2SUdsdWFHVnlhWFE3WEc0Z0lHMWhjbWRwYmpvZ01EdGNiaUFnY0dGa1pHbHVaem9nTUR0Y2JuMWNibHh1Y0NCN1hHNGdJRzFoY21kcGJqb2dNRHRjYm4xY2JseHVZMjlrWlN4Y2JtdGlaQ3hjYm5OaGJYQWdlMXh1SUNCbWIyNTBMV1poYldsc2VUb2diVzl1YjNOd1lXTmxMQ0J0YjI1dmMzQmhZMlU3WEc0Z0lHWnZiblF0YzJsNlpUb2dhVzVvWlhKcGREdGNibjFjYmx4dVluVjBkRzl1SUh0Y2JpQWdZbTl5WkdWeU9pQnViMjVsTzF4dUlDQmpiMnh2Y2pvZ2FXNW9aWEpwZER0Y2JpQWdabTl1ZERvZ2FXNW9aWEpwZER0Y2JpQWdkR1Y0ZEMxaGJHbG5iam9nYVc1b1pYSnBkRHRjYmlBZ2NHRmtaR2x1WnpvZ01EdGNiaUFnWW1GamEyZHliM1Z1WkMxamIyeHZjam9nYVc1b1pYSnBkRHRjYmlBZ2RHVjRkQzF5Wlc1a1pYSnBibWM2SUdGMWRHODdYRzU5WEc1Y2JuVnNJSHRjYmlBZ2NHRmtaR2x1WnpvZ01EdGNiaUFnYldGeVoybHVPaUF3TzF4dWZWeHVkV3dnYkdrZ2UxeHVJQ0J0WVhKbmFXNDZJREE3WEc0Z0lIQmhaR1JwYm1jNklEQTdYRzRnSUd4cGMzUXRjM1I1YkdVNklHNXZibVU3WEc1OVhHNWNibWx1Y0hWMFczUjVjR1U5Ym5WdFltVnlYVG82TFhkbFltdHBkQzFwYm01bGNpMXpjR2x1TFdKMWRIUnZiaXhjYm1sdWNIVjBXM1I1Y0dVOWJuVnRZbVZ5WFRvNkxYZGxZbXRwZEMxdmRYUmxjaTF6Y0dsdUxXSjFkSFJ2YmlCN1hHNGdJQzEzWldKcmFYUXRZWEJ3WldGeVlXNWpaVG9nYm05dVpUdGNiaUFnYldGeVoybHVPaUF3TzF4dWZWeHVYRzVwYm5CMWRGdDBlWEJsUFc1MWJXSmxjbDBnZTF4dUlDQXRiVzk2TFdGd2NHVmhjbUZ1WTJVNklIUmxlSFJtYVdWc1pEdGNibjFjYmx4dUxtTnZiblJoYVc1bGNpQjdYRzRnSUhkcFpIUm9PaUF4TWpseVpXMDdYRzRnSUcxaGNtZHBiam9nTUNCaGRYUnZPMXh1ZlZ4dVhHNUFiV1ZrYVdFZ0tHMWhlQzEzYVdSMGFEb2dNalV1T0RjMVpXMHBJSHRjYmlBZ2FIUnRiQ0I3WEc0Z0lDQWdabTl1ZEMxemFYcGxPaUF4TGpVMk1qVjJkenRjYmlBZ0lDQXRkMlZpYTJsMExYUmxlSFF0YzJsNlpTMWhaR3AxYzNRNklHNXZibVU3WEc0Z0lIMWNibHh1SUNBdVkyOXVkR0ZwYm1WeUlIdGNiaUFnSUNCd1lXUmthVzVuT2lBd0lETnlaVzA3WEc0Z0lDQWdkMmxrZEdnNklERXdNQ1U3WEc0Z0lIMWNibjFjYmtCdFpXUnBZU0FvYldsdUxYZHBaSFJvT2lBeU5TNDVNemMxWlcwcElHRnVaQ0FvYldGNExYZHBaSFJvT2lBME9HVnRLU0I3WEc0Z0lHaDBiV3dnZTF4dUlDQWdJR1p2Ym5RdGMybDZaVG9nTVM0eU1EUTRNblozTzF4dUlDQWdJQzEzWldKcmFYUXRkR1Y0ZEMxemFYcGxMV0ZrYW5WemREb2dibTl1WlR0Y2JpQWdmVnh1WEc0Z0lDNWpiMjUwWVdsdVpYSWdlMXh1SUNBZ0lIQmhaR1JwYm1jNklEQWdNM0psYlR0Y2JpQWdJQ0IzYVdSMGFEb2dNVEF3SlR0Y2JpQWdmVnh1ZlZ4dVFHMWxaR2xoSUNodGFXNHRkMmxrZEdnNklEUTRMakEyTWpWbGJTa2dZVzVrSUNodFlYZ3RkMmxrZEdnNklEWTBaVzBwSUh0Y2JpQWdhSFJ0YkNCN1hHNGdJQ0FnWm05dWRDMXphWHBsT2lBd0xqWTFNVEEwTW5aM08xeHVJQ0FnSUMxM1pXSnJhWFF0ZEdWNGRDMXphWHBsTFdGa2FuVnpkRG9nYm05dVpUdGNiaUFnZlZ4dVhHNGdJQzVqYjI1MFlXbHVaWElnZTF4dUlDQWdJSEJoWkdScGJtYzZJREFnTkhKbGJUdGNiaUFnSUNCM2FXUjBhRG9nTVRBd0pUdGNiaUFnZlZ4dWZWeHVMbTV2Ym1VZ2UxeHVJQ0JrYVhOd2JHRjVPaUJ1YjI1bElDRnBiWEJ2Y25SaGJuUTdYRzU5WEc1Y2JpNWliRzlqYXlCN1hHNGdJR1JwYzNCc1lYazZJR0pzYjJOcklDRnBiWEJ2Y25SaGJuUTdYRzU5WEc1Y2JpNXViM05qY205c2JDQjdYRzRnSUc5MlpYSm1iRzkzT2lCb2FXUmtaVzQ3WEc1OVhHNWNiaTUwYVhSc1pTQjdYRzRnSUhSbGVIUXRkSEpoYm5ObWIzSnRPaUIxY0hCbGNtTmhjMlU3WEc1OVhHNWNiaTVpZFhKblpYSWdlMXh1SUNCa2FYTndiR0Y1T2lCdWIyNWxPMXh1SUNCNkxXbHVaR1Y0T2lBeE8xeHVmVnh1TG1KMWNtZGxjaUF1YkdsdVpTQjdYRzRnSUhkcFpIUm9PaUEwY21WdE8xeHVJQ0JvWldsbmFIUTZJREF1TkhKbGJUdGNiaUFnWW1GamEyZHliM1Z1WkMxamIyeHZjam9nSTJabVpqdGNiaUFnWkdsemNHeGhlVG9nWW14dlkyczdYRzRnSUhSeVlXNXphWFJwYjI0NklHRnNiQ0F3TGpOeklHVmhjMlV0YVc0dGIzVjBPMXh1ZlZ4dUxtSjFjbWRsY2lBdWJHbHVaVHB1YjNRb09teGhjM1F0WTJocGJHUXBJSHRjYmlBZ2JXRnlaMmx1TFdKdmRIUnZiVG9nTUM0MmNtVnRPMXh1ZlZ4dVFHMWxaR2xoSUNodFlYZ3RkMmxrZEdnNklESTFMamczTldWdEtTQjdYRzRnSUM1aWRYSm5aWElnZTF4dUlDQWdJR1JwYzNCc1lYazZJR2x1YkdsdVpTMWliRzlqYXp0Y2JpQWdmVnh1ZlZ4dVFHMWxaR2xoSUNodGFXNHRkMmxrZEdnNklESTFMamt6TnpWbGJTa2dZVzVrSUNodFlYZ3RkMmxrZEdnNklEUTRaVzBwSUh0Y2JpQWdMbUoxY21kbGNpQjdYRzRnSUNBZ1pHbHpjR3hoZVRvZ2FXNXNhVzVsTFdKc2IyTnJPMXh1SUNCOVhHNTlYRzVjYmk1aWRYSm5aWEk2YUc5MlpYSWdlMXh1SUNCamRYSnpiM0k2SUhCdmFXNTBaWEk3WEc1OVhHNWNiaTVpZFhKblpYSXVZV04wYVhabElIdGNiaUFnZEc5d09pQXpMamh5WlcwN1hHNTlYRzVjYmk1aWRYSm5aWEl1WVdOMGFYWmxJQzVzYVc1bE9tNTBhQzFqYUdsc1pDZ3lLU0I3WEc0Z0lHOXdZV05wZEhrNklEQTdYRzU5WEc1Y2JpNWlkWEpuWlhJdVlXTjBhWFpsSUM1c2FXNWxPbTUwYUMxamFHbHNaQ2d4S1NCN1hHNGdJSFJ5WVc1elptOXliVG9nZEhKaGJuTnNZWFJsV1NneGNtVnRLU0J5YjNSaGRHVW9ORFZrWldjcE8xeHVmVnh1WEc0dVluVnlaMlZ5TG1GamRHbDJaU0F1YkdsdVpUcHVkR2d0WTJocGJHUW9NeWtnZTF4dUlDQjBjbUZ1YzJadmNtMDZJSFJ5WVc1emJHRjBaVmtvTFRGeVpXMHBJSEp2ZEdGMFpTZ3RORFZrWldjcE8xeHVmVnh1WEc0dWFHVmhaR1Z5SUh0Y2JpQWdjRzl6YVhScGIyNDZJSEpsYkdGMGFYWmxPMXh1SUNCd1lXUmthVzVuT2lBd0xqbHlaVzBnTUR0Y2JuMWNibHh1TG01aGRpQjdYRzRnSUdScGMzQnNZWGs2SUdac1pYZzdYRzRnSUdwMWMzUnBabmt0WTI5dWRHVnVkRG9nWTJWdWRHVnlPMXh1SUNCaGJHbG5iaTFwZEdWdGN6b2dZMlZ1ZEdWeU8xeHVJQ0JtYjI1MExYZGxhV2RvZERvZ05UQXdPMXh1SUNCbWIyNTBMWE5wZW1VNklERXVOSEpsYlR0Y2JpQWdiR2x1WlMxb1pXbG5hSFE2SURFdU5uSmxiVHRjYmlBZ2JHVjBkR1Z5TFhOd1lXTnBibWM2SURBdU1ESnlaVzA3WEc1OVhHNWNiaTV1WVhaZlgyeHBjM1FnZTF4dUlDQmthWE53YkdGNU9pQm1iR1Y0TzF4dUlDQjBaWGgwTFhSeVlXNXpabTl5YlRvZ2RYQndaWEpqWVhObE8xeHVJQ0J0WVhKbmFXNHRjbWxuYUhRNklERXVOSEpsYlR0Y2JuMWNibHh1TG01aGRsOWZiR2x1YXlCN1hHNGdJR1JwYzNCc1lYazZJR0pzYjJOck8xeHVJQ0J3WVdSa2FXNW5PaUF3TGpkeVpXMGdNUzQwY21WdE8xeHVmVnh1WEc0dWJtRjJYMTlzYVc1ckxTMWhZM1JwZG1VZ2UxeHVJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUFqUlRrd01EQXdPMXh1ZlZ4dVhHNHVhR1ZoWkdWeVgxOW9ZWE5vZEdGbklIdGNiaUFnYldGeVoybHVMWEpwWjJoME9pQTNjbVZ0TzF4dWZWeHVYRzR1YzI5amFXRnNJSHRjYmlBZ1pHbHpjR3hoZVRvZ1pteGxlRHRjYmlBZ1oyRndPaUF5Y21WdE8xeHVmVnh1WEc0dWMyOWphV0ZzWDE5c2FXNXJJSHRjYmlBZ1pHbHpjR3hoZVRvZ1lteHZZMnM3WEc1OVhHNWNiaTVwWTI5dUxXWmhZMlZpYjI5ckxDQXVhV052YmkxcGJuTjBZV2R5WVcwc0lDNXBZMjl1TFhSM2FYUjBaWElnZTF4dUlDQm1hV3hzT2lBalJrWkdSa1pHTzF4dUlDQjNhV1IwYURvZ01pNDBjbVZ0TzF4dUlDQm9aV2xuYUhRNklESXVOSEpsYlR0Y2JuMWNibHh1TG0xMWRHVWdlMXh1SUNCd2IzTnBkR2x2YmpvZ1lXSnpiMngxZEdVN1hHNGdJSEpwWjJoME9pQXhNSEpsYlR0Y2JpQWdkRzl3T2lBMU1DVTdYRzRnSUhSeVlXNXpabTl5YlRvZ2RISmhibk5zWVhSbFdTZ3ROVEFsS1R0Y2JpQWdkMmxrZEdnNklEUXVOSEpsYlR0Y2JpQWdhR1ZwWjJoME9pQXlMalJ5WlcwN1hHNGdJRzkyWlhKbWJHOTNPaUJvYVdSa1pXNDdYRzRnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUNOR1JrWkdSa1k3WEc0Z0lHSnZjbVJsY2kxeVlXUnBkWE02SUROeVpXMDdYRzU5WEc1Y2JpNXRkWFJsWDE5c1lXSmxiRG82WW1WbWIzSmxMQ0F1YlhWMFpWOWZiR0ZpWld3Nk9tRm1kR1Z5SUh0Y2JpQWdZMjl1ZEdWdWREb2dYQ0pjSWp0Y2JpQWdjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxPMXh1SUNCMGIzQTZJREF1TVhKbGJUdGNiaUFnYkdWbWREb2dNQzR4Y21WdE8xeHVJQ0JrYVhOd2JHRjVPaUJpYkc5amF6dGNiaUFnYUdWcFoyaDBPaUF5TGpKeVpXMDdYRzRnSUhkcFpIUm9PaUF5TGpKeVpXMDdYRzRnSUdKdmVDMXphR0ZrYjNjNklEQWdNQzR4Y21WdElEQXVNWEpsYlNCeVoySmhLRFk1TENBeUxDQXlMQ0F3TGpNcE8xeHVJQ0JpYjNKa1pYSXRjbUZrYVhWek9pQTFNQ1U3WEc0Z0lIUnlZVzV6YVhScGIyNDZJR3hsWm5RZ01DNHpjeUJsWVhObExXbHVMVzkxZEN3Z2NtbG5hSFFnTUM0emN5QmxZWE5sTFdsdUxXOTFkRHRjYm4xY2JseHVMbTExZEdWZlgyeGhZbVZzT2pwaVpXWnZjbVVnZTF4dUlDQmlZV05yWjNKdmRXNWtPaUFqUlRrd01EQXdJSFZ5YkNoY0lpNHVMMmx0Wnk5emRtY3ZkbTlzZFcxbFgyOW1aaTV6ZG1kY0lpa2dibTh0Y21Wd1pXRjBJR05sYm5SbGNpOWpiMjUwWVdsdU8xeHVmVnh1WEc0dWJYVjBaVjlmYkdGaVpXdzZPbUZtZEdWeUlIdGNiaUFnY21sbmFIUTZJQzB5TGpKeVpXMDdYRzRnSUd4bFpuUTZJR0YxZEc4N1hHNGdJR0poWTJ0bmNtOTFibVE2SUNORk9UQXdNREFnZFhKc0tGd2lMaTR2YVcxbkwzTjJaeTkyYjJ4MWJXVmZkWEF1YzNablhDSXBJRzV2TFhKbGNHVmhkQ0JqWlc1MFpYSXZZMjl1ZEdGcGJqdGNibjFjYmx4dUxtMTFkR1ZmWDJOb1pXTnJZbTk0SUh0Y2JpQWdjRzl6YVhScGIyNDZJSEpsYkdGMGFYWmxPMXh1SUNCM2FXUjBhRG9nTVRBd0pUdGNiaUFnYUdWcFoyaDBPaUF4TURBbE8xeHVJQ0J3WVdSa2FXNW5PaUF3TzF4dUlDQnRZWEpuYVc0NklEQTdYRzRnSUc5d1lXTnBkSGs2SURBN1hHNGdJSG90YVc1a1pYZzZJRE03WEc1OVhHNWNiaTV0ZFhSbFgxOWphR1ZqYTJKdmVEcGphR1ZqYTJWa0lDc2dMbTExZEdWZlgyeGhZbVZzT2pwaVpXWnZjbVVnZTF4dUlDQnNaV1owT2lBdE1pNHljbVZ0TzF4dWZWeHVYRzR1YlhWMFpWOWZZMmhsWTJ0aWIzZzZZMmhsWTJ0bFpDQXJJQzV0ZFhSbFgxOXNZV0psYkRvNllXWjBaWElnZTF4dUlDQnlhV2RvZERvZ01DNHhjbVZ0TzF4dWZWeHVYRzVBYldWa2FXRWdLRzFoZUMxM2FXUjBhRG9nTmpSbGJTa2dlMXh1SUNBdWFHVmhaR1Z5SUh0Y2JpQWdJQ0J3WVdSa2FXNW5PaUF4TGpoeVpXMGdNRHRjYmlBZ2ZWeHVYRzRnSUM1dVlYWWdlMXh1SUNBZ0lHWnZiblF0YzJsNlpUb2dNaTQ0Y21WdE8xeHVJQ0FnSUd4cGJtVXRhR1ZwWjJoME9pQXpMakp5WlcwN1hHNGdJQ0FnYkdWMGRHVnlMWE53WVdOcGJtYzZJREF1TURSeVpXMDdYRzRnSUgxY2JseHVJQ0F1Ym1GMlgxOXNhWE4wSUh0Y2JpQWdJQ0J0WVhKbmFXNHRjbWxuYUhRNklESXVPSEpsYlR0Y2JpQWdmVnh1WEc0Z0lDNXVZWFpmWDJ4cGJtc2dlMXh1SUNBZ0lIQmhaR1JwYm1jNklERXVOSEpsYlNBeUxqaHlaVzA3WEc0Z0lIMWNibHh1SUNBdWFHVmhaR1Z5WDE5b1lYTm9kR0ZuSUh0Y2JpQWdJQ0J0WVhKbmFXNHRjbWxuYUhRNklEZHlaVzA3WEc0Z0lIMWNibHh1SUNBdWMyOWphV0ZzSUh0Y2JpQWdJQ0JuWVhBNklEUnlaVzA3WEc0Z0lIMWNibHh1SUNBdWFXTnZiaTFtWVdObFltOXZheXdnTG1samIyNHRhVzV6ZEdGbmNtRnRMQ0F1YVdOdmJpMTBkMmwwZEdWeUlIdGNiaUFnSUNCM2FXUjBhRG9nTkM0NGNtVnRPMXh1SUNBZ0lHaGxhV2RvZERvZ05DNDRjbVZ0TzF4dUlDQjlYRzVjYmlBZ0xtMTFkR1VnZTF4dUlDQWdJSGRwWkhSb09pQTRMamh5WlcwN1hHNGdJQ0FnYUdWcFoyaDBPaUEwTGpoeVpXMDdYRzRnSUNBZ1ltOXlaR1Z5TFhKaFpHbDFjem9nTm5KbGJUdGNiaUFnZlZ4dVhHNGdJQzV0ZFhSbFgxOXNZV0psYkRvNlltVm1iM0psTENBdWJYVjBaVjlmYkdGaVpXdzZPbUZtZEdWeUlIdGNiaUFnSUNCMGIzQTZJREF1TW5KbGJUdGNiaUFnSUNCc1pXWjBPaUF3TGpKeVpXMDdYRzRnSUNBZ2FHVnBaMmgwT2lBMExqUnlaVzA3WEc0Z0lDQWdkMmxrZEdnNklEUXVOSEpsYlR0Y2JpQWdJQ0JpYjNndGMyaGhaRzkzT2lBd0lEQXVNbkpsYlNBd0xqSnlaVzBnY21kaVlTZzJPU3dnTWl3Z01pd2dNQzR6S1R0Y2JpQWdmVnh1WEc0Z0lDNXRkWFJsWDE5c1lXSmxiRG82WVdaMFpYSWdlMXh1SUNBZ0lISnBaMmgwT2lBdE5DNDBjbVZ0TzF4dUlDQWdJR3hsWm5RNklHRjFkRzg3WEc0Z0lDQWdZbUZqYTJkeWIzVnVaRG9nSTBVNU1EQXdNQ0IxY213b1hDSXVMaTlwYldjdmMzWm5MM1p2YkhWdFpWOTFjQzV6ZG1kY0lpa2dibTh0Y21Wd1pXRjBJR05sYm5SbGNpOWpiMjUwWVdsdU8xeHVJQ0I5WEc1Y2JpQWdMbTExZEdWZlgyTm9aV05yWW05NE9tTm9aV05yWldRZ0t5QXViWFYwWlY5ZmJHRmlaV3c2T21KbFptOXlaU0I3WEc0Z0lDQWdiR1ZtZERvZ0xUUXVOSEpsYlR0Y2JpQWdmVnh1WEc0Z0lDNXRkWFJsWDE5amFHVmphMkp2ZURwamFHVmphMlZrSUNzZ0xtMTFkR1ZmWDJ4aFltVnNPanBoWm5SbGNpQjdYRzRnSUNBZ2NtbG5hSFE2SURBdU1uSmxiVHRjYmlBZ2ZWeHVYRzRnSUM1bWIyOTBaWElnZTF4dUlDQWdJSEJoWkdScGJtYzZJREp5WlcwZ05ISmxiVHRjYmlBZ0lDQm1iMjUwTFhOcGVtVTZJREV1TW5KbGJUdGNiaUFnSUNCc2FXNWxMV2hsYVdkb2REb2dNUzQwY21WdE8xeHVJQ0FnSUd4bGRIUmxjaTF6Y0dGamFXNW5PaUF3TGpBMGNtVnRPMXh1SUNBZ0lIUmxlSFF0WVd4cFoyNDZJR05sYm5SbGNqdGNiaUFnZlZ4dVhHNGdJQzVtYjI5MFpYSmZYMnhwYm10eklIdGNiaUFnSUNCdFlYSm5hVzR0WW05MGRHOXRPaUF4TGpKeVpXMDdYRzRnSUNBZ1oyRndPaUF5TGpoeVpXMDdYRzRnSUgxY2JuMWNia0J0WldScFlTQW9iV0Y0TFhkcFpIUm9PaUEwT0dWdEtTQjdYRzRnSUM1b1pXRmtaWElnZTF4dUlDQWdJR1JwYzNCc1lYazZJR1pzWlhnN1hHNGdJQ0FnWVd4cFoyNHRhWFJsYlhNNklHTmxiblJsY2p0Y2JpQWdJQ0J3WVdSa2FXNW5PaUF5Y21WdElEQWdNbkpsYlNBeWNtVnRPMXh1SUNCOVhHNWNiaUFnTG0xMWRHVWdlMXh1SUNBZ0lISnBaMmgwT2lBeWNtVnRPMXh1SUNCOVhHNWNiaUFnTG0xaGFXNWZYMmx1WkdWNElIdGNiaUFnSUNCaVlXTnJaM0p2ZFc1a0xXbHRZV2RsT2lCc2FXNWxZWEl0WjNKaFpHbGxiblFvTUM0eE1XUmxaeXdnY21kaVlTZ3dMQ0F3TENBd0xDQXdMamMyS1NBek1pNHhOQ1VzSUhKblltRW9NalUxTENBd0xDQXdMQ0F3S1NBM01pNDFOaVVwTENCMWNtd29YQ0l1TGk5cGJXY3ZZbWN0Ylc5aUxUSjRMbXB3WjF3aUtUdGNiaUFnSUNCaGJHbG5iaTFwZEdWdGN6b2dabXhsZUMxbGJtUTdYRzRnSUNBZ2FuVnpkR2xtZVMxamIyNTBaVzUwT2lCalpXNTBaWEk3WEc0Z0lDQWdjR0ZrWkdsdVp5MXNaV1owT2lBd08xeHVJQ0I5WEc1Y2JpQWdMbXh2WjI4Z2UxeHVJQ0FnSUcxaGNtZHBiaTFpYjNSMGIyMDZJREV5TGpSeVpXMDdYRzRnSUNBZ1lXNXBiV0YwYVc5dU9pQjZiMjl0U1c0Z01YTTdYRzRnSUgxY2JseHVJQ0JBYTJWNVpuSmhiV1Z6SUhwdmIyMUpiaUI3WEc0Z0lDQWdabkp2YlNCN1hHNGdJQ0FnSUNCMGNtRnVjMlp2Y20wNklITmpZV3hsTTJRb01Dd2dNQ3dnTUNrN1hHNGdJQ0FnZlZ4dUlDQjlYRzRnSUM1dVlYWWdlMXh1SUNBZ0lIUnlZVzV6Wm05eWJUb2dkSEpoYm5Oc1lYUmxXQ2d0TVRBeEpTazdYRzRnSUNBZ2NHOXphWFJwYjI0NklHWnBlR1ZrTzF4dUlDQWdJSFJ2Y0RvZ01EdGNiaUFnSUNCc1pXWjBPaUF3TzF4dUlDQWdJR0p2ZEhSdmJUb2dNRHRjYmlBZ0lDQjNhV1IwYURvZ05EaHlaVzA3WEc0Z0lDQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dJekkyTURjd056dGNiaUFnSUNCbWJHVjRMV1JwY21WamRHbHZiam9nWTI5c2RXMXVPMXh1SUNBZ0lHcDFjM1JwWm5rdFkyOXVkR1Z1ZERvZ1pteGxlQzF6ZEdGeWREdGNiaUFnSUNCd1lXUmthVzVuTFhSdmNEb2dPWEpsYlR0Y2JpQWdJQ0IwWlhoMExXRnNhV2R1T2lCalpXNTBaWEk3WEc0Z0lDQWdZV3hwWjI0dGFYUmxiWE02SUhOMGNtVjBZMmc3WEc0Z0lDQWdabTl1ZEMxemFYcGxPaUF5TGpoeVpXMDdYRzRnSUNBZ2JHbHVaUzFvWldsbmFIUTZJRE11TW5KbGJUdGNiaUFnSUNCc1pYUjBaWEl0YzNCaFkybHVaem9nTUM0d05ISmxiVHRjYmlBZ0lDQjBjbUZ1YzJsMGFXOXVPaUIwY21GdWMyWnZjbTBnTUM0MWN6dGNiaUFnZlZ4dVhHNGdJQzV1WVhZdVlXTjBhWFpsSUh0Y2JpQWdJQ0IwY21GdWMyWnZjbTA2SUhSeVlXNXpiR0YwWlZnb01DazdYRzRnSUNBZ2RISmhibk5wZEdsdmJqb2dkSEpoYm5ObWIzSnRJREF1TlhNN1hHNGdJQ0FnYjNabGNtWnNiM2N0ZVRvZ2MyTnliMnhzTzF4dUlDQjlYRzVjYmlBZ0xtNWhkbDlmYkdsemRDQjdYRzRnSUNBZ1pteGxlQzFrYVhKbFkzUnBiMjQ2SUdOdmJIVnRianRjYmlBZ0lDQnRZWEpuYVc0dGNtbG5hSFE2SURBN1hHNGdJQ0FnYldGeVoybHVMV0p2ZEhSdmJUb2dNUzR5Y21WdE8xeHVJQ0I5WEc1Y2JpQWdMbTVoZGw5ZmFYUmxiU0I3WEc0Z0lDQWdiV0Z5WjJsdUxXSnZkSFJ2YlRvZ01TNHljbVZ0TzF4dUlDQjlYRzRnSUM1dVlYWmZYMmwwWlcwNmJHRnpkQzFqYUdsc1pDQjdYRzRnSUNBZ2JXRnlaMmx1TFdKdmRIUnZiVG9nTUR0Y2JpQWdmVnh1WEc0Z0lDNXVZWFpmWDJ4cGJtc2dlMXh1SUNBZ0lIQmhaR1JwYm1jNklERXVOSEpsYlNBd08xeHVJQ0I5WEc1Y2JpQWdMbWhsWVdSbGNsOWZhR0Z6YUhSaFp5QjdYRzRnSUNBZ2JXRnlaMmx1TFhKcFoyaDBPaUF3TzF4dUlDQWdJRzFoY21kcGJpMWliM1IwYjIwNklEaHlaVzA3WEc0Z0lIMWNibHh1SUNBdWMyOWphV0ZzSUh0Y2JpQWdJQ0JxZFhOMGFXWjVMV052Ym5SbGJuUTZJR05sYm5SbGNqdGNiaUFnSUNCbllYQTZJRE55WlcwN1hHNGdJQ0FnYldGeVoybHVMV0p2ZEhSdmJUb2dNbkpsYlR0Y2JpQWdmVnh1WEc0Z0lDNXBZMjl1TFdaaFkyVmliMjlyTENBdWFXTnZiaTFwYm5OMFlXZHlZVzBzSUM1cFkyOXVMWFIzYVhSMFpYSWdlMXh1SUNBZ0lIZHBaSFJvT2lBMExqaHlaVzA3WEc0Z0lDQWdhR1ZwWjJoME9pQTBMamh5WlcwN1hHNGdJSDFjYm4xY2JpNXRZV2x1WDE5cGJtUmxlQ0I3WEc0Z0lHUnBjM0JzWVhrNklHWnNaWGc3WEc0Z0lHRnNhV2R1TFdsMFpXMXpPaUJqWlc1MFpYSTdYRzRnSUdKaFkydG5jbTkxYm1RNklDTkZPVEF3TURBZ2RYSnNLRndpTGk0dmFXMW5MMkpuTG1wd1oxd2lLU0J1YnkxeVpYQmxZWFFnZEc5d0wyTnZkbVZ5TzF4dUlDQndZV1JrYVc1bkxXeGxablE2SURFNGNtVnRPMXh1ZlZ4dVhHNHViRzluYnlCN1hHNGdJSGRwWkhSb09pQXpNaTQ1Y21WdE8xeHVmVnh1WEc0dVptOXZkR1Z5SUh0Y2JpQWdjR0ZrWkdsdVp6b2dNWEpsYlNBd08xeHVJQ0JrYVhOd2JHRjVPaUJtYkdWNE8xeHVJQ0JtYkdWNExXUnBjbVZqZEdsdmJqb2dZMjlzZFcxdU8xeHVJQ0JoYkdsbmJpMXBkR1Z0Y3pvZ1kyVnVkR1Z5TzF4dUlDQm1iMjUwTFhkbGFXZG9kRG9nTkRBd08xeHVJQ0JtYjI1MExYTnBlbVU2SURBdU9YSmxiVHRjYmlBZ2JHbHVaUzFvWldsbmFIUTZJREV1TVhKbGJUdGNiaUFnYkdWMGRHVnlMWE53WVdOcGJtYzZJREF1TURKeVpXMDdYRzRnSUhSbGVIUXRkSEpoYm5ObWIzSnRPaUIxY0hCbGNtTmhjMlU3WEc1OVhHNWNiaTVtYjI5MFpYSmZYMnhwYm10eklIdGNiaUFnWkdsemNHeGhlVG9nWm14bGVEdGNiaUFnYldGeVoybHVMV0p2ZEhSdmJUb2dNQzQyY21WdE8xeHVJQ0JuWVhBNklESXVNWEpsYlR0Y2JuMWNibHh1TG1admIzUmxjbDlmWTI5d2VYSnBaMmgwSUh0Y2JpQWdZMjlzYjNJNklDTTJRVFpCTmtFN1hHNTlYRzVBYzNWd2NHOXlkSE1nS0MxM1pXSnJhWFF0WVhCd1pXRnlZVzVqWlRwdWIyNWxLWHRjYmk1dGRYUmxYMTlzWVdKbGJEbzZZbVZtYjNKbGUySmhZMnRuY205MWJtUTZJMFU1TURBd01DQjFjbXdvWENJdUxpOXBiV2N2YzNabkwzWnZiSFZ0WlY5dlptWXVjM1puWENJcElHNXZMWEpsY0dWaGRDQmpaVzUwWlhJdlkyOXVkR0ZwYm4xY2JpNXRkWFJsWDE5c1lXSmxiRG82WVdaMFpYSjdZbUZqYTJkeWIzVnVaRG9qUlRrd01EQXdJSFZ5YkNoY0lpNHVMMmx0Wnk5emRtY3ZkbTlzZFcxbFgzVndMbk4yWjF3aUtTQnVieTF5WlhCbFlYUWdZMlZ1ZEdWeUwyTnZiblJoYVc1OVhHNHViV0ZwYmw5ZmFXNWtaWGg3WW1GamEyZHliM1Z1WkRvalJUa3dNREF3SUhWeWJDaGNJaTR1TDJsdFp5OWlaeTUzWldKd1hDSXBJRzV2TFhKbGNHVmhkQ0IwYjNBdlkyOTJaWEo5WEc1OVhHNWNiaUJBYldWa2FXRWdLRzFoZUMxM2FXUjBhRG9nTWpVdU9EYzFaVzBwZTF4dVhHNUFjM1Z3Y0c5eWRITWdLQzEzWldKcmFYUXRZWEJ3WldGeVlXNWpaVHB1YjI1bEtYdGNibHh1ZlZ4dVhHNTlYRzVjYmlCQWJXVmthV0VnS0cxcGJpMTNhV1IwYURvZ01qVXVPVE0zTldWdEtTQmhibVFnS0cxaGVDMTNhV1IwYURvZ05EaGxiU2w3WEc1Y2JrQnpkWEJ3YjNKMGN5QW9MWGRsWW10cGRDMWhjSEJsWVhKaGJtTmxPbTV2Ym1VcGUxeHVYRzU5WEc1Y2JuMWNibHh1SUVCdFpXUnBZU0FvYldsdUxYZHBaSFJvT2lBME9DNHdOakkxWlcwcElHRnVaQ0FvYldGNExYZHBaSFJvT2lBMk5HVnRLWHRjYmx4dVFITjFjSEJ2Y25SeklDZ3RkMlZpYTJsMExXRndjR1ZoY21GdVkyVTZibTl1WlNsN1hHNWNibjFjYmx4dWZWeHVYRzRnUUcxbFpHbGhJQ2h0WVhndGQybGtkR2c2SURZMFpXMHBlMXh1WEc1QWMzVndjRzl5ZEhNZ0tDMTNaV0pyYVhRdFlYQndaV0Z5WVc1alpUcHViMjVsS1h0Y2JpNXRkWFJsWDE5c1lXSmxiRG82WVdaMFpYSjdZbUZqYTJkeWIzVnVaRG9qUlRrd01EQXdJSFZ5YkNoY0lpNHVMMmx0Wnk5emRtY3ZkbTlzZFcxbFgzVndMbk4yWjF3aUtTQnVieTF5WlhCbFlYUWdZMlZ1ZEdWeUwyTnZiblJoYVc1OVhHNTlYRzVjYm4xY2JseHVJRUJ0WldScFlTQW9iV0Y0TFhkcFpIUm9PaUEwT0dWdEtYdGNibHh1UUhOMWNIQnZjblJ6SUNndGQyVmlhMmwwTFdGd2NHVmhjbUZ1WTJVNmJtOXVaU2w3WEc0dWJXRnBibDlmYVc1a1pYaDdZbUZqYTJkeWIzVnVaQzFwYldGblpUcHNhVzVsWVhJdFozSmhaR2xsYm5Rb01DNHhNV1JsWnl3Z2NtZGlZU2d3TENBd0xDQXdMQ0F3TGpjMktTQXpNaTR4TkNVc0lISm5ZbUVvTWpVMUxDQXdMQ0F3TENBd0tTQTNNaTQxTmlVcExDQjFjbXdvWENJdUxpOXBiV2N2WW1jdGJXOWlMVEo0TG5kbFluQmNJaWw5WEc1OVhHNWNibjFjYmlJc0lrQnBiWEJ2Y25RZ1hDSjJZWEl1YzJOemMxd2lPMXh5WEc1Y2NseHVhSFJ0YkNCN1hISmNiaUFnSUNCaWIzZ3RjMmw2YVc1bk9pQmliM0prWlhJdFltOTRPMXh5WEc0Z0lDQWdjMk55YjJ4c0xXSmxhR0YyYVc5eU9pQnpiVzl2ZEdnN1hISmNiaUFnSUNCbWIyNTBMWE5wZW1VNklDUmtaWE5yZEc5d095QXZMeURRdmRDd0lOR0EwTERRdDlHQTBMWFJpTkMxMEwzUXVOQzRJREU1TWpBZ01DNDFNakE0TXpRZ1BUMDlJREV3Y0hoY2NseHVJQ0FnSUdadmJuUXRabUZ0YVd4NU9pQWtabTl1ZEVaaGJXbHNlVHRjY2x4dUlDQWdJR1p2Ym5RdGMzUjViR1U2SUc1dmNtMWhiRHRjY2x4dUlDQWdJR1p2Ym5RdGQyVnBaMmgwT2lCdWIzSnRZV3c3WEhKY2JpQWdJQ0IwWlhoMExYSmxibVJsY21sdVp6b2dZWFYwYnp0Y2NseHVJQ0FnSUcxaGNtZHBiam9nTUR0Y2NseHVJQ0FnSUhCaFpHUnBibWM2SURBN1hISmNiaUFnSUNCb1pXbG5hSFE2SURFd01DVTdYSEpjYmlBZ0lDQXRkMlZpYTJsMExYUmxlSFF0YzJsNlpTMWhaR3AxYzNRNklERXdNQ1U3WEhKY2JuMWNjbHh1WEhKY2Jpb3NYSEpjYmlvNk9tRm1kR1Z5TEZ4eVhHNHFPanBpWldadmNtVWdlMXh5WEc0Z0lDQWdZbTk0TFhOcGVtbHVaem9nYVc1b1pYSnBkRHRjY2x4dWZWeHlYRzVjY2x4dUtqcG1iMk4xY3pwdWIzUW9PbVp2WTNWekxYWnBjMmxpYkdVcElIdGNjbHh1SUNBZ0lHOTFkR3hwYm1VNklHNXZibVU3WEhKY2JuMWNjbHh1WEhKY2JtSnZaSGtnZTF4eVhHNGdJQ0FnYUdWcFoyaDBPaUF4TURCMmFEdGNjbHh1SUNBZ0lHUnBjM0JzWVhrNklHWnNaWGc3WEhKY2JpQWdJQ0JtYkdWNExXUnBjbVZqZEdsdmJqb2dZMjlzZFcxdU8xeHlYRzRnSUNBZ2FuVnpkR2xtZVMxamIyNTBaVzUwT2lCemNHRmpaUzFpWlhSM1pXVnVPMXh5WEc0Z0lDQWdabTl1ZEMxemRIbHNaVG9nYm05eWJXRnNPMXh5WEc0Z0lDQWdabTl1ZEMxM1pXbG5hSFE2SUc1dmNtMWhiRHRjY2x4dUlDQWdJSFJsZUhRdGNtVnVaR1Z5YVc1bk9pQmhkWFJ2TzF4eVhHNGdJQ0FnYldGeVoybHVPaUF3TzF4eVhHNGdJQ0FnY0dGa1pHbHVaem9nTUR0Y2NseHVJQ0FnSUdobGFXZG9kRG9nTVRBd0pUdGNjbHh1SUNBZ0lHTnZiRzl5T2lBa2RHVjRkRU52Ykc5eU95QXZMeURSaHRDeTBMWFJnaURRdjlDK0lOR0QwTHpRdnRDNzBZZlFzTkM5MExqUmppRFJndEMxMExyUmdkR0MwTEFnMEwvUXZpRFJnZEN3MExuUmd0R0RYSEpjYmlBZ0lDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQWtZMjlzYjNKQ1lXTnJaM0p2ZFc1a095QXZMeURSaHRDeTBMWFJnaURSaE5DKzBMM1FzQ0RSZ2RDdzBMblJndEN3SU5DLzBMNGcwWVBRdk5DKzBMdlJoOUN3MEwzUXVOR09YSEpjYm4xY2NseHVYSEpjYm0xaGFXNGdlMXh5WEc0Z0lDQWdabXhsZUMxbmNtOTNPaUF4TzF4eVhHNTlYSEpjYmx4eVhHNWhMRnh5WEc1aE9taHZkbVZ5SUh0Y2NseHVJQ0FnSUhSbGVIUXRaR1ZqYjNKaGRHbHZiam9nYm05dVpUdGNjbHh1ZlZ4eVhHNWNjbHh1YVc1d2RYUXNYSEpjYm5SbGVIUmhjbVZoSUh0Y2NseHVJQ0FnSUd4cGJtVXRhR1ZwWjJoME9pQnBibWhsY21sME8xeHlYRzRnSUNBZ2JXRnlaMmx1T2lBd08xeHlYRzRnSUNBZ2NHRmtaR2x1WnpvZ01EdGNjbHh1ZlZ4eVhHNWNjbHh1YVc1d2RYUXNYSEpjYm1KMWRIUnZiaUI3WEhKY2JpQWdJQ0JpYjNKa1pYSTZJRzV2Ym1VN1hISmNiaUFnSUNCdmRYUnNhVzVsT2lCdWIyNWxPMXh5WEc0Z0lDQWdZM1Z5YzI5eU9pQndiMmx1ZEdWeU8xeHlYRzU5WEhKY2JseHlYRzVpZFhSMGIyNHNYSEpjYm1sdWNIVjBMRnh5WEc1aExGeHlYRzUwWlhoMFlYSmxZU0I3WEhKY2JpQWdJQ0J2ZFhSc2FXNWxPaUJ1YjI1bE8xeHlYRzRnSUNBZ1kzVnljMjl5T2lCd2IybHVkR1Z5TzF4eVhHNGdJQ0FnWm05dWREb2dhVzVvWlhKcGREdGNjbHh1SUNBZ0lHTnZiRzl5T2lCcGJtaGxjbWwwTzF4eVhHNWNjbHh1SUNBZ0lDWTZabTlqZFhNZ2UxeHlYRzRnSUNBZ0lDQWdJRzkxZEd4cGJtVTZJRzV2Ym1VN1hISmNiaUFnSUNCOVhISmNibHh5WEc0Z0lDQWdKanBoWTNScGRtVWdlMXh5WEc0Z0lDQWdJQ0FnSUc5MWRHeHBibVU2SUc1dmJtVTdYSEpjYmlBZ0lDQjlYSEpjYm4xY2NseHVYSEpjYm1sdFp5eGNjbHh1Y0dsamRIVnlaU0I3WEhKY2JpQWdJQ0IzYVdSMGFEb2dNVEF3SlR0Y2NseHVJQ0FnSUdobGFXZG9kRG9nWVhWMGJ6dGNjbHh1ZlZ4eVhHNWNjbHh1YURFc1hISmNibWd5TEZ4eVhHNW9NeXhjY2x4dWFEUXNYSEpjYm1nMUxGeHlYRzVvTml4Y2NseHVabWxuZFhKbExGeHlYRzVtYVdWc1pITmxkQ0I3WEhKY2JpQWdJQ0JtYjI1ME9pQnBibWhsY21sME8xeHlYRzRnSUNBZ2JXRnlaMmx1T2lBd08xeHlYRzRnSUNBZ2NHRmtaR2x1WnpvZ01EdGNjbHh1ZlZ4eVhHNWNjbHh1Y0NCN1hISmNiaUFnSUNCdFlYSm5hVzQ2SURBN1hISmNibjFjY2x4dVhISmNibU52WkdVc1hISmNibXRpWkN4Y2NseHVjMkZ0Y0NCN1hISmNiaUFnSUNCbWIyNTBMV1poYldsc2VUb2diVzl1YjNOd1lXTmxMQ0J0YjI1dmMzQmhZMlU3WEhKY2JpQWdJQ0JtYjI1MExYTnBlbVU2SUdsdWFHVnlhWFE3WEhKY2JuMWNjbHh1WEhKY2JtSjFkSFJ2YmlCN1hISmNiaUFnSUNCaWIzSmtaWEk2SUc1dmJtVTdYSEpjYmlBZ0lDQmpiMnh2Y2pvZ2FXNW9aWEpwZER0Y2NseHVJQ0FnSUdadmJuUTZJR2x1YUdWeWFYUTdYSEpjYmlBZ0lDQjBaWGgwTFdGc2FXZHVPaUJwYm1obGNtbDBPMXh5WEc0Z0lDQWdjR0ZrWkdsdVp6b2dNRHRjY2x4dUlDQWdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJR2x1YUdWeWFYUTdYSEpjYmlBZ0lDQjBaWGgwTFhKbGJtUmxjbWx1WnpvZ1lYVjBienRjY2x4dWZWeHlYRzVjY2x4dWRXd2dlMXh5WEc0Z0lDQWdjR0ZrWkdsdVp6b2dNRHRjY2x4dUlDQWdJRzFoY21kcGJqb2dNRHRjY2x4dVhISmNiaUFnSUNCc2FTQjdYSEpjYmlBZ0lDQWdJQ0FnYldGeVoybHVPaUF3TzF4eVhHNGdJQ0FnSUNBZ0lIQmhaR1JwYm1jNklEQTdYSEpjYmlBZ0lDQWdJQ0FnYkdsemRDMXpkSGxzWlRvZ2JtOXVaVHRjY2x4dUlDQWdJSDFjY2x4dWZWeHlYRzVjY2x4dWFXNXdkWFJiZEhsd1pUMWNJbTUxYldKbGNsd2lYVG82TFhkbFltdHBkQzFwYm01bGNpMXpjR2x1TFdKMWRIUnZiaXhjY2x4dWFXNXdkWFJiZEhsd1pUMWNJbTUxYldKbGNsd2lYVG82TFhkbFltdHBkQzF2ZFhSbGNpMXpjR2x1TFdKMWRIUnZiaUI3WEhKY2JpQWdJQ0F0ZDJWaWEybDBMV0Z3Y0dWaGNtRnVZMlU2SUc1dmJtVTdYSEpjYmlBZ0lDQnRZWEpuYVc0NklEQTdYSEpjYm4xY2NseHVYSEpjYm1sdWNIVjBXM1I1Y0dVOVhDSnVkVzFpWlhKY0lsMGdlMXh5WEc0Z0lDQWdMVzF2ZWkxaGNIQmxZWEpoYm1ObE9pQjBaWGgwWm1sbGJHUTdYSEpjYm4xY2NseHVYSEpjYmk1amIyNTBZV2x1WlhJZ2UxeHlYRzRnSUNBZ2QybGtkR2c2SUNSamIyNTBZV2x1WlhJN1hISmNiaUFnSUNCdFlYSm5hVzQ2SURBZ1lYVjBienRjY2x4dWZWeHlYRzVjY2x4dVFHbHVZMngxWkdVZ2MyMWhiR3hRYUc5dVpTQjdYSEpjYmlBZ0lDQm9kRzFzSUh0Y2NseHVJQ0FnSUNBZ0lDQm1iMjUwTFhOcGVtVTZJQ1J6YldGc2JGQm9iMjVsT3lCY2NseHVJQ0FnSUNBZ0lDQXRkMlZpYTJsMExYUmxlSFF0YzJsNlpTMWhaR3AxYzNRNklHNXZibVU3WEhKY2JpQWdJQ0I5WEhKY2JpQWdJQ0F1WTI5dWRHRnBibVZ5SUh0Y2NseHVJQ0FnSUNBZ0lDQndZV1JrYVc1bk9pQXdJRE55WlcwN1hISmNiaUFnSUNBZ0lDQWdkMmxrZEdnNklERXdNQ1U3WEhKY2JpQWdJQ0I5WEhKY2JuMWNjbHh1WEhKY2JrQnBibU5zZFdSbElIQm9iMjVsSUh0Y2NseHVJQ0FnSUdoMGJXd2dlMXh5WEc0Z0lDQWdJQ0FnSUdadmJuUXRjMmw2WlRvZ0pIQm9iMjVsT3lCY2NseHVJQ0FnSUNBZ0lDQXRkMlZpYTJsMExYUmxlSFF0YzJsNlpTMWhaR3AxYzNRNklHNXZibVU3WEhKY2JpQWdJQ0I5WEhKY2JpQWdJQ0F1WTI5dWRHRnBibVZ5SUh0Y2NseHVJQ0FnSUNBZ0lDQndZV1JrYVc1bk9pQXdJRE55WlcwN1hISmNiaUFnSUNBZ0lDQWdkMmxrZEdnNklERXdNQ1U3WEhKY2JpQWdJQ0I5WEhKY2JuMWNjbHh1WEhKY2JrQnBibU5zZFdSbElIUmhZbXhsZENCN1hISmNiaUFnSUNCb2RHMXNJSHRjY2x4dUlDQWdJQ0FnSUNCbWIyNTBMWE5wZW1VNklDUjBZV0pzWlhRN1hISmNiaUFnSUNBZ0lDQWdMWGRsWW10cGRDMTBaWGgwTFhOcGVtVXRZV1JxZFhOME9pQnViMjVsTzF4eVhHNGdJQ0FnZlZ4eVhHNGdJQ0FnTG1OdmJuUmhhVzVsY2lCN1hISmNiaUFnSUNBZ0lDQWdjR0ZrWkdsdVp6b2dNQ0EwY21WdE8xeHlYRzRnSUNBZ0lDQWdJSGRwWkhSb09pQXhNREFsTzF4eVhHNGdJQ0FnZlZ4eVhHNTlYSEpjYmx4eVhHNHVibTl1WlNCN1hISmNiaUFnSUNCa2FYTndiR0Y1T2lCdWIyNWxJQ0ZwYlhCdmNuUmhiblE3WEhKY2JuMWNjbHh1WEhKY2JpNWliRzlqYXlCN1hISmNiaUFnSUNCa2FYTndiR0Y1T2lCaWJHOWpheUFoYVcxd2IzSjBZVzUwTzF4eVhHNTlYSEpjYmx4eVhHNHVibTl6WTNKdmJHd2dlMXh5WEc0Z0lDQWdiM1psY21ac2IzYzZJR2hwWkdSbGJqdGNjbHh1ZlNJc0lseHlYRzVjY2x4dUx5OGcwSkxRdmRDKzBZSFF1TkM4SU5DeTBZSFF0U0RRdU5DODBMWFJqdEdKMExqUXRTRFJodEN5MExYUmd0Q3dJTkM0MExjZzBMelFzTkM2MExYUmd0Q3dJTkN5SU5DLzBMWFJnTkMxMEx6UXRkQzkwTDNSaTlDMVhISmNiaVJqYjJ4dmNpMWliR0ZqYXpvZ0l6RTNNVFl4Tmp0Y2NseHVKR052Ykc5eUxXZHlaV1Z1T2lBak5rTkJRek5FTzF4eVhHNGtZMjlzYjNJdGNtVmtPaUFqUlRrd01EQXdPMXh5WEc0a1kyOXNiM0l0WkdGeWExSmxaRG9nSXpJMk1EY3dOenM3WEhKY2JpUmpiMnh2Y2kxbmNtVjVPaUFqTmtFMlFUWkJPMXh5WEc0a1kyOXNiM0l0YkdsbmFIUkhjbVY1T2lBalJqSkdNa1l5TzF4eVhHNGtZMjlzYjNJdGQyaHBkR1U2SUNOR1JrWkdSa1k3WEhKY2JseHlYRzR2THlEUW5kQ3cwWUhSZ3RHQTBMN1F1ZEM2MExBZzBMSFFzTkMzMEw3UXN0QyswTFBRdmlEUmlOR0EwTGpSaE5HQzBMQWcwTC9RdnRDMElOR0EwTERRdDlDOTBZdlF0U0RSZ05DdzBMZlJnTkMxMFlqUXRkQzkwTGpSanlEUmpkQzYwWURRc05DOTBMQmNjbHh1SkhOdFlXeHNVR2h2Ym1VNklERXVOVFl5TlhaM095QXZMeUJtYjI1MExYTnBlbVU2SUNneE1EQXZNekl3SU5DMDBMNGdOREUwS1NBcUlEVjJkeURRczlDMDBMVWdNekl3SU5HTjBZTFF2aURSaU5DNDBZRFF1TkM5MExBZzBMelF2dEN4SU5DeTBMWFJnTkdCMExqUXVDRFF2TkN3MExyUXRkR0MwTEJjY2x4dUpIQm9iMjVsT2lBeExqSXdORGd5ZG5jN0lDOHZJR1p2Ym5RdGMybDZaVG9nS0RFd01DODBNVFVnMExUUXZpQTNOamdwSUNvZ05YWjNJTkN6MExUUXRTQTBNVFFnMFkzUmd0QytJTkdJMExqUmdOQzQwTDNRc0NEUXZOQyswTEVnMExMUXRkR0EwWUhRdU5DNElOQzgwTERRdXRDMTBZTFFzRnh5WEc0a2RHRmliR1YwT2lBd0xqWTFNVEEwTW5aM095QXZMeUJtYjI1MExYTnBlbVU2SUNneE1EQXZOelk1SU5DMDBMNGdNVEF5TkNrZ0tpQTFkbmNnMExQUXROQzFJREV3TWpRZzBZM1JndEMrSU5HSTBMalJnTkM0MEwzUXNDRFF2OUM3MExEUXZkR0kwTFhSZ3RDOTBMN1F1U0RRc3RDMTBZRFJnZEM0MExnZzBMelFzTkM2MExYUmd0Q3dYSEpjYmlSa1pYTnJkRzl3T2lBd0xqWTVORFEwTlhaM095QXZMeUJtYjI1MExYTnBlbVU2SUNneE1EQXdMekUwTkRBcElOQ3owTFRRdFNBeE5EUXdJTkdOMFlMUXZpRFJpTkM0MFlEUXVOQzkwTEFnMExUUXRkR0IwTHJSZ3RDKzBML1F2ZEMrMExrZzBMTFF0ZEdBMFlIUXVOQzRJTkM4MExEUXV0QzEwWUxRc0Z4eVhHNWNjbHh1THk4ZzBZalJnTkM0MFlUUmdpRFF2OUMrSU5HRDBMelF2dEM3MFlmUXNOQzkwTGpSamlEUXY5QytJTkdCMExEUXVkR0MwWU5jY2x4dUpHWnZiblJHWVcxcGJIazZJRkp2WW05MGJ5d2djMkZ1Y3kxelpYSnBaanRjY2x4dVhISmNiaTh2SU5DbTBMTFF0ZEdDSU5HQzBMWFF1dEdCMFlMUXNDRFF0TkM3MFk4ZzBMTFJnZEMxMExQUXZpRFJnZEN3MExuUmd0Q3dYSEpjYmlSMFpYaDBRMjlzYjNJNklDTkdSa1pHUmtZN1hISmNibHh5WEc0dkx5RFFwdEN5MExYUmdpRFJoTkMrMEwzUXNDRFJnZEN3MExuUmd0Q3dYSEpjYmlSamIyeHZja0poWTJ0bmNtOTFibVE2SUNNd01EQXdNREE3WEhKY2JseHlYRzR2THlEUXFOQzQwWURRdU5DOTBMQWdZMjl1ZEdGcGJtVnlMZEN3WEhKY2JpUmpiMjUwWVdsdVpYSTZJREV5T1hKbGJUc2lMQ0pBYldsNGFXNGdabTl1ZENBb0pIZGxhV2RvZEN3Z0pITnBlbVVzSUNSb1pXbG5hSFFwSUh0Y2NseHVJQ0FnSUdadmJuUXRkMlZwWjJoME9pQWtkMlZwWjJoME8xeHlYRzRnSUNBZ1ptOXVkQzF6YVhwbE9pQWtjMmw2WlR0Y2NseHVJQ0FnSUd4cGJtVXRhR1ZwWjJoME9pQWthR1ZwWjJoME8xeHlYRzU5WEhKY2JseHlYRzVBYldsNGFXNGdjMjFoYkd4UWFHOXVaU0I3WEhKY2JpQWdJQ0JBYldWa2FXRWdLRzFoZUMxM2FXUjBhRG9nTWpVdU9EYzFaVzBwSUh0Y2NseHVJQ0FnSUNBZ0lDQkFZMjl1ZEdWdWREdGNjbHh1SUNBZ0lIMWNjbHh1ZlZ4eVhHNWNjbHh1UUcxcGVHbHVJSEJvYjI1bElIdGNjbHh1SUNBZ0lFQnRaV1JwWVNBb2JXbHVMWGRwWkhSb09pQXlOUzQ1TXpjMVpXMHBJR0Z1WkNBb2JXRjRMWGRwWkhSb09pQTBPR1Z0S1NCN1hISmNiaUFnSUNBZ0lDQWdRR052Ym5SbGJuUTdYSEpjYmlBZ0lDQjlYSEpjYm4xY2NseHVYSEpjYmtCdGFYaHBiaUIwWVdKc1pYUWdlMXh5WEc0Z0lDQWdRRzFsWkdsaElDaHRhVzR0ZDJsa2RHZzZJRFE0TGpBMk1qVmxiU2tnWVc1a0lDaHRZWGd0ZDJsa2RHZzZJRFkwWlcwcElIdGNjbHh1SUNBZ0lDQWdJQ0JBWTI5dWRHVnVkRHRjY2x4dUlDQWdJSDFjY2x4dWZWeHlYRzVjY2x4dVFHMXBlR2x1SUdSbGMydDBiM0FnZTF4eVhHNGdJQ0FnUUcxbFpHbGhJQ2h0YVc0dGQybGtkR2c2SURZMExqQTJNalZsYlNrZ2UxeHlYRzRnSUNBZ0lDQWdJRUJqYjI1MFpXNTBPMXh5WEc0Z0lDQWdmVnh5WEc1OVhISmNibHh5WEc1QWJXbDRhVzRnWm14bGVFTmxiblJsY2lCN1hISmNiaUFnSUNCa2FYTndiR0Y1T2lCbWJHVjRPMXh5WEc0Z0lDQWdZV3hwWjI0dGFYUmxiWE02SUdObGJuUmxjanRjY2x4dWZWeHlYRzRnSUZ4eVhHNUFiV2w0YVc0Z1pteGxlRk53WVdObFFtVjBkMlZsYmlCN1hISmNiaUFnSUNCa2FYTndiR0Y1T2lCbWJHVjRPMXh5WEc0Z0lDQWdhblZ6ZEdsbWVTMWpiMjUwWlc1ME9pQnpjR0ZqWlMxaVpYUjNaV1Z1TzF4eVhHNTlYSEpjYmx4eVhHNUFiV2w0YVc0Z1pteGxlRU5sYm5SbGNrTmxiblJsY2lCN1hISmNiaUFnSUNCa2FYTndiR0Y1T2lCbWJHVjRPMXh5WEc0Z0lDQWdZV3hwWjI0dGFYUmxiWE02SUdObGJuUmxjanRjY2x4dUlDQWdJR3AxYzNScFpua3RZMjl1ZEdWdWREb2dZMlZ1ZEdWeU8xeHlYRzU5WEhKY2JseHlYRzVBYldsNGFXNGdZV3hzVUdodmJtVWdlMXh5WEc0Z0lDQWdRRzFsWkdsaElDaHRZWGd0ZDJsa2RHZzZJRFE0WlcwcElIdGNjbHh1SUNBZ0lDQWdJQ0JBWTI5dWRHVnVkRHRjY2x4dUlDQWdJSDFjY2x4dWZWeHlYRzVjY2x4dVFHMXBlR2x1SUdGc2JGQm9iMjVsVkdGaWJHVjBJSHRjY2x4dUlDQWdJRUJ0WldScFlTQW9iV0Y0TFhkcFpIUm9PaUEyTkdWdEtTQjdYSEpjYmlBZ0lDQWdJQ0FnUUdOdmJuUmxiblE3WEhKY2JpQWdJQ0I5WEhKY2JuMGlMQ0l1ZEdsMGJHVWdlMXh5WEc0Z0lDQWdkR1Y0ZEMxMGNtRnVjMlp2Y20wNklIVndjR1Z5WTJGelpUdGNjbHh1ZlZ4eVhHNGlMQ0l1WW5WeVoyVnlJSHRjY2x4dUlDQWdJR1JwYzNCc1lYazZJRzV2Ym1VN1hISmNiaUFnSUNCNkxXbHVaR1Y0T2lBeE8xeHlYRzRnSUNBZ0lDQWdJQzVzYVc1bElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2QybGtkR2c2SURSeVpXMDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHaGxhV2RvZERvZ0xqUnlaVzA3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJQ05tWm1ZN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdScGMzQnNZWGs2SUdKc2IyTnJPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBjbUZ1YzJsMGFXOXVPaUJoYkd3Z01DNHpjeUJsWVhObExXbHVMVzkxZER0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSmpwdWIzUW9PbXhoYzNRdFkyaHBiR1FwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHMWhjbWRwYmkxaWIzUjBiMjA2SURBdU5uSmxiVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUVCcGJtTnNkV1JsSUhOdFlXeHNVR2h2Ym1VZ2UxeHlYRzRnSUNBZ0lDQWdJQ1lnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JrYVhOd2JHRjVPaUJwYm14cGJtVXRZbXh2WTJzN1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdmVnh5WEc0Z0lDQWdRR2x1WTJ4MVpHVWdjR2h2Ym1VZ2UxeHlYRzRnSUNBZ0lDQWdJQ1lnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JrYVhOd2JHRjVPaUJwYm14cGJtVXRZbXh2WTJzN1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdmVnh5WEc1OVhISmNiaTVpZFhKblpYSTZhRzkyWlhKN1hISmNiaUFnSUNCamRYSnpiM0k2SUhCdmFXNTBaWEk3WEhKY2JuMWNjbHh1TG1KMWNtZGxjaTVoWTNScGRtVWdlMXh5WEc0Z0lDQWdkRzl3T2lBekxqaHlaVzA3WEhKY2JuMWNjbHh1TG1KMWNtZGxjaTVoWTNScGRtVWdMbXhwYm1VNmJuUm9MV05vYVd4a0tESXBlMXh5WEc0Z0lDQWdiM0JoWTJsMGVUb2dNRHRjY2x4dWZWeHlYRzR1WW5WeVoyVnlMbUZqZEdsMlpTQXViR2x1WlRwdWRHZ3RZMmhwYkdRb01TbDdYSEpjYmlBZ0lDQjBjbUZ1YzJadmNtMDZJSFJ5WVc1emJHRjBaVmtvTVhKbGJTa2djbTkwWVhSbEtEUTFaR1ZuS1R0Y2NseHVmVnh5WEc0dVluVnlaMlZ5TG1GamRHbDJaU0F1YkdsdVpUcHVkR2d0WTJocGJHUW9NeWw3WEhKY2JpQWdJQ0IwY21GdWMyWnZjbTA2SUhSeVlXNXpiR0YwWlZrb0xURnlaVzBwSUhKdmRHRjBaU2d0TkRWa1pXY3BPMXh5WEc1OUlpd2lMbWhsWVdSbGNpQjdYSEpjYmlBZ0lDQndiM05wZEdsdmJqb2djbVZzWVhScGRtVTdYSEpjYmlBZ0lDQndZV1JrYVc1bk9pQXVPWEpsYlNBd08xeHlYRzU5WEhKY2JpNXVZWFlnZTF4eVhHNGdJQ0FnWkdsemNHeGhlVG9nWm14bGVEdGNjbHh1SUNBZ0lHcDFjM1JwWm5rdFkyOXVkR1Z1ZERvZ1kyVnVkR1Z5TzF4eVhHNGdJQ0FnWVd4cFoyNHRhWFJsYlhNNklHTmxiblJsY2p0Y2NseHVJQ0FnSUVCcGJtTnNkV1JsSUdadmJuUW9OVEF3TENBeExqUnlaVzBzSURFdU5uSmxiU2s3WEhKY2JpQWdJQ0JzWlhSMFpYSXRjM0JoWTJsdVp6b2dNQzR3TW5KbGJUdGNjbHh1ZlZ4eVhHNHVibUYyWDE5c2FYTjBJSHRjY2x4dUlDQWdJR1JwYzNCc1lYazZJR1pzWlhnN1hISmNiaUFnSUNCMFpYaDBMWFJ5WVc1elptOXliVG9nZFhCd1pYSmpZWE5sTzF4eVhHNGdJQ0FnYldGeVoybHVMWEpwWjJoME9pQXhMalJ5WlcwN1hISmNibjFjY2x4dUxtNWhkbDlmYkdsdWF5QjdYSEpjYmlBZ0lDQmthWE53YkdGNU9pQmliRzlqYXp0Y2NseHVJQ0FnSUhCaFpHUnBibWM2SUM0M2NtVnRJREV1TkhKbGJUdGNjbHh1ZlZ4eVhHNHVibUYyWDE5c2FXNXJMUzFoWTNScGRtVWdlMXh5WEc0Z0lDQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dKR052Ykc5eUxYSmxaRHRjY2x4dWZWeHlYRzR1YUdWaFpHVnlYMTlvWVhOb2RHRm5JSHRjY2x4dUlDQWdJRzFoY21kcGJpMXlhV2RvZERvZ04zSmxiVHRjY2x4dWZWeHlYRzR1YzI5amFXRnNJSHRjY2x4dUlDQWdJR1JwYzNCc1lYazZJR1pzWlhnN1hISmNiaUFnSUNCbllYQTZJREp5WlcwN1hISmNibjFjY2x4dUxuTnZZMmxoYkY5ZmJHbHVheUI3WEhKY2JpQWdJQ0JrYVhOd2JHRjVPaUJpYkc5amF6dGNjbHh1ZlZ4eVhHNHVhV052YmkxbVlXTmxZbTl2YXl3Z0xtbGpiMjR0YVc1emRHRm5jbUZ0TENBdWFXTnZiaTEwZDJsMGRHVnlJSHRjY2x4dUlDQWdJR1pwYkd3NklDUmpiMnh2Y2kxM2FHbDBaVHRjY2x4dUlDQWdJSGRwWkhSb09pQXlMalJ5WlcwN1hISmNiaUFnSUNCb1pXbG5hSFE2SURJdU5ISmxiVHRjY2x4dWZWeHlYRzR1YlhWMFpTQjdYSEpjYmlBZ0lDQndiM05wZEdsdmJqb2dZV0p6YjJ4MWRHVTdYSEpjYmlBZ0lDQnlhV2RvZERvZ01UQnlaVzA3WEhKY2JpQWdJQ0IwYjNBNklEVXdKVHRjY2x4dUlDQWdJSFJ5WVc1elptOXliVG9nZEhKaGJuTnNZWFJsV1NndE5UQWxLVHRjY2x4dUlDQWdJSGRwWkhSb09pQTBMalJ5WlcwN1hISmNiaUFnSUNCb1pXbG5hSFE2SURJdU5ISmxiVHRjY2x4dUlDQWdJRzkyWlhKbWJHOTNPaUJvYVdSa1pXNDdYSEpjYmlBZ0lDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQWtZMjlzYjNJdGQyaHBkR1U3WEhKY2JpQWdJQ0JpYjNKa1pYSXRjbUZrYVhWek9pQXpjbVZ0TzF4eVhHNTlYSEpjYmk1dGRYUmxYMTlzWVdKbGJEbzZZbVZtYjNKbExDQXViWFYwWlY5ZmJHRmlaV3c2T21GbWRHVnlJSHRjY2x4dUlDQWdJR052Ym5SbGJuUTZJQ2NuTzF4eVhHNGdJQ0FnY0c5emFYUnBiMjQ2SUdGaWMyOXNkWFJsTzF4eVhHNGdJQ0FnZEc5d09pQXVNWEpsYlR0Y2NseHVJQ0FnSUd4bFpuUTZJQzR4Y21WdE8xeHlYRzRnSUNBZ1pHbHpjR3hoZVRvZ1lteHZZMnM3WEhKY2JpQWdJQ0JvWldsbmFIUTZJREl1TW5KbGJUdGNjbHh1SUNBZ0lIZHBaSFJvT2lBeUxqSnlaVzA3WEhKY2JpQWdJQ0JpYjNndGMyaGhaRzkzT2lBd0lDNHhjbVZ0SUM0eGNtVnRJSEpuWW1Fb05qa3NJRElzSURJc0lEQXVNeWs3WEhKY2JpQWdJQ0JpYjNKa1pYSXRjbUZrYVhWek9pQTFNQ1U3WEhKY2JpQWdJQ0IwY21GdWMybDBhVzl1T2lCc1pXWjBJQzR6Y3lCbFlYTmxMV2x1TFc5MWRDd2djbWxuYUhRZ0xqTnpJR1ZoYzJVdGFXNHRiM1YwTzF4eVhHNTlYSEpjYmk1dGRYUmxYMTlzWVdKbGJEbzZZbVZtYjNKbElIdGNjbHh1SUNBZ0lHSmhZMnRuY205MWJtUTZJQ1JqYjJ4dmNpMXlaV1FnZFhKc0tDY3VMaTlwYldjdmMzWm5MM1p2YkhWdFpWOXZabVl1YzNabkp5a2dibTh0Y21Wd1pXRjBJR05sYm5SbGNpOWpiMjUwWVdsdU8xeHlYRzVjY2x4dWZWeHlYRzR1YlhWMFpWOWZiR0ZpWld3Nk9tRm1kR1Z5SUh0Y2NseHVJQ0FnSUhKcFoyaDBPaUF0TWk0eWNtVnRPMXh5WEc0Z0lDQWdiR1ZtZERvZ1lYVjBienRjY2x4dUlDQWdJR0poWTJ0bmNtOTFibVE2SUNSamIyeHZjaTF5WldRZ2RYSnNLQ2N1TGk5cGJXY3ZjM1puTDNadmJIVnRaVjkxY0M1emRtY25LU0J1YnkxeVpYQmxZWFFnWTJWdWRHVnlMMk52Ym5SaGFXNDdYSEpjYm4xY2NseHVMbTExZEdWZlgyTm9aV05yWW05NElIdGNjbHh1SUNBZ0lIQnZjMmwwYVc5dU9pQnlaV3hoZEdsMlpUdGNjbHh1SUNBZ0lIZHBaSFJvT2lBeE1EQWxPMXh5WEc0Z0lDQWdhR1ZwWjJoME9pQXhNREFsTzF4eVhHNGdJQ0FnY0dGa1pHbHVaem9nTUR0Y2NseHVJQ0FnSUcxaGNtZHBiam9nTUR0Y2NseHVJQ0FnSUc5d1lXTnBkSGs2SURBN1hISmNiaUFnSUNCNkxXbHVaR1Y0T2lBek8xeHlYRzU5WEhKY2JpNXRkWFJsWDE5amFHVmphMkp2ZURwamFHVmphMlZrS3k1dGRYUmxYMTlzWVdKbGJEbzZZbVZtYjNKbElIdGNjbHh1SUNBZ0lHeGxablE2SUMweUxqSnlaVzA3WEhKY2JuMWNjbHh1TG0xMWRHVmZYMk5vWldOclltOTRPbU5vWldOclpXUXJMbTExZEdWZlgyeGhZbVZzT2pwaFpuUmxjaUI3WEhKY2JpQWdJQ0J5YVdkb2REb2dMakZ5WlcwN1hISmNibjFjY2x4dVhISmNia0JwYm1Oc2RXUmxJR0ZzYkZCb2IyNWxWR0ZpYkdWMElIdGNjbHh1SUNBZ0lDNW9aV0ZrWlhJZ2UxeHlYRzRnSUNBZ0lDQWdJSEJoWkdScGJtYzZJREV1T0hKbGJTQXdPMXh5WEc0Z0lDQWdmVnh5WEc0Z0lDQWdMbTVoZGlCN1hISmNiaUFnSUNBZ0lDQWdabTl1ZEMxemFYcGxPaUF5TGpoeVpXMDdYSEpjYmlBZ0lDQWdJQ0FnYkdsdVpTMW9aV2xuYUhRNklETXVNbkpsYlR0Y2NseHVJQ0FnSUNBZ0lDQnNaWFIwWlhJdGMzQmhZMmx1WnpvZ01DNHdOSEpsYlR0Y2NseHVJQ0FnSUgxY2NseHVJQ0FnSUM1dVlYWmZYMnhwYzNRZ2UxeHlYRzRnSUNBZ0lDQWdJRzFoY21kcGJpMXlhV2RvZERvZ01pNDRjbVZ0TzF4eVhHNGdJQ0FnZlZ4eVhHNGdJQ0FnTG01aGRsOWZiR2x1YXlCN1hISmNiaUFnSUNBZ0lDQWdjR0ZrWkdsdVp6b2dNUzQwY21WdElESXVPSEpsYlR0Y2NseHVJQ0FnSUgxY2NseHVJQ0FnSUM1b1pXRmtaWEpmWDJoaGMyaDBZV2NnZTF4eVhHNGdJQ0FnSUNBZ0lHMWhjbWRwYmkxeWFXZG9kRG9nTjNKbGJUdGNjbHh1SUNBZ0lIMWNjbHh1SUNBZ0lDNXpiMk5wWVd3Z2UxeHlYRzRnSUNBZ0lDQWdJR2RoY0RvZ05ISmxiVHRjY2x4dUlDQWdJSDFjY2x4dUlDQWdJQzVwWTI5dUxXWmhZMlZpYjI5ckxDQXVhV052YmkxcGJuTjBZV2R5WVcwc0lDNXBZMjl1TFhSM2FYUjBaWElnZTF4eVhHNGdJQ0FnSUNBZ0lIZHBaSFJvT2lBMExqaHlaVzA3WEhKY2JpQWdJQ0FnSUNBZ2FHVnBaMmgwT2lBMExqaHlaVzA3WEhKY2JpQWdJQ0I5WEhKY2JpQWdJQ0F1YlhWMFpTQjdYSEpjYmlBZ0lDQWdJQ0FnZDJsa2RHZzZJRGd1T0hKbGJUdGNjbHh1SUNBZ0lDQWdJQ0JvWldsbmFIUTZJRFF1T0hKbGJUdGNjbHh1SUNBZ0lDQWdJQ0JpYjNKa1pYSXRjbUZrYVhWek9pQTJjbVZ0TzF4eVhHNGdJQ0FnZlZ4eVhHNGdJQ0FnTG0xMWRHVmZYMnhoWW1Wc09qcGlaV1p2Y21Vc0lDNXRkWFJsWDE5c1lXSmxiRG82WVdaMFpYSWdlMXh5WEc0Z0lDQWdJQ0FnSUhSdmNEb2dNQzR5Y21WdE8xeHlYRzRnSUNBZ0lDQWdJR3hsWm5RNklEQXVNbkpsYlR0Y2NseHVJQ0FnSUNBZ0lDQm9aV2xuYUhRNklEUXVOSEpsYlR0Y2NseHVJQ0FnSUNBZ0lDQjNhV1IwYURvZ05DNDBjbVZ0TzF4eVhHNGdJQ0FnSUNBZ0lHSnZlQzF6YUdGa2IzYzZJREFnTGpKeVpXMGdMakp5WlcwZ2NtZGlLRFk1SURJZ01pQXZJRE13SlNrN08xeHlYRzRnSUNBZ2ZWeHlYRzRnSUNBZ0xtMTFkR1ZmWDJ4aFltVnNPanBoWm5SbGNpQjdYSEpjYmlBZ0lDQWdJQ0FnY21sbmFIUTZJQzAwTGpSeVpXMDdYSEpjYmlBZ0lDQWdJQ0FnYkdWbWREb2dZWFYwYnp0Y2NseHVJQ0FnSUNBZ0lDQmlZV05yWjNKdmRXNWtPaUFrWTI5c2IzSXRjbVZrSUhWeWJDZ25MaTR2YVcxbkwzTjJaeTkyYjJ4MWJXVmZkWEF1YzNabkp5a2dibTh0Y21Wd1pXRjBJR05sYm5SbGNpOWpiMjUwWVdsdU8xeHlYRzRnSUNBZ2ZWeHlYRzRnSUNBZ0xtMTFkR1ZmWDJOb1pXTnJZbTk0T21Ob1pXTnJaV1FyTG0xMWRHVmZYMnhoWW1Wc09qcGlaV1p2Y21VZ2UxeHlYRzRnSUNBZ0lDQWdJR3hsWm5RNklDMDBMalJ5WlcwN1hISmNiaUFnSUNCOVhISmNiaUFnSUNBdWJYVjBaVjlmWTJobFkydGliM2c2WTJobFkydGxaQ3N1YlhWMFpWOWZiR0ZpWld3Nk9tRm1kR1Z5SUh0Y2NseHVJQ0FnSUNBZ0lDQnlhV2RvZERvZ0xqSnlaVzA3WEhKY2JpQWdJQ0I5WEhKY2JpQWdJQ0F1Wm05dmRHVnlJSHRjY2x4dUlDQWdJQ0FnSUNCd1lXUmthVzVuT2lBeWNtVnRJRFJ5WlcwN1hISmNiaUFnSUNBZ0lDQWdabTl1ZEMxemFYcGxPaUF4TGpKeVpXMDdYSEpjYmlBZ0lDQWdJQ0FnYkdsdVpTMW9aV2xuYUhRNklERXVOSEpsYlR0Y2NseHVJQ0FnSUNBZ0lDQnNaWFIwWlhJdGMzQmhZMmx1WnpvZ01DNHdOSEpsYlR0Y2NseHVJQ0FnSUNBZ0lDQjBaWGgwTFdGc2FXZHVPaUJqWlc1MFpYSTdYSEpjYmlBZ0lDQjlYSEpjYmlBZ0lDQXVabTl2ZEdWeVgxOXNhVzVyY3lCN1hISmNiaUFnSUNBZ0lDQWdiV0Z5WjJsdUxXSnZkSFJ2YlRvZ01TNHljbVZ0TzF4eVhHNGdJQ0FnSUNBZ0lHZGhjRG9nTWk0NGNtVnRPMXh5WEc0Z0lDQWdmVnh5WEc1OVhISmNibHh5WEc1QWFXNWpiSFZrWlNCaGJHeFFhRzl1WlNCN1hISmNiaUFnSUNBdWFHVmhaR1Z5SUh0Y2NseHVJQ0FnSUNBZ0lDQmthWE53YkdGNU9pQm1iR1Y0TzF4eVhHNGdJQ0FnSUNBZ0lHRnNhV2R1TFdsMFpXMXpPaUJqWlc1MFpYSTdYSEpjYmlBZ0lDQWdJQ0FnY0dGa1pHbHVaem9nTW5KbGJTQXdJREp5WlcwZ01uSmxiVHRjY2x4dUlDQWdJSDFjY2x4dUlDQWdJQzV0ZFhSbElIdGNjbHh1SUNBZ0lDQWdJQ0J5YVdkb2REb2dNbkpsYlR0Y2NseHVJQ0FnSUgxY2NseHVJQ0FnSUM1dFlXbHVYMTlwYm1SbGVDQjdYSEpjYmlBZ0lDQWdJQ0FnWW1GamEyZHliM1Z1WkMxcGJXRm5aVG9nYkdsdVpXRnlMV2R5WVdScFpXNTBLREF1TVRGa1pXY3NJSEpuWW1Fb01Dd2dNQ3dnTUN3Z01DNDNOaWtnTXpJdU1UUWxMQ0J5WjJKaEtESTFOU3dnTUN3Z01Dd2dNQ2tnTnpJdU5UWWxLU3dnZFhKc0tDY3VMaTlwYldjdlltY3RiVzlpTFRKNExtcHdaeWNwTzF4eVhHNGdJQ0FnSUNBZ0lHRnNhV2R1TFdsMFpXMXpPaUJtYkdWNExXVnVaRHRjY2x4dUlDQWdJQ0FnSUNCcWRYTjBhV1o1TFdOdmJuUmxiblE2SUdObGJuUmxjanRjY2x4dUlDQWdJQ0FnSUNCd1lXUmthVzVuTFd4bFpuUTZJREE3WEhKY2JpQWdJQ0I5WEhKY2JpQWdJQ0F1Ykc5bmJ5QjdYSEpjYmlBZ0lDQWdJQ0FnYldGeVoybHVMV0p2ZEhSdmJUb2dNVEl1TkhKbGJUdGNjbHh1SUNBZ0lDQWdJQ0JoYm1sdFlYUnBiMjQ2SUhwdmIyMUpiaUF4Y3p0Y2NseHVJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQkFhMlY1Wm5KaGJXVnpJSHB2YjIxSmJpQjdYSEpjYmlBZ0lDQWdJQ0FnWm5KdmJTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIUnlZVzV6Wm05eWJUb2djMk5oYkdVelpDZ3dMQ0F3TENBd0tUdGNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ0xtNWhkaUI3WEhKY2JpQWdJQ0FnSUNBZ2RISmhibk5tYjNKdE9pQjBjbUZ1YzJ4aGRHVllLQzB4TURFbEtUdGNjbHh1SUNBZ0lDQWdJQ0J3YjNOcGRHbHZiam9nWm1sNFpXUTdYSEpjYmlBZ0lDQWdJQ0FnZEc5d09pQXdPMXh5WEc0Z0lDQWdJQ0FnSUd4bFpuUTZJREE3WEhKY2JpQWdJQ0FnSUNBZ1ltOTBkRzl0T2lBd08xeHlYRzRnSUNBZ0lDQWdJSGRwWkhSb09pQTBPSEpsYlR0Y2NseHVJQ0FnSUNBZ0lDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQWtZMjlzYjNJdFpHRnlhMUpsWkR0Y2NseHVJQ0FnSUNBZ0lDQm1iR1Y0TFdScGNtVmpkR2x2YmpvZ1kyOXNkVzF1TzF4eVhHNGdJQ0FnSUNBZ0lHcDFjM1JwWm5rdFkyOXVkR1Z1ZERvZ1pteGxlQzF6ZEdGeWREdGNjbHh1SUNBZ0lDQWdJQ0J3WVdSa2FXNW5MWFJ2Y0RvZ09YSmxiVHRjY2x4dUlDQWdJQ0FnSUNCMFpYaDBMV0ZzYVdkdU9pQmpaVzUwWlhJN1hISmNiaUFnSUNBZ0lDQWdZV3hwWjI0dGFYUmxiWE02SUhOMGNtVjBZMmc3WEhKY2JpQWdJQ0FnSUNBZ1ptOXVkQzF6YVhwbE9pQXlMamh5WlcwN1hISmNiaUFnSUNBZ0lDQWdiR2x1WlMxb1pXbG5hSFE2SURNdU1uSmxiVHRjY2x4dUlDQWdJQ0FnSUNCc1pYUjBaWEl0YzNCaFkybHVaem9nTUM0d05ISmxiVHRjY2x4dUlDQWdJQ0FnSUNCMGNtRnVjMmwwYVc5dU9pQjBjbUZ1YzJadmNtMGdMalZ6TzF4eVhHNGdJQ0FnZlZ4eVhHNGdJQ0FnTG01aGRpNWhZM1JwZG1VZ2UxeHlYRzRnSUNBZ0lDQWdJSFJ5WVc1elptOXliVG9nZEhKaGJuTnNZWFJsV0Nnd0tUdGNjbHh1SUNBZ0lDQWdJQ0IwY21GdWMybDBhVzl1T2lCMGNtRnVjMlp2Y20wZ0xqVnpPMXh5WEc0Z0lDQWdJQ0FnSUc5MlpYSm1iRzkzTFhrNklITmpjbTlzYkR0Y2NseHVJQ0FnSUgxY2NseHVJQ0FnSUM1dVlYWmZYMnhwYzNRZ2UxeHlYRzRnSUNBZ0lDQWdJR1pzWlhndFpHbHlaV04wYVc5dU9pQmpiMngxYlc0N1hISmNiaUFnSUNBZ0lDQWdiV0Z5WjJsdUxYSnBaMmgwT2lBd08xeHlYRzRnSUNBZ0lDQWdJRzFoY21kcGJpMWliM1IwYjIwNklERXVNbkpsYlR0Y2NseHVJQ0FnSUgxY2NseHVJQ0FnSUM1dVlYWmZYMmwwWlcwZ2UxeHlYRzRnSUNBZ0lDQWdJRzFoY21kcGJpMWliM1IwYjIwNklERXVNbkpsYlR0Y2NseHVJQ0FnSUNBZ0lDQW1PbXhoYzNRdFkyaHBiR1FnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQXdPMXh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUgxY2NseHVJQ0FnSUM1dVlYWmZYMnhwYm1zZ2UxeHlYRzRnSUNBZ0lDQWdJSEJoWkdScGJtYzZJREV1TkhKbGJTQXdPMXh5WEc1Y2NseHVJQ0FnSUgxY2NseHVJQ0FnSUM1b1pXRmtaWEpmWDJoaGMyaDBZV2NnZTF4eVhHNGdJQ0FnSUNBZ0lHMWhjbWRwYmkxeWFXZG9kRG9nTUR0Y2NseHVJQ0FnSUNBZ0lDQnRZWEpuYVc0dFltOTBkRzl0T2lBNGNtVnRPMXh5WEc0Z0lDQWdmVnh5WEc0Z0lDQWdMbk52WTJsaGJDQjdYSEpjYmlBZ0lDQWdJQ0FnYW5WemRHbG1lUzFqYjI1MFpXNTBPaUJqWlc1MFpYSTdYSEpjYmlBZ0lDQWdJQ0FnWjJGd09pQXpjbVZ0TzF4eVhHNGdJQ0FnSUNBZ0lHMWhjbWRwYmkxaWIzUjBiMjA2SURKeVpXMDdYSEpjYmlBZ0lDQjlYSEpjYmlBZ0lDQXVhV052YmkxbVlXTmxZbTl2YXl3Z0xtbGpiMjR0YVc1emRHRm5jbUZ0TENBdWFXTnZiaTEwZDJsMGRHVnlJSHRjY2x4dUlDQWdJQ0FnSUNCM2FXUjBhRG9nTkM0NGNtVnRPMXh5WEc0Z0lDQWdJQ0FnSUdobGFXZG9kRG9nTkM0NGNtVnRPMXh5WEc0Z0lDQWdmVnh5WEc1OUlpd2lMbTFoYVc1ZlgybHVaR1Y0SUh0Y2NseHVJQ0FnSUdScGMzQnNZWGs2SUdac1pYZzdYSEpjYmlBZ0lDQmhiR2xuYmkxcGRHVnRjem9nWTJWdWRHVnlPMXh5WEc0Z0lDQWdZbUZqYTJkeWIzVnVaRG9nSkdOdmJHOXlMWEpsWkNCMWNtd29KeTR1TDJsdFp5OWlaeTVxY0djbktTQnVieTF5WlhCbFlYUWdkRzl3SUM4Z1kyOTJaWEk3WEhKY2JpQWdJQ0J3WVdSa2FXNW5MV3hsWm5RNklERTRjbVZ0TzF4eVhHNTlYSEpjYmx4eVhHNWNjbHh1TG14dloyOGdlMXh5WEc0Z0lDQWdkMmxrZEdnNklETXlMamx5WlcwN1hISmNibjBpTENJdVptOXZkR1Z5SUh0Y2NseHVJQ0FnSUhCaFpHUnBibWM2SURGeVpXMGdNRHRjY2x4dUlDQWdJR1JwYzNCc1lYazZJR1pzWlhnN1hISmNiaUFnSUNCbWJHVjRMV1JwY21WamRHbHZiam9nWTI5c2RXMXVPMXh5WEc0Z0lDQWdZV3hwWjI0dGFYUmxiWE02SUdObGJuUmxjanRjY2x4dUlDQWdJRUJwYm1Oc2RXUmxJR1p2Ym5Rb05EQXdMQ0F1T1hKbGJTd2dNUzR4Y21WdEtUdGNjbHh1SUNBZ0lHeGxkSFJsY2kxemNHRmphVzVuT2lBd0xqQXljbVZ0TzF4eVhHNGdJQ0FnZEdWNGRDMTBjbUZ1YzJadmNtMDZJSFZ3Y0dWeVkyRnpaVHRjY2x4dWZWeHlYRzVjY2x4dUxtWnZiM1JsY2w5ZmJHbHVhM01nZTF4eVhHNGdJQ0FnWkdsemNHeGhlVG9nWm14bGVEdGNjbHh1SUNBZ0lHMWhjbWRwYmkxaWIzUjBiMjA2SUM0MmNtVnRPMXh5WEc0Z0lDQWdaMkZ3T2lBeUxqRnlaVzA3WEhKY2JuMWNjbHh1WEhKY2JpNW1iMjkwWlhKZlgyTnZjSGx5YVdkb2RDQjdYSEpjYmlBZ0lDQmpiMnh2Y2pvZ0pHTnZiRzl5TFdkeVpYazdYSEpjYm4waVhYMD0gKi8iLCJAZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xuICBzcmM6IHVybChcIi4uL2ZvbnRzL1JvYm90by1SZWd1bGFyLmVvdFwiKTtcbiAgc3JjOiBsb2NhbChcIlJvYm90b1wiKSwgdXJsKFwiLi4vZm9udHMvUm9ib3RvLVJlZ3VsYXIuZW90PyNpZWZpeFwiKSBmb3JtYXQoXCJlbWJlZGRlZC1vcGVudHlwZVwiKSwgdXJsKFwiLi4vZm9udHMvUm9ib3RvLVJlZ3VsYXIud29mZjJcIikgZm9ybWF0KFwid29mZjJcIiksIHVybChcIi4uL2ZvbnRzL1JvYm90by1SZWd1bGFyLndvZmZcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKFwiLi4vZm9udHMvUm9ib3RvLVJlZ3VsYXIudHRmXCIpIGZvcm1hdChcInRydWV0eXBlXCIpO1xufVxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNTAwO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbiAgc3JjOiB1cmwoXCIuLi9mb250cy9Sb2JvdG8tTWVkaXVtLmVvdFwiKTtcbiAgc3JjOiBsb2NhbChcIlJvYm90b1wiKSwgdXJsKFwiLi4vZm9udHMvUm9ib3RvLU1lZGl1bS5lb3Q/I2llZml4XCIpIGZvcm1hdChcImVtYmVkZGVkLW9wZW50eXBlXCIpLCB1cmwoXCIuLi9mb250cy9Sb2JvdG8tTWVkaXVtLndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCIuLi9mb250cy9Sb2JvdG8tTWVkaXVtLndvZmZcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKFwiLi4vZm9udHMvUm9ib3RvLU1lZGl1bS50dGZcIikgZm9ybWF0KFwidHJ1ZXR5cGVcIik7XG59XG5odG1sIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgc2Nyb2xsLWJlaGF2aW9yOiBzbW9vdGg7XG4gIGZvbnQtc2l6ZTogMC42OTQ0NDV2dztcbiAgZm9udC1mYW1pbHk6IFJvYm90bywgc2Fucy1zZXJpZjtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICB0ZXh0LXJlbmRlcmluZzogYXV0bztcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBoZWlnaHQ6IDEwMCU7XG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbn1cblxuKixcbio6OmFmdGVyLFxuKjo6YmVmb3JlIHtcbiAgYm94LXNpemluZzogaW5oZXJpdDtcbn1cblxuKjpmb2N1czpub3QoOmZvY3VzLXZpc2libGUpIHtcbiAgb3V0bGluZTogbm9uZTtcbn1cblxuYm9keSB7XG4gIGhlaWdodDogMTAwdmg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICB0ZXh0LXJlbmRlcmluZzogYXV0bztcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGNvbG9yOiAjRkZGRkZGO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwMDAwO1xufVxuXG5tYWluIHtcbiAgZmxleC1ncm93OiAxO1xufVxuXG5hLFxuYTpob3ZlciB7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxuaW5wdXQsXG50ZXh0YXJlYSB7XG4gIGxpbmUtaGVpZ2h0OiBpbmhlcml0O1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG59XG5cbmlucHV0LFxuYnV0dG9uIHtcbiAgYm9yZGVyOiBub25lO1xuICBvdXRsaW5lOiBub25lO1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbmJ1dHRvbixcbmlucHV0LFxuYSxcbnRleHRhcmVhIHtcbiAgb3V0bGluZTogbm9uZTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBmb250OiBpbmhlcml0O1xuICBjb2xvcjogaW5oZXJpdDtcbn1cbmJ1dHRvbjpmb2N1cyxcbmlucHV0OmZvY3VzLFxuYTpmb2N1cyxcbnRleHRhcmVhOmZvY3VzIHtcbiAgb3V0bGluZTogbm9uZTtcbn1cbmJ1dHRvbjphY3RpdmUsXG5pbnB1dDphY3RpdmUsXG5hOmFjdGl2ZSxcbnRleHRhcmVhOmFjdGl2ZSB7XG4gIG91dGxpbmU6IG5vbmU7XG59XG5cbmltZyxcbnBpY3R1cmUge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuXG5oMSxcbmgyLFxuaDMsXG5oNCxcbmg1LFxuaDYsXG5maWd1cmUsXG5maWVsZHNldCB7XG4gIGZvbnQ6IGluaGVyaXQ7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbn1cblxucCB7XG4gIG1hcmdpbjogMDtcbn1cblxuY29kZSxcbmtiZCxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XG4gIGZvbnQtc2l6ZTogaW5oZXJpdDtcbn1cblxuYnV0dG9uIHtcbiAgYm9yZGVyOiBub25lO1xuICBjb2xvcjogaW5oZXJpdDtcbiAgZm9udDogaW5oZXJpdDtcbiAgdGV4dC1hbGlnbjogaW5oZXJpdDtcbiAgcGFkZGluZzogMDtcbiAgYmFja2dyb3VuZC1jb2xvcjogaW5oZXJpdDtcbiAgdGV4dC1yZW5kZXJpbmc6IGF1dG87XG59XG5cbnVsIHtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwO1xufVxudWwgbGkge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG59XG5cbmlucHV0W3R5cGU9bnVtYmVyXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcbmlucHV0W3R5cGU9bnVtYmVyXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbiAgbWFyZ2luOiAwO1xufVxuXG5pbnB1dFt0eXBlPW51bWJlcl0ge1xuICAtbW96LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcbn1cblxuLmNvbnRhaW5lciB7XG4gIHdpZHRoOiAxMjlyZW07XG4gIG1hcmdpbjogMCBhdXRvO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMjUuODc1ZW0pIHtcbiAgaHRtbCB7XG4gICAgZm9udC1zaXplOiAxLjU2MjV2dztcbiAgICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IG5vbmU7XG4gIH1cblxuICAuY29udGFpbmVyIHtcbiAgICBwYWRkaW5nOiAwIDNyZW07XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbn1cbkBtZWRpYSAobWluLXdpZHRoOiAyNS45Mzc1ZW0pIGFuZCAobWF4LXdpZHRoOiA0OGVtKSB7XG4gIGh0bWwge1xuICAgIGZvbnQtc2l6ZTogMS4yMDQ4MnZ3O1xuICAgIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogbm9uZTtcbiAgfVxuXG4gIC5jb250YWluZXIge1xuICAgIHBhZGRpbmc6IDAgM3JlbTtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDQ4LjA2MjVlbSkgYW5kIChtYXgtd2lkdGg6IDY0ZW0pIHtcbiAgaHRtbCB7XG4gICAgZm9udC1zaXplOiAwLjY1MTA0MnZ3O1xuICAgIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogbm9uZTtcbiAgfVxuXG4gIC5jb250YWluZXIge1xuICAgIHBhZGRpbmc6IDAgNHJlbTtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxufVxuLm5vbmUge1xuICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XG59XG5cbi5ibG9jayB7XG4gIGRpc3BsYXk6IGJsb2NrICFpbXBvcnRhbnQ7XG59XG5cbi5ub3Njcm9sbCB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi50aXRsZSB7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG59XG5cbi5idXJnZXIge1xuICBkaXNwbGF5OiBub25lO1xuICB6LWluZGV4OiAxO1xufVxuLmJ1cmdlciAubGluZSB7XG4gIHdpZHRoOiA0cmVtO1xuICBoZWlnaHQ6IDAuNHJlbTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2UtaW4tb3V0O1xufVxuLmJ1cmdlciAubGluZTpub3QoOmxhc3QtY2hpbGQpIHtcbiAgbWFyZ2luLWJvdHRvbTogMC42cmVtO1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDI1Ljg3NWVtKSB7XG4gIC5idXJnZXIge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDI1LjkzNzVlbSkgYW5kIChtYXgtd2lkdGg6IDQ4ZW0pIHtcbiAgLmJ1cmdlciB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB9XG59XG5cbi5idXJnZXI6aG92ZXIge1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbi5idXJnZXIuYWN0aXZlIHtcbiAgdG9wOiAzLjhyZW07XG59XG5cbi5idXJnZXIuYWN0aXZlIC5saW5lOm50aC1jaGlsZCgyKSB7XG4gIG9wYWNpdHk6IDA7XG59XG5cbi5idXJnZXIuYWN0aXZlIC5saW5lOm50aC1jaGlsZCgxKSB7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgxcmVtKSByb3RhdGUoNDVkZWcpO1xufVxuXG4uYnVyZ2VyLmFjdGl2ZSAubGluZTpudGgtY2hpbGQoMykge1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTFyZW0pIHJvdGF0ZSgtNDVkZWcpO1xufVxuXG4uaGVhZGVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBwYWRkaW5nOiAwLjlyZW0gMDtcbn1cblxuLm5hdiB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBmb250LXdlaWdodDogNTAwO1xuICBmb250LXNpemU6IDEuNHJlbTtcbiAgbGluZS1oZWlnaHQ6IDEuNnJlbTtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMDJyZW07XG59XG5cbi5uYXZfX2xpc3Qge1xuICBkaXNwbGF5OiBmbGV4O1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBtYXJnaW4tcmlnaHQ6IDEuNHJlbTtcbn1cblxuLm5hdl9fbGluayB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBwYWRkaW5nOiAwLjdyZW0gMS40cmVtO1xufVxuXG4ubmF2X19saW5rLS1hY3RpdmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRTkwMDAwO1xufVxuXG4uaGVhZGVyX19oYXNodGFnIHtcbiAgbWFyZ2luLXJpZ2h0OiA3cmVtO1xufVxuXG4uc29jaWFsIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZ2FwOiAycmVtO1xufVxuXG4uc29jaWFsX19saW5rIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5pY29uLWZhY2Vib29rLCAuaWNvbi1pbnN0YWdyYW0sIC5pY29uLXR3aXR0ZXIge1xuICBmaWxsOiAjRkZGRkZGO1xuICB3aWR0aDogMi40cmVtO1xuICBoZWlnaHQ6IDIuNHJlbTtcbn1cblxuLm11dGUge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHJpZ2h0OiAxMHJlbTtcbiAgdG9wOiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbiAgd2lkdGg6IDQuNHJlbTtcbiAgaGVpZ2h0OiAyLjRyZW07XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGJhY2tncm91bmQtY29sb3I6ICNGRkZGRkY7XG4gIGJvcmRlci1yYWRpdXM6IDNyZW07XG59XG5cbi5tdXRlX19sYWJlbDo6YmVmb3JlLCAubXV0ZV9fbGFiZWw6OmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDAuMXJlbTtcbiAgbGVmdDogMC4xcmVtO1xuICBkaXNwbGF5OiBibG9jaztcbiAgaGVpZ2h0OiAyLjJyZW07XG4gIHdpZHRoOiAyLjJyZW07XG4gIGJveC1zaGFkb3c6IDAgMC4xcmVtIDAuMXJlbSByZ2JhKDY5LCAyLCAyLCAwLjMpO1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIHRyYW5zaXRpb246IGxlZnQgMC4zcyBlYXNlLWluLW91dCwgcmlnaHQgMC4zcyBlYXNlLWluLW91dDtcbn1cblxuLm11dGVfX2xhYmVsOjpiZWZvcmUge1xuICBiYWNrZ3JvdW5kOiAjRTkwMDAwIHVybChcIi4uL2ltZy9zdmcvdm9sdW1lX29mZi5zdmdcIikgbm8tcmVwZWF0IGNlbnRlci9jb250YWluO1xufVxuXG4ubXV0ZV9fbGFiZWw6OmFmdGVyIHtcbiAgcmlnaHQ6IC0yLjJyZW07XG4gIGxlZnQ6IGF1dG87XG4gIGJhY2tncm91bmQ6ICNFOTAwMDAgdXJsKFwiLi4vaW1nL3N2Zy92b2x1bWVfdXAuc3ZnXCIpIG5vLXJlcGVhdCBjZW50ZXIvY29udGFpbjtcbn1cblxuLm11dGVfX2NoZWNrYm94IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IDA7XG4gIG9wYWNpdHk6IDA7XG4gIHotaW5kZXg6IDM7XG59XG5cbi5tdXRlX19jaGVja2JveDpjaGVja2VkICsgLm11dGVfX2xhYmVsOjpiZWZvcmUge1xuICBsZWZ0OiAtMi4ycmVtO1xufVxuXG4ubXV0ZV9fY2hlY2tib3g6Y2hlY2tlZCArIC5tdXRlX19sYWJlbDo6YWZ0ZXIge1xuICByaWdodDogMC4xcmVtO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNjRlbSkge1xuICAuaGVhZGVyIHtcbiAgICBwYWRkaW5nOiAxLjhyZW0gMDtcbiAgfVxuXG4gIC5uYXYge1xuICAgIGZvbnQtc2l6ZTogMi44cmVtO1xuICAgIGxpbmUtaGVpZ2h0OiAzLjJyZW07XG4gICAgbGV0dGVyLXNwYWNpbmc6IDAuMDRyZW07XG4gIH1cblxuICAubmF2X19saXN0IHtcbiAgICBtYXJnaW4tcmlnaHQ6IDIuOHJlbTtcbiAgfVxuXG4gIC5uYXZfX2xpbmsge1xuICAgIHBhZGRpbmc6IDEuNHJlbSAyLjhyZW07XG4gIH1cblxuICAuaGVhZGVyX19oYXNodGFnIHtcbiAgICBtYXJnaW4tcmlnaHQ6IDdyZW07XG4gIH1cblxuICAuc29jaWFsIHtcbiAgICBnYXA6IDRyZW07XG4gIH1cblxuICAuaWNvbi1mYWNlYm9vaywgLmljb24taW5zdGFncmFtLCAuaWNvbi10d2l0dGVyIHtcbiAgICB3aWR0aDogNC44cmVtO1xuICAgIGhlaWdodDogNC44cmVtO1xuICB9XG5cbiAgLm11dGUge1xuICAgIHdpZHRoOiA4LjhyZW07XG4gICAgaGVpZ2h0OiA0LjhyZW07XG4gICAgYm9yZGVyLXJhZGl1czogNnJlbTtcbiAgfVxuXG4gIC5tdXRlX19sYWJlbDo6YmVmb3JlLCAubXV0ZV9fbGFiZWw6OmFmdGVyIHtcbiAgICB0b3A6IDAuMnJlbTtcbiAgICBsZWZ0OiAwLjJyZW07XG4gICAgaGVpZ2h0OiA0LjRyZW07XG4gICAgd2lkdGg6IDQuNHJlbTtcbiAgICBib3gtc2hhZG93OiAwIDAuMnJlbSAwLjJyZW0gcmdiYSg2OSwgMiwgMiwgMC4zKTtcbiAgfVxuXG4gIC5tdXRlX19sYWJlbDo6YWZ0ZXIge1xuICAgIHJpZ2h0OiAtNC40cmVtO1xuICAgIGxlZnQ6IGF1dG87XG4gICAgYmFja2dyb3VuZDogI0U5MDAwMCB1cmwoXCIuLi9pbWcvc3ZnL3ZvbHVtZV91cC5zdmdcIikgbm8tcmVwZWF0IGNlbnRlci9jb250YWluO1xuICB9XG5cbiAgLm11dGVfX2NoZWNrYm94OmNoZWNrZWQgKyAubXV0ZV9fbGFiZWw6OmJlZm9yZSB7XG4gICAgbGVmdDogLTQuNHJlbTtcbiAgfVxuXG4gIC5tdXRlX19jaGVja2JveDpjaGVja2VkICsgLm11dGVfX2xhYmVsOjphZnRlciB7XG4gICAgcmlnaHQ6IDAuMnJlbTtcbiAgfVxuXG4gIC5mb290ZXIge1xuICAgIHBhZGRpbmc6IDJyZW0gNHJlbTtcbiAgICBmb250LXNpemU6IDEuMnJlbTtcbiAgICBsaW5lLWhlaWdodDogMS40cmVtO1xuICAgIGxldHRlci1zcGFjaW5nOiAwLjA0cmVtO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgfVxuXG4gIC5mb290ZXJfX2xpbmtzIHtcbiAgICBtYXJnaW4tYm90dG9tOiAxLjJyZW07XG4gICAgZ2FwOiAyLjhyZW07XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA0OGVtKSB7XG4gIC5oZWFkZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBwYWRkaW5nOiAycmVtIDAgMnJlbSAycmVtO1xuICB9XG5cbiAgLm11dGUge1xuICAgIHJpZ2h0OiAycmVtO1xuICB9XG5cbiAgLm1haW5fX2luZGV4IHtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoMC4xMWRlZywgcmdiYSgwLCAwLCAwLCAwLjc2KSAzMi4xNCUsIHJnYmEoMjU1LCAwLCAwLCAwKSA3Mi41NiUpLCB1cmwoXCIuLi9pbWcvYmctbW9iLTJ4LmpwZ1wiKTtcbiAgICBhbGlnbi1pdGVtczogZmxleC1lbmQ7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgcGFkZGluZy1sZWZ0OiAwO1xuICB9XG5cbiAgLmxvZ28ge1xuICAgIG1hcmdpbi1ib3R0b206IDEyLjRyZW07XG4gICAgYW5pbWF0aW9uOiB6b29tSW4gMXM7XG4gIH1cblxuICBAa2V5ZnJhbWVzIHpvb21JbiB7XG4gICAgZnJvbSB7XG4gICAgICB0cmFuc2Zvcm06IHNjYWxlM2QoMCwgMCwgMCk7XG4gICAgfVxuICB9XG4gIC5uYXYge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTAxJSk7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiAwO1xuICAgIGJvdHRvbTogMDtcbiAgICB3aWR0aDogNDhyZW07XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzI2MDcwNztcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgICBwYWRkaW5nLXRvcDogOXJlbTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IHN0cmV0Y2g7XG4gICAgZm9udC1zaXplOiAyLjhyZW07XG4gICAgbGluZS1oZWlnaHQ6IDMuMnJlbTtcbiAgICBsZXR0ZXItc3BhY2luZzogMC4wNHJlbTtcbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC41cztcbiAgfVxuXG4gIC5uYXYuYWN0aXZlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuNXM7XG4gICAgb3ZlcmZsb3cteTogc2Nyb2xsO1xuICB9XG5cbiAgLm5hdl9fbGlzdCB7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgbWFyZ2luLWJvdHRvbTogMS4ycmVtO1xuICB9XG5cbiAgLm5hdl9faXRlbSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMS4ycmVtO1xuICB9XG4gIC5uYXZfX2l0ZW06bGFzdC1jaGlsZCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgfVxuXG4gIC5uYXZfX2xpbmsge1xuICAgIHBhZGRpbmc6IDEuNHJlbSAwO1xuICB9XG5cbiAgLmhlYWRlcl9faGFzaHRhZyB7XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgIG1hcmdpbi1ib3R0b206IDhyZW07XG4gIH1cblxuICAuc29jaWFsIHtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBnYXA6IDNyZW07XG4gICAgbWFyZ2luLWJvdHRvbTogMnJlbTtcbiAgfVxuXG4gIC5pY29uLWZhY2Vib29rLCAuaWNvbi1pbnN0YWdyYW0sIC5pY29uLXR3aXR0ZXIge1xuICAgIHdpZHRoOiA0LjhyZW07XG4gICAgaGVpZ2h0OiA0LjhyZW07XG4gIH1cbn1cbi5tYWluX19pbmRleCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGJhY2tncm91bmQ6ICNFOTAwMDAgdXJsKFwiLi4vaW1nL2JnLmpwZ1wiKSBuby1yZXBlYXQgdG9wL2NvdmVyO1xuICBwYWRkaW5nLWxlZnQ6IDE4cmVtO1xufVxuXG4ubG9nbyB7XG4gIHdpZHRoOiAzMi45cmVtO1xufVxuXG4uZm9vdGVyIHtcbiAgcGFkZGluZzogMXJlbSAwO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDAuOXJlbTtcbiAgbGluZS1oZWlnaHQ6IDEuMXJlbTtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMDJyZW07XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG59XG5cbi5mb290ZXJfX2xpbmtzIHtcbiAgZGlzcGxheTogZmxleDtcbiAgbWFyZ2luLWJvdHRvbTogMC42cmVtO1xuICBnYXA6IDIuMXJlbTtcbn1cblxuLmZvb3Rlcl9fY29weXJpZ2h0IHtcbiAgY29sb3I6ICM2QTZBNkE7XG59XG5Ac3VwcG9ydHMgKC13ZWJraXQtYXBwZWFyYW5jZTpub25lKXtcbi5tdXRlX19sYWJlbDo6YmVmb3Jle2JhY2tncm91bmQ6I0U5MDAwMCB1cmwoXCIuLi9pbWcvc3ZnL3ZvbHVtZV9vZmYuc3ZnXCIpIG5vLXJlcGVhdCBjZW50ZXIvY29udGFpbn1cbi5tdXRlX19sYWJlbDo6YWZ0ZXJ7YmFja2dyb3VuZDojRTkwMDAwIHVybChcIi4uL2ltZy9zdmcvdm9sdW1lX3VwLnN2Z1wiKSBuby1yZXBlYXQgY2VudGVyL2NvbnRhaW59XG4ubWFpbl9faW5kZXh7YmFja2dyb3VuZDojRTkwMDAwIHVybChcIi4uL2ltZy9iZy53ZWJwXCIpIG5vLXJlcGVhdCB0b3AvY292ZXJ9XG59XG5cbiBAbWVkaWEgKG1heC13aWR0aDogMjUuODc1ZW0pe1xuXG5Ac3VwcG9ydHMgKC13ZWJraXQtYXBwZWFyYW5jZTpub25lKXtcblxufVxuXG59XG5cbiBAbWVkaWEgKG1pbi13aWR0aDogMjUuOTM3NWVtKSBhbmQgKG1heC13aWR0aDogNDhlbSl7XG5cbkBzdXBwb3J0cyAoLXdlYmtpdC1hcHBlYXJhbmNlOm5vbmUpe1xuXG59XG5cbn1cblxuIEBtZWRpYSAobWluLXdpZHRoOiA0OC4wNjI1ZW0pIGFuZCAobWF4LXdpZHRoOiA2NGVtKXtcblxuQHN1cHBvcnRzICgtd2Via2l0LWFwcGVhcmFuY2U6bm9uZSl7XG5cbn1cblxufVxuXG4gQG1lZGlhIChtYXgtd2lkdGg6IDY0ZW0pe1xuXG5Ac3VwcG9ydHMgKC13ZWJraXQtYXBwZWFyYW5jZTpub25lKXtcbi5tdXRlX19sYWJlbDo6YWZ0ZXJ7YmFja2dyb3VuZDojRTkwMDAwIHVybChcIi4uL2ltZy9zdmcvdm9sdW1lX3VwLnN2Z1wiKSBuby1yZXBlYXQgY2VudGVyL2NvbnRhaW59XG59XG5cbn1cblxuIEBtZWRpYSAobWF4LXdpZHRoOiA0OGVtKXtcblxuQHN1cHBvcnRzICgtd2Via2l0LWFwcGVhcmFuY2U6bm9uZSl7XG4ubWFpbl9faW5kZXh7YmFja2dyb3VuZC1pbWFnZTpsaW5lYXItZ3JhZGllbnQoMC4xMWRlZywgcmdiYSgwLCAwLCAwLCAwLjc2KSAzMi4xNCUsIHJnYmEoMjU1LCAwLCAwLCAwKSA3Mi41NiUpLCB1cmwoXCIuLi9pbWcvYmctbW9iLTJ4LndlYnBcIil9XG59XG5cbn1cbiIsIkBpbXBvcnQgXCJ2YXIuc2Nzc1wiO1xyXG5cclxuaHRtbCB7XHJcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gICAgc2Nyb2xsLWJlaGF2aW9yOiBzbW9vdGg7XHJcbiAgICBmb250LXNpemU6ICRkZXNrdG9wOyAvLyDQvdCwINGA0LDQt9GA0LXRiNC10L3QuNC4IDE5MjAgMC41MjA4MzQgPT09IDEwcHhcclxuICAgIGZvbnQtZmFtaWx5OiAkZm9udEZhbWlseTtcclxuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XHJcbiAgICB0ZXh0LXJlbmRlcmluZzogYXV0bztcclxuICAgIG1hcmdpbjogMDtcclxuICAgIHBhZGRpbmc6IDA7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XHJcbn1cclxuXHJcbiosXHJcbio6OmFmdGVyLFxyXG4qOjpiZWZvcmUge1xyXG4gICAgYm94LXNpemluZzogaW5oZXJpdDtcclxufVxyXG5cclxuKjpmb2N1czpub3QoOmZvY3VzLXZpc2libGUpIHtcclxuICAgIG91dGxpbmU6IG5vbmU7XHJcbn1cclxuXHJcbmJvZHkge1xyXG4gICAgaGVpZ2h0OiAxMDB2aDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG4gICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcclxuICAgIHRleHQtcmVuZGVyaW5nOiBhdXRvO1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGNvbG9yOiAkdGV4dENvbG9yOyAvLyDRhtCy0LXRgiDQv9C+INGD0LzQvtC70YfQsNC90LjRjiDRgtC10LrRgdGC0LAg0L/QviDRgdCw0LnRgtGDXHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3JCYWNrZ3JvdW5kOyAvLyDRhtCy0LXRgiDRhNC+0L3QsCDRgdCw0LnRgtCwINC/0L4g0YPQvNC+0LvRh9Cw0L3QuNGOXHJcbn1cclxuXHJcbm1haW4ge1xyXG4gICAgZmxleC1ncm93OiAxO1xyXG59XHJcblxyXG5hLFxyXG5hOmhvdmVyIHtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxufVxyXG5cclxuaW5wdXQsXHJcbnRleHRhcmVhIHtcclxuICAgIGxpbmUtaGVpZ2h0OiBpbmhlcml0O1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgcGFkZGluZzogMDtcclxufVxyXG5cclxuaW5wdXQsXHJcbmJ1dHRvbiB7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBvdXRsaW5lOiBub25lO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcblxyXG5idXR0b24sXHJcbmlucHV0LFxyXG5hLFxyXG50ZXh0YXJlYSB7XHJcbiAgICBvdXRsaW5lOiBub25lO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgZm9udDogaW5oZXJpdDtcclxuICAgIGNvbG9yOiBpbmhlcml0O1xyXG5cclxuICAgICY6Zm9jdXMge1xyXG4gICAgICAgIG91dGxpbmU6IG5vbmU7XHJcbiAgICB9XHJcblxyXG4gICAgJjphY3RpdmUge1xyXG4gICAgICAgIG91dGxpbmU6IG5vbmU7XHJcbiAgICB9XHJcbn1cclxuXHJcbmltZyxcclxucGljdHVyZSB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogYXV0bztcclxufVxyXG5cclxuaDEsXHJcbmgyLFxyXG5oMyxcclxuaDQsXHJcbmg1LFxyXG5oNixcclxuZmlndXJlLFxyXG5maWVsZHNldCB7XHJcbiAgICBmb250OiBpbmhlcml0O1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgcGFkZGluZzogMDtcclxufVxyXG5cclxucCB7XHJcbiAgICBtYXJnaW46IDA7XHJcbn1cclxuXHJcbmNvZGUsXHJcbmtiZCxcclxuc2FtcCB7XHJcbiAgICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XHJcbiAgICBmb250LXNpemU6IGluaGVyaXQ7XHJcbn1cclxuXHJcbmJ1dHRvbiB7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBjb2xvcjogaW5oZXJpdDtcclxuICAgIGZvbnQ6IGluaGVyaXQ7XHJcbiAgICB0ZXh0LWFsaWduOiBpbmhlcml0O1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IGluaGVyaXQ7XHJcbiAgICB0ZXh0LXJlbmRlcmluZzogYXV0bztcclxufVxyXG5cclxudWwge1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIG1hcmdpbjogMDtcclxuXHJcbiAgICBsaSB7XHJcbiAgICAgICAgbWFyZ2luOiAwO1xyXG4gICAgICAgIHBhZGRpbmc6IDA7XHJcbiAgICAgICAgbGlzdC1zdHlsZTogbm9uZTtcclxuICAgIH1cclxufVxyXG5cclxuaW5wdXRbdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcclxuaW5wdXRbdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XHJcbiAgICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XHJcbiAgICBtYXJnaW46IDA7XHJcbn1cclxuXHJcbmlucHV0W3R5cGU9XCJudW1iZXJcIl0ge1xyXG4gICAgLW1vei1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7XHJcbn1cclxuXHJcbi5jb250YWluZXIge1xyXG4gICAgd2lkdGg6ICRjb250YWluZXI7XHJcbiAgICBtYXJnaW46IDAgYXV0bztcclxufVxyXG5cclxuQGluY2x1ZGUgc21hbGxQaG9uZSB7XHJcbiAgICBodG1sIHtcclxuICAgICAgICBmb250LXNpemU6ICRzbWFsbFBob25lOyBcclxuICAgICAgICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IG5vbmU7XHJcbiAgICB9XHJcbiAgICAuY29udGFpbmVyIHtcclxuICAgICAgICBwYWRkaW5nOiAwIDNyZW07XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICB9XHJcbn1cclxuXHJcbkBpbmNsdWRlIHBob25lIHtcclxuICAgIGh0bWwge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogJHBob25lOyBcclxuICAgICAgICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IG5vbmU7XHJcbiAgICB9XHJcbiAgICAuY29udGFpbmVyIHtcclxuICAgICAgICBwYWRkaW5nOiAwIDNyZW07XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICB9XHJcbn1cclxuXHJcbkBpbmNsdWRlIHRhYmxldCB7XHJcbiAgICBodG1sIHtcclxuICAgICAgICBmb250LXNpemU6ICR0YWJsZXQ7XHJcbiAgICAgICAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiBub25lO1xyXG4gICAgfVxyXG4gICAgLmNvbnRhaW5lciB7XHJcbiAgICAgICAgcGFkZGluZzogMCA0cmVtO1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgfVxyXG59XHJcblxyXG4ubm9uZSB7XHJcbiAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5ibG9jayB7XHJcbiAgICBkaXNwbGF5OiBibG9jayAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4ubm9zY3JvbGwge1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxufSIsIkBtaXhpbiBmb250ICgkd2VpZ2h0LCAkc2l6ZSwgJGhlaWdodCkge1xyXG4gICAgZm9udC13ZWlnaHQ6ICR3ZWlnaHQ7XHJcbiAgICBmb250LXNpemU6ICRzaXplO1xyXG4gICAgbGluZS1oZWlnaHQ6ICRoZWlnaHQ7XHJcbn1cclxuXHJcbkBtaXhpbiBzbWFsbFBob25lIHtcclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAyNS44NzVlbSkge1xyXG4gICAgICAgIEBjb250ZW50O1xyXG4gICAgfVxyXG59XHJcblxyXG5AbWl4aW4gcGhvbmUge1xyXG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDI1LjkzNzVlbSkgYW5kIChtYXgtd2lkdGg6IDQ4ZW0pIHtcclxuICAgICAgICBAY29udGVudDtcclxuICAgIH1cclxufVxyXG5cclxuQG1peGluIHRhYmxldCB7XHJcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogNDguMDYyNWVtKSBhbmQgKG1heC13aWR0aDogNjRlbSkge1xyXG4gICAgICAgIEBjb250ZW50O1xyXG4gICAgfVxyXG59XHJcblxyXG5AbWl4aW4gZGVza3RvcCB7XHJcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogNjQuMDYyNWVtKSB7XHJcbiAgICAgICAgQGNvbnRlbnQ7XHJcbiAgICB9XHJcbn1cclxuXHJcbkBtaXhpbiBmbGV4Q2VudGVyIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcbiAgXHJcbkBtaXhpbiBmbGV4U3BhY2VCZXR3ZWVuIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbn1cclxuXHJcbkBtaXhpbiBmbGV4Q2VudGVyQ2VudGVyIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbn1cclxuXHJcbkBtaXhpbiBhbGxQaG9uZSB7XHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogNDhlbSkge1xyXG4gICAgICAgIEBjb250ZW50O1xyXG4gICAgfVxyXG59XHJcblxyXG5AbWl4aW4gYWxsUGhvbmVUYWJsZXQge1xyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDY0ZW0pIHtcclxuICAgICAgICBAY29udGVudDtcclxuICAgIH1cclxufSIsIi50aXRsZSB7XHJcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG59XHJcbiIsIi5idXJnZXIge1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxuICAgIHotaW5kZXg6IDE7XHJcbiAgICAgICAgLmxpbmUge1xyXG4gICAgICAgICAgICB3aWR0aDogNHJlbTtcclxuICAgICAgICAgICAgaGVpZ2h0OiAuNHJlbTtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICAgIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2UtaW4tb3V0O1xyXG4gICAgICAgICAgICAmOm5vdCg6bGFzdC1jaGlsZCkge1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMC42cmVtO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgQGluY2x1ZGUgc21hbGxQaG9uZSB7XHJcbiAgICAgICAgJiB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBAaW5jbHVkZSBwaG9uZSB7XHJcbiAgICAgICAgJiB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuLmJ1cmdlcjpob3ZlcntcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG4uYnVyZ2VyLmFjdGl2ZSB7XHJcbiAgICB0b3A6IDMuOHJlbTtcclxufVxyXG4uYnVyZ2VyLmFjdGl2ZSAubGluZTpudGgtY2hpbGQoMil7XHJcbiAgICBvcGFjaXR5OiAwO1xyXG59XHJcbi5idXJnZXIuYWN0aXZlIC5saW5lOm50aC1jaGlsZCgxKXtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgxcmVtKSByb3RhdGUoNDVkZWcpO1xyXG59XHJcbi5idXJnZXIuYWN0aXZlIC5saW5lOm50aC1jaGlsZCgzKXtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMXJlbSkgcm90YXRlKC00NWRlZyk7XHJcbn0iLCIuaGVhZGVyIHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIHBhZGRpbmc6IC45cmVtIDA7XHJcbn1cclxuLm5hdiB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgQGluY2x1ZGUgZm9udCg1MDAsIDEuNHJlbSwgMS42cmVtKTtcclxuICAgIGxldHRlci1zcGFjaW5nOiAwLjAycmVtO1xyXG59XHJcbi5uYXZfX2xpc3Qge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDEuNHJlbTtcclxufVxyXG4ubmF2X19saW5rIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgcGFkZGluZzogLjdyZW0gMS40cmVtO1xyXG59XHJcbi5uYXZfX2xpbmstLWFjdGl2ZSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3ItcmVkO1xyXG59XHJcbi5oZWFkZXJfX2hhc2h0YWcge1xyXG4gICAgbWFyZ2luLXJpZ2h0OiA3cmVtO1xyXG59XHJcbi5zb2NpYWwge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGdhcDogMnJlbTtcclxufVxyXG4uc29jaWFsX19saW5rIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG59XHJcbi5pY29uLWZhY2Vib29rLCAuaWNvbi1pbnN0YWdyYW0sIC5pY29uLXR3aXR0ZXIge1xyXG4gICAgZmlsbDogJGNvbG9yLXdoaXRlO1xyXG4gICAgd2lkdGg6IDIuNHJlbTtcclxuICAgIGhlaWdodDogMi40cmVtO1xyXG59XHJcbi5tdXRlIHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHJpZ2h0OiAxMHJlbTtcclxuICAgIHRvcDogNTAlO1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xyXG4gICAgd2lkdGg6IDQuNHJlbTtcclxuICAgIGhlaWdodDogMi40cmVtO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvci13aGl0ZTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDNyZW07XHJcbn1cclxuLm11dGVfX2xhYmVsOjpiZWZvcmUsIC5tdXRlX19sYWJlbDo6YWZ0ZXIge1xyXG4gICAgY29udGVudDogJyc7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IC4xcmVtO1xyXG4gICAgbGVmdDogLjFyZW07XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIGhlaWdodDogMi4ycmVtO1xyXG4gICAgd2lkdGg6IDIuMnJlbTtcclxuICAgIGJveC1zaGFkb3c6IDAgLjFyZW0gLjFyZW0gcmdiYSg2OSwgMiwgMiwgMC4zKTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIHRyYW5zaXRpb246IGxlZnQgLjNzIGVhc2UtaW4tb3V0LCByaWdodCAuM3MgZWFzZS1pbi1vdXQ7XHJcbn1cclxuLm11dGVfX2xhYmVsOjpiZWZvcmUge1xyXG4gICAgYmFja2dyb3VuZDogJGNvbG9yLXJlZCB1cmwoJy4uL2ltZy9zdmcvdm9sdW1lX29mZi5zdmcnKSBuby1yZXBlYXQgY2VudGVyL2NvbnRhaW47XHJcblxyXG59XHJcbi5tdXRlX19sYWJlbDo6YWZ0ZXIge1xyXG4gICAgcmlnaHQ6IC0yLjJyZW07XHJcbiAgICBsZWZ0OiBhdXRvO1xyXG4gICAgYmFja2dyb3VuZDogJGNvbG9yLXJlZCB1cmwoJy4uL2ltZy9zdmcvdm9sdW1lX3VwLnN2ZycpIG5vLXJlcGVhdCBjZW50ZXIvY29udGFpbjtcclxufVxyXG4ubXV0ZV9fY2hlY2tib3gge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgb3BhY2l0eTogMDtcclxuICAgIHotaW5kZXg6IDM7XHJcbn1cclxuLm11dGVfX2NoZWNrYm94OmNoZWNrZWQrLm11dGVfX2xhYmVsOjpiZWZvcmUge1xyXG4gICAgbGVmdDogLTIuMnJlbTtcclxufVxyXG4ubXV0ZV9fY2hlY2tib3g6Y2hlY2tlZCsubXV0ZV9fbGFiZWw6OmFmdGVyIHtcclxuICAgIHJpZ2h0OiAuMXJlbTtcclxufVxyXG5cclxuQGluY2x1ZGUgYWxsUGhvbmVUYWJsZXQge1xyXG4gICAgLmhlYWRlciB7XHJcbiAgICAgICAgcGFkZGluZzogMS44cmVtIDA7XHJcbiAgICB9XHJcbiAgICAubmF2IHtcclxuICAgICAgICBmb250LXNpemU6IDIuOHJlbTtcclxuICAgICAgICBsaW5lLWhlaWdodDogMy4ycmVtO1xyXG4gICAgICAgIGxldHRlci1zcGFjaW5nOiAwLjA0cmVtO1xyXG4gICAgfVxyXG4gICAgLm5hdl9fbGlzdCB7XHJcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAyLjhyZW07XHJcbiAgICB9XHJcbiAgICAubmF2X19saW5rIHtcclxuICAgICAgICBwYWRkaW5nOiAxLjRyZW0gMi44cmVtO1xyXG4gICAgfVxyXG4gICAgLmhlYWRlcl9faGFzaHRhZyB7XHJcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiA3cmVtO1xyXG4gICAgfVxyXG4gICAgLnNvY2lhbCB7XHJcbiAgICAgICAgZ2FwOiA0cmVtO1xyXG4gICAgfVxyXG4gICAgLmljb24tZmFjZWJvb2ssIC5pY29uLWluc3RhZ3JhbSwgLmljb24tdHdpdHRlciB7XHJcbiAgICAgICAgd2lkdGg6IDQuOHJlbTtcclxuICAgICAgICBoZWlnaHQ6IDQuOHJlbTtcclxuICAgIH1cclxuICAgIC5tdXRlIHtcclxuICAgICAgICB3aWR0aDogOC44cmVtO1xyXG4gICAgICAgIGhlaWdodDogNC44cmVtO1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDZyZW07XHJcbiAgICB9XHJcbiAgICAubXV0ZV9fbGFiZWw6OmJlZm9yZSwgLm11dGVfX2xhYmVsOjphZnRlciB7XHJcbiAgICAgICAgdG9wOiAwLjJyZW07XHJcbiAgICAgICAgbGVmdDogMC4ycmVtO1xyXG4gICAgICAgIGhlaWdodDogNC40cmVtO1xyXG4gICAgICAgIHdpZHRoOiA0LjRyZW07XHJcbiAgICAgICAgYm94LXNoYWRvdzogMCAuMnJlbSAuMnJlbSByZ2IoNjkgMiAyIC8gMzAlKTs7XHJcbiAgICB9XHJcbiAgICAubXV0ZV9fbGFiZWw6OmFmdGVyIHtcclxuICAgICAgICByaWdodDogLTQuNHJlbTtcclxuICAgICAgICBsZWZ0OiBhdXRvO1xyXG4gICAgICAgIGJhY2tncm91bmQ6ICRjb2xvci1yZWQgdXJsKCcuLi9pbWcvc3ZnL3ZvbHVtZV91cC5zdmcnKSBuby1yZXBlYXQgY2VudGVyL2NvbnRhaW47XHJcbiAgICB9XHJcbiAgICAubXV0ZV9fY2hlY2tib3g6Y2hlY2tlZCsubXV0ZV9fbGFiZWw6OmJlZm9yZSB7XHJcbiAgICAgICAgbGVmdDogLTQuNHJlbTtcclxuICAgIH1cclxuICAgIC5tdXRlX19jaGVja2JveDpjaGVja2VkKy5tdXRlX19sYWJlbDo6YWZ0ZXIge1xyXG4gICAgICAgIHJpZ2h0OiAuMnJlbTtcclxuICAgIH1cclxuICAgIC5mb290ZXIge1xyXG4gICAgICAgIHBhZGRpbmc6IDJyZW0gNHJlbTtcclxuICAgICAgICBmb250LXNpemU6IDEuMnJlbTtcclxuICAgICAgICBsaW5lLWhlaWdodDogMS40cmVtO1xyXG4gICAgICAgIGxldHRlci1zcGFjaW5nOiAwLjA0cmVtO1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIH1cclxuICAgIC5mb290ZXJfX2xpbmtzIHtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAxLjJyZW07XHJcbiAgICAgICAgZ2FwOiAyLjhyZW07XHJcbiAgICB9XHJcbn1cclxuXHJcbkBpbmNsdWRlIGFsbFBob25lIHtcclxuICAgIC5oZWFkZXIge1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICBwYWRkaW5nOiAycmVtIDAgMnJlbSAycmVtO1xyXG4gICAgfVxyXG4gICAgLm11dGUge1xyXG4gICAgICAgIHJpZ2h0OiAycmVtO1xyXG4gICAgfVxyXG4gICAgLm1haW5fX2luZGV4IHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoMC4xMWRlZywgcmdiYSgwLCAwLCAwLCAwLjc2KSAzMi4xNCUsIHJnYmEoMjU1LCAwLCAwLCAwKSA3Mi41NiUpLCB1cmwoJy4uL2ltZy9iZy1tb2ItMnguanBnJyk7XHJcbiAgICAgICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICAgIHBhZGRpbmctbGVmdDogMDtcclxuICAgIH1cclxuICAgIC5sb2dvIHtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAxMi40cmVtO1xyXG4gICAgICAgIGFuaW1hdGlvbjogem9vbUluIDFzO1xyXG4gICAgfVxyXG5cclxuICAgIEBrZXlmcmFtZXMgem9vbUluIHtcclxuICAgICAgICBmcm9tIHtcclxuICAgICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZTNkKDAsIDAsIDApO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAubmF2IHtcclxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTEwMSUpO1xyXG4gICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgICAgICB0b3A6IDA7XHJcbiAgICAgICAgbGVmdDogMDtcclxuICAgICAgICBib3R0b206IDA7XHJcbiAgICAgICAgd2lkdGg6IDQ4cmVtO1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRjb2xvci1kYXJrUmVkO1xyXG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xyXG4gICAgICAgIHBhZGRpbmctdG9wOiA5cmVtO1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICBhbGlnbi1pdGVtczogc3RyZXRjaDtcclxuICAgICAgICBmb250LXNpemU6IDIuOHJlbTtcclxuICAgICAgICBsaW5lLWhlaWdodDogMy4ycmVtO1xyXG4gICAgICAgIGxldHRlci1zcGFjaW5nOiAwLjA0cmVtO1xyXG4gICAgICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAuNXM7XHJcbiAgICB9XHJcbiAgICAubmF2LmFjdGl2ZSB7XHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xyXG4gICAgICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAuNXM7XHJcbiAgICAgICAgb3ZlcmZsb3cteTogc2Nyb2xsO1xyXG4gICAgfVxyXG4gICAgLm5hdl9fbGlzdCB7XHJcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IDA7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMS4ycmVtO1xyXG4gICAgfVxyXG4gICAgLm5hdl9faXRlbSB7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMS4ycmVtO1xyXG4gICAgICAgICY6bGFzdC1jaGlsZCB7XHJcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDA7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLm5hdl9fbGluayB7XHJcbiAgICAgICAgcGFkZGluZzogMS40cmVtIDA7XHJcblxyXG4gICAgfVxyXG4gICAgLmhlYWRlcl9faGFzaHRhZyB7XHJcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDhyZW07XHJcbiAgICB9XHJcbiAgICAuc29jaWFsIHtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgICBnYXA6IDNyZW07XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMnJlbTtcclxuICAgIH1cclxuICAgIC5pY29uLWZhY2Vib29rLCAuaWNvbi1pbnN0YWdyYW0sIC5pY29uLXR3aXR0ZXIge1xyXG4gICAgICAgIHdpZHRoOiA0LjhyZW07XHJcbiAgICAgICAgaGVpZ2h0OiA0LjhyZW07XHJcbiAgICB9XHJcbn0iLCIubWFpbl9faW5kZXgge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBiYWNrZ3JvdW5kOiAkY29sb3ItcmVkIHVybCgnLi4vaW1nL2JnLmpwZycpIG5vLXJlcGVhdCB0b3AgLyBjb3ZlcjtcclxuICAgIHBhZGRpbmctbGVmdDogMThyZW07XHJcbn1cclxuXHJcblxyXG4ubG9nbyB7XHJcbiAgICB3aWR0aDogMzIuOXJlbTtcclxufSIsIi5mb290ZXIge1xyXG4gICAgcGFkZGluZzogMXJlbSAwO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgQGluY2x1ZGUgZm9udCg0MDAsIC45cmVtLCAxLjFyZW0pO1xyXG4gICAgbGV0dGVyLXNwYWNpbmc6IDAuMDJyZW07XHJcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG59XHJcblxyXG4uZm9vdGVyX19saW5rcyB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogLjZyZW07XHJcbiAgICBnYXA6IDIuMXJlbTtcclxufVxyXG5cclxuLmZvb3Rlcl9fY29weXJpZ2h0IHtcclxuICAgIGNvbG9yOiAkY29sb3ItZ3JleTtcclxufSJdfQ== */