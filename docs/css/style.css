@font-face {
  font-family: "Roboto";
  font-weight: 400;
  font-style: normal;
  font-display: swap;
  src: url("../fonts/Roboto-Regular.eot");
  src: local("Roboto"), url("../fonts/Roboto-Regular.eot?#iefix") format("embedded-opentype"), url("../fonts/Roboto-Regular.woff2") format("woff2"), url("../fonts/Roboto-Regular.woff") format("woff"), url("../fonts/Roboto-Regular.ttf") format("truetype");
}

@font-face {
  font-family: "Roboto";
  font-weight: 500;
  font-style: normal;
  font-display: swap;
  src: url("../fonts/Roboto-Medium.eot");
  src: local("Roboto"), url("../fonts/Roboto-Medium.eot?#iefix") format("embedded-opentype"), url("../fonts/Roboto-Medium.woff2") format("woff2"), url("../fonts/Roboto-Medium.woff") format("woff"), url("../fonts/Roboto-Medium.ttf") format("truetype");
}

html {
  font: normal normal 0.694445vw Roboto, sans-serif;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  scroll-behavior: smooth;
  text-rendering: auto;
  margin: 0;
  padding: 0;
  height: 100%;
  -webkit-text-size-adjust: 100%;
}

*,
*::after,
*::before {
  -webkit-box-sizing: inherit;
  box-sizing: inherit;
}

*:focus:not(:focus-visible) {
  outline: none;
}

body {
  background: #000000;
  font-style: normal;
  font-weight: normal;
  text-rendering: auto;
  margin: 0;
  padding: 0;
  height: 100%;
  color: #FFFFFF;
}

a,
a:hover {
  text-decoration: none;
}

input,
textarea {
  line-height: inherit;
  margin: 0;
  padding: 0;
}

input,
button {
  border: none;
  outline: none;
  cursor: pointer;
}

button,
input,
a,
textarea {
  outline: none;
  cursor: pointer;
  font: inherit;
  color: inherit;
}

button:focus,
input:focus,
a:focus,
textarea:focus {
  outline: none;
}

button:active,
input:active,
a:active,
textarea:active {
  outline: none;
}

img,
picture {
  width: 100%;
  height: auto;
}

h1,
h2,
h3,
h4,
h5,
h6,
figure,
fieldset {
  font: inherit;
  margin: 0;
  padding: 0;
}

p {
  margin: 0;
}

code,
kbd,
samp {
  font: inherit monospace, monospace;
}

button {
  background: inherit;
  border: none;
  color: inherit;
  font: inherit;
  text-align: inherit;
  padding: 0;
  text-rendering: auto;
}

ul {
  padding: 0;
  margin: 0;
}

ul li {
  margin: 0;
  padding: 0;
  list-style: none;
}

input[type=number]::-webkit-inner-spin-button,
input[type=number]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

input[type=number] {
  -moz-appearance: textfield;
}

.wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  height: 100%;
}

main {
  -webkit-box-flex: 1;
  -ms-flex: 1 0 auto;
  flex: 1 0 auto;
}

footer {
  -webkit-box-flex: 0;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.container {
  width: 129rem;
  margin: 0 auto;
}

.none {
  display: none !important;
}

.block {
  display: block !important;
}

.title {
  text-transform: uppercase;
}

.hamburger {
  display: inline-block;
}

.hamburger .line {
  background: #fff;
  width: 4rem;
  height: 0.5rem;
  display: block;
  margin: 0.5rem auto;
  -webkit-transition: all 0.3s ease-in-out;
  -o-transition: all 0.3s ease-in-out;
  transition: all 0.3s ease-in-out;
}

.hamburger:hover {
  cursor: pointer;
}

.hamburger.active {
  top: 3.8rem;
}

.hamburger.active .line:nth-child(2) {
  opacity: 0;
}

.hamburger.active .line:nth-child(1) {
  -webkit-transform: translateY(1rem) rotate(45deg);
  -ms-transform: translateY(1rem) rotate(45deg);
  transform: translateY(1rem) rotate(45deg);
}

.hamburger.active .line:nth-child(3) {
  -webkit-transform: translateY(-1rem) rotate(-45deg);
  -ms-transform: translateY(-1rem) rotate(-45deg);
  transform: translateY(-1rem) rotate(-45deg);
}

@supports (-webkit-appearance:none) {

}

@media (max-width: 25.875em) {
  html {
    font-size: 1.5625vw;
    -webkit-text-size-adjust: none;
  }

  .container {
    padding: 0 3rem;
    width: 100%;
  }

@supports (-webkit-appearance:none) {

}
}

@media (min-width: 25.9375em) and (max-width: 48em) {
  html {
    font-size: 1.20482vw;
    -webkit-text-size-adjust: none;
  }

  .container {
    padding: 0 3rem;
    width: 100%;
  }

@supports (-webkit-appearance:none) {

}
}

@media (min-width: 48.0625em) and (max-width: 64em) {
  html {
    font-size: 0.651042vw;
    -webkit-text-size-adjust: none;
  }

  .container {
    padding: 0 4rem;
    width: 100%;
  }

@supports (-webkit-appearance:none) {

}
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */